{-# LANGUAGE OverloadedStrings #-}
-- automatically generated by hblend from a .blend file.
module  Data.Blend.B245 where
import Data.Int
import Data.ByteString (ByteString)
import qualified Data.ByteString.Lazy as LB
import qualified Data.ByteString.Char8 as BC
import Data.Binary
import Data.Binary.Get (getByteString, getWord32le, runGet)
import Control.Monad (replicateM)
import Data.Blend hiding (Block)
sLink:: Struct
sLink = ("Link",
  [ ("next", Ref (Compound sLink))
  , ("prev", Ref (Compound sLink))
  ])

sListBase:: Struct
sListBase = ("ListBase",
  [ ("first", Ref (RefVoid))
  , ("last", Ref (RefVoid))
  ])

svec2s:: Struct
svec2s = ("vec2s",
  [ ("x", Short)
  , ("y", Short)
  ])

svec2i:: Struct
svec2i = ("vec2i",
  [ ("x", Int)
  , ("y", Int)
  ])

svec2f:: Struct
svec2f = ("vec2f",
  [ ("x", Float)
  , ("y", Float)
  ])

svec2d:: Struct
svec2d = ("vec2d",
  [ ("x", Double)
  , ("y", Double)
  ])

svec3i:: Struct
svec3i = ("vec3i",
  [ ("x", Int)
  , ("y", Int)
  , ("z", Int)
  ])

svec3f:: Struct
svec3f = ("vec3f",
  [ ("x", Float)
  , ("y", Float)
  , ("z", Float)
  ])

svec3d:: Struct
svec3d = ("vec3d",
  [ ("x", Double)
  , ("y", Double)
  , ("z", Double)
  ])

svec4i:: Struct
svec4i = ("vec4i",
  [ ("x", Int)
  , ("y", Int)
  , ("z", Int)
  , ("w", Int)
  ])

svec4f:: Struct
svec4f = ("vec4f",
  [ ("x", Float)
  , ("y", Float)
  , ("z", Float)
  , ("w", Float)
  ])

svec4d:: Struct
svec4d = ("vec4d",
  [ ("x", Double)
  , ("y", Double)
  , ("z", Double)
  , ("w", Double)
  ])

srcti:: Struct
srcti = ("rcti",
  [ ("xmin", Int)
  , ("xmax", Int)
  , ("ymin", Int)
  , ("ymax", Int)
  ])

srctf:: Struct
srctf = ("rctf",
  [ ("xmin", Float)
  , ("xmax", Float)
  , ("ymin", Float)
  , ("ymax", Float)
  ])

sIDPropertyData:: Struct
sIDPropertyData = ("IDPropertyData",
  [ ("pointer", Ref (RefVoid))
  , ("group", Compound sListBase)
  , ("val", Int)
  , ("pad", Int)
  ])

sIDProperty:: Struct
sIDProperty = ("IDProperty",
  [ ("next", Ref (Compound sIDProperty))
  , ("prev", Ref (Compound sIDProperty))
  , ("name", Arr 32 (Char))
  , ("type", Char)
  , ("subtype", Char)
  , ("flag", Short)
  , ("saved", Int)
  , ("data", Compound sIDPropertyData)
  , ("len", Int)
  , ("totallen", Int)
  ])

sID:: Struct
sID = ("ID",
  [ ("next", Ref (RefVoid))
  , ("prev", Ref (RefVoid))
  , ("newid", Ref (Compound sID))
  , ("lib", Ref (Compound sLibrary))
  , ("name", Arr 24 (Char))
  , ("us", Short)
  , ("flag", Short)
  , ("icon_id", Int)
  , ("properties", Ref (Compound sIDProperty))
  ])

sLibrary:: Struct
sLibrary = ("Library",
  [ ("id", Compound sID)
  , ("idblock", Ref (Compound sID))
  , ("filedata", RefVoid {- Ref (UnknownCompound FileData) -})
  , ("name", Arr 240 (Char))
  , ("filename", Arr 240 (Char))
  , ("tot", Int)
  , ("pad", Int)
  , ("parent", Ref (Compound sLibrary))
  ])

sIpo:: Struct
sIpo = ("Ipo",
  [ ("id", Compound sID)
  , ("curve", Compound sListBase)
  , ("cur", Compound srctf)
  , ("blocktype", Short)
  , ("showkey", Short)
  , ("pad", Int)
  ])

sKeyBlock:: Struct
sKeyBlock = ("KeyBlock",
  [ ("next", Ref (Compound sKeyBlock))
  , ("prev", Ref (Compound sKeyBlock))
  , ("pos", Float)
  , ("curval", Float)
  , ("type", Short)
  , ("adrcode", Short)
  , ("totelem", Int)
  , ("data", Ref (RefVoid))
  , ("weights", Ref (Float))
  , ("name", Arr 32 (Char))
  , ("vgroup", Arr 32 (Char))
  , ("slidermin", Float)
  , ("slidermax", Float)
  ])

sKey:: Struct
sKey = ("Key",
  [ ("id", Compound sID)
  , ("refkey", Ref (Compound sKeyBlock))
  , ("elemstr", Arr 32 (Char))
  , ("elemsize", Int)
  , ("curval", Float)
  , ("block", Compound sListBase)
  , ("ipo", Ref (Compound sIpo))
  , ("from", Ref (Compound sID))
  , ("type", Short)
  , ("totkey", Short)
  , ("slurph", Short)
  , ("flag", Short)
  ])

sScriptLink:: Struct
sScriptLink = ("ScriptLink",
  [ ("scripts", Ref (Ref (Compound sID)))
  , ("flag", Ref (Short))
  , ("actscript", Short)
  , ("totscript", Short)
  , ("pad", Int)
  ])

sTextLine:: Struct
sTextLine = ("TextLine",
  [ ("next", Ref (Compound sTextLine))
  , ("prev", Ref (Compound sTextLine))
  , ("line", Ref (Char))
  , ("format", Ref (Char))
  , ("len", Int)
  , ("blen", Int)
  ])

sText:: Struct
sText = ("Text",
  [ ("id", Compound sID)
  , ("name", Ref (Char))
  , ("flags", Int)
  , ("nlines", Int)
  , ("lines", Compound sListBase)
  , ("curl", Ref (Compound sTextLine))
  , ("sell", Ref (Compound sTextLine))
  , ("curc", Int)
  , ("selc", Int)
  , ("undo_buf", Ref (Char))
  , ("undo_pos", Int)
  , ("undo_len", Int)
  , ("compiled", Ref (RefVoid))
  ])

sPackedFile:: Struct
sPackedFile = ("PackedFile",
  [ ("size", Int)
  , ("seek", Int)
  , ("flags", Int)
  , ("pad", Int)
  , ("data", Ref (RefVoid))
  ])

sCamera:: Struct
sCamera = ("Camera",
  [ ("id", Compound sID)
  , ("type", Short)
  , ("flag", Short)
  , ("passepartalpha", Float)
  , ("angle", Float)
  , ("clipsta", Float)
  , ("clipend", Float)
  , ("lens", Float)
  , ("ortho_scale", Float)
  , ("drawsize", Float)
  , ("shiftx", Float)
  , ("shifty", Float)
  , ("YF_dofdist", Float)
  , ("YF_aperture", Float)
  , ("YF_bkhtype", Short)
  , ("YF_bkhbias", Short)
  , ("YF_bkhrot", Float)
  , ("ipo", Ref (Compound sIpo))
  , ("scriptlink", Compound sScriptLink)
  ])

sPreviewImage:: Struct
sPreviewImage = ("PreviewImage",
  [ ("w", Int)
  , ("h", Int)
  , ("rect", Ref (Int))
  ])

sImageUser:: Struct
sImageUser = ("ImageUser",
  [ ("framenr", Int)
  , ("frames", Int)
  , ("offset", Int)
  , ("sfra", Int)
  , ("fie_ima", Short)
  , ("cycl", Short)
  , ("flag", Short)
  , ("ok", Short)
  , ("multi_index", Short)
  , ("layer", Short)
  , ("pass", Short)
  , ("menunr", Short)
  ])

sImage:: Struct
sImage = ("Image",
  [ ("id", Compound sID)
  , ("name", Arr 240 (Char))
  , ("ibufs", Compound sListBase)
  , ("anim", RefVoid {- Ref (UnknownCompound anim) -})
  , ("rr", RefVoid {- Ref (UnknownCompound RenderResult) -})
  , ("ok", Short)
  , ("flag", Short)
  , ("source", Short)
  , ("type", Short)
  , ("pad", Short)
  , ("pad1", Short)
  , ("lastframe", Int)
  , ("tpageflag", Short)
  , ("totbind", Short)
  , ("xrep", Short)
  , ("yrep", Short)
  , ("twsta", Short)
  , ("twend", Short)
  , ("bindcode", Int)
  , ("repbind", Ref (Int))
  , ("packedfile", Ref (Compound sPackedFile))
  , ("preview", Ref (Compound sPreviewImage))
  , ("lastupdate", Float)
  , ("lastused", Int)
  , ("animspeed", Short)
  , ("gen_x", Short)
  , ("gen_y", Short)
  , ("gen_type", Short)
  , ("vnode", Ref (RefVoid))
  ])

sMTex:: Struct
sMTex = ("MTex",
  [ ("texco", Short)
  , ("mapto", Short)
  , ("maptoneg", Short)
  , ("blendtype", Short)
  , ("object", Ref (Compound sObject))
  , ("tex", Ref (Compound sTex))
  , ("uvname", Arr 32 (Char))
  , ("projx", Char)
  , ("projy", Char)
  , ("projz", Char)
  , ("mapping", Char)
  , ("ofs", Arr 3 (Float))
  , ("size", Arr 3 (Float))
  , ("texflag", Short)
  , ("colormodel", Short)
  , ("r", Float)
  , ("g", Float)
  , ("b", Float)
  , ("k", Float)
  , ("def_var", Float)
  , ("colfac", Float)
  , ("norfac", Float)
  , ("varfac", Float)
  , ("dispfac", Float)
  , ("warpfac", Float)
  ])

sPluginTex:: Struct
sPluginTex = ("PluginTex",
  [ ("name", Arr 160 (Char))
  , ("handle", Ref (RefVoid))
  , ("pname", Ref (Char))
  , ("stnames", Ref (Char))
  , ("stypes", Int)
  , ("vars", Int)
  , ("varstr", Ref (RefVoid))
  , ("result", Ref (Float))
  , ("cfra", Ref (Float))
  , ("data", Arr 32 (Float))
  , ("doit", FunPtr (Int))
  , ("instance_init", FunPtr (RefVoid))
  , ("callback", FunPtr (RefVoid))
  , ("version", Int)
  , ("pad", Int)
  ])

sCBData:: Struct
sCBData = ("CBData",
  [ ("r", Float)
  , ("g", Float)
  , ("b", Float)
  , ("a", Float)
  , ("pos", Float)
  , ("cur", Int)
  ])

sColorBand:: Struct
sColorBand = ("ColorBand",
  [ ("flag", Short)
  , ("tot", Short)
  , ("cur", Short)
  , ("ipotype", Short)
  , ("data", Arr 32 (Compound sCBData))
  ])

sEnvMap:: Struct
sEnvMap = ("EnvMap",
  [ ("object", Ref (Compound sObject))
  , ("ima", Ref (Compound sImage))
  , ("cube", Arr 6 (RefVoid {- Ref (UnknownCompound ImBuf) -}))
  , ("imat", Arr 4 (Arr 4 (Float)))
  , ("obimat", Arr 3 (Arr 3 (Float)))
  , ("type", Short)
  , ("stype", Short)
  , ("clipsta", Float)
  , ("clipend", Float)
  , ("viewscale", Float)
  , ("notlay", Int)
  , ("cuberes", Short)
  , ("depth", Short)
  , ("ok", Int)
  , ("lastframe", Int)
  , ("recalc", Short)
  , ("lastsize", Short)
  ])

sTex:: Struct
sTex = ("Tex",
  [ ("id", Compound sID)
  , ("noisesize", Float)
  , ("turbul", Float)
  , ("bright", Float)
  , ("contrast", Float)
  , ("rfac", Float)
  , ("gfac", Float)
  , ("bfac", Float)
  , ("filtersize", Float)
  , ("mg_H", Float)
  , ("mg_lacunarity", Float)
  , ("mg_octaves", Float)
  , ("mg_offset", Float)
  , ("mg_gain", Float)
  , ("dist_amount", Float)
  , ("ns_outscale", Float)
  , ("vn_w1", Float)
  , ("vn_w2", Float)
  , ("vn_w3", Float)
  , ("vn_w4", Float)
  , ("vn_mexp", Float)
  , ("vn_distm", Short)
  , ("vn_coltype", Short)
  , ("noisedepth", Short)
  , ("noisetype", Short)
  , ("noisebasis", Short)
  , ("noisebasis2", Short)
  , ("imaflag", Short)
  , ("flag", Short)
  , ("type", Short)
  , ("stype", Short)
  , ("cropxmin", Float)
  , ("cropymin", Float)
  , ("cropxmax", Float)
  , ("cropymax", Float)
  , ("xrepeat", Short)
  , ("yrepeat", Short)
  , ("extend", Short)
  , ("fie_ima", Short)
  , ("len", Int)
  , ("frames", Int)
  , ("offset", Int)
  , ("sfra", Int)
  , ("checkerdist", Float)
  , ("nabla", Float)
  , ("norfac", Float)
  , ("iuser", Compound sImageUser)
  , ("ipo", Ref (Compound sIpo))
  , ("ima", Ref (Compound sImage))
  , ("plugin", Ref (Compound sPluginTex))
  , ("coba", Ref (Compound sColorBand))
  , ("env", Ref (Compound sEnvMap))
  ])

sTexMapping:: Struct
sTexMapping = ("TexMapping",
  [ ("loc", Arr 3 (Float))
  , ("rot", Arr 3 (Float))
  , ("size", Arr 3 (Float))
  , ("flag", Int)
  , ("mat", Arr 4 (Arr 4 (Float)))
  , ("min", Arr 3 (Float))
  , ("max", Arr 3 (Float))
  , ("ob", Ref (Compound sObject))
  ])

sLamp:: Struct
sLamp = ("Lamp",
  [ ("id", Compound sID)
  , ("type", Short)
  , ("mode", Short)
  , ("colormodel", Short)
  , ("totex", Short)
  , ("r", Float)
  , ("g", Float)
  , ("b", Float)
  , ("k", Float)
  , ("energy", Float)
  , ("dist", Float)
  , ("spotsize", Float)
  , ("spotblend", Float)
  , ("haint", Float)
  , ("att1", Float)
  , ("att2", Float)
  , ("clipsta", Float)
  , ("clipend", Float)
  , ("shadspotsize", Float)
  , ("bias", Float)
  , ("soft", Float)
  , ("bufsize", Short)
  , ("samp", Short)
  , ("buffers", Short)
  , ("filtertype", Short)
  , ("bufflag", Char)
  , ("buftype", Char)
  , ("ray_samp", Short)
  , ("ray_sampy", Short)
  , ("ray_sampz", Short)
  , ("ray_samp_type", Short)
  , ("area_shape", Short)
  , ("area_size", Float)
  , ("area_sizey", Float)
  , ("area_sizez", Float)
  , ("texact", Short)
  , ("shadhalostep", Short)
  , ("YF_numphotons", Int)
  , ("YF_numsearch", Int)
  , ("YF_phdepth", Short)
  , ("YF_useqmc", Short)
  , ("YF_bufsize", Short)
  , ("YF_pad", Short)
  , ("YF_causticblur", Float)
  , ("YF_ltradius", Float)
  , ("YF_glowint", Float)
  , ("YF_glowofs", Float)
  , ("YF_glowtype", Short)
  , ("YF_pad2", Short)
  , ("mtex", Arr 10 (Ref (Compound sMTex)))
  , ("ipo", Ref (Compound sIpo))
  , ("scriptlink", Compound sScriptLink)
  ])

sWave:: Struct
sWave = ("Wave",
  [ ("id", Compound sID)
  , ("ipo", Ref (Compound sIpo))
  ])

sMaterial:: Struct
sMaterial = ("Material",
  [ ("id", Compound sID)
  , ("colormodel", Short)
  , ("flag", Short)
  , ("r", Float)
  , ("g", Float)
  , ("b", Float)
  , ("specr", Float)
  , ("specg", Float)
  , ("specb", Float)
  , ("mirr", Float)
  , ("mirg", Float)
  , ("mirb", Float)
  , ("ambr", Float)
  , ("ambb", Float)
  , ("ambg", Float)
  , ("amb", Float)
  , ("emit", Float)
  , ("ang", Float)
  , ("spectra", Float)
  , ("ray_mirror", Float)
  , ("alpha", Float)
  , ("ref", Float)
  , ("spec", Float)
  , ("zoffs", Float)
  , ("add", Float)
  , ("translucency", Float)
  , ("fresnel_mir", Float)
  , ("fresnel_mir_i", Float)
  , ("fresnel_tra", Float)
  , ("fresnel_tra_i", Float)
  , ("filter", Float)
  , ("tx_limit", Float)
  , ("tx_falloff", Float)
  , ("ray_depth", Short)
  , ("ray_depth_tra", Short)
  , ("har", Short)
  , ("seed1", Char)
  , ("seed2", Char)
  , ("mode", Int)
  , ("mode_l", Int)
  , ("flarec", Short)
  , ("starc", Short)
  , ("linec", Short)
  , ("ringc", Short)
  , ("hasize", Float)
  , ("flaresize", Float)
  , ("subsize", Float)
  , ("flareboost", Float)
  , ("strand_sta", Float)
  , ("strand_end", Float)
  , ("strand_ease", Float)
  , ("sbias", Float)
  , ("shad_alpha", Float)
  , ("padf", Float)
  , ("rgbsel", Char)
  , ("texact", Char)
  , ("pr_type", Char)
  , ("use_nodes", Char)
  , ("pr_back", Short)
  , ("pr_lamp", Short)
  , ("septex", Short)
  , ("ml_flag", Short)
  , ("diff_shader", Short)
  , ("spec_shader", Short)
  , ("roughness", Float)
  , ("refrac", Float)
  , ("param", Arr 4 (Float))
  , ("rms", Float)
  , ("darkness", Float)
  , ("texco", Short)
  , ("mapto", Short)
  , ("ramp_col", Ref (Compound sColorBand))
  , ("ramp_spec", Ref (Compound sColorBand))
  , ("rampin_col", Char)
  , ("rampin_spec", Char)
  , ("rampblend_col", Char)
  , ("rampblend_spec", Char)
  , ("ramp_show", Short)
  , ("pad3", Short)
  , ("rampfac_col", Float)
  , ("rampfac_spec", Float)
  , ("mtex", Arr 10 (Ref (Compound sMTex)))
  , ("nodetree", Ref (Compound sbNodeTree))
  , ("ipo", Ref (Compound sIpo))
  , ("group", Ref (Compound sGroup))
  , ("friction", Float)
  , ("fh", Float)
  , ("reflect", Float)
  , ("fhdist", Float)
  , ("xyfrict", Float)
  , ("dynamode", Short)
  , ("pad2", Short)
  , ("sss_radius", Arr 3 (Float))
  , ("sss_col", Arr 3 (Float))
  , ("sss_error", Float)
  , ("sss_scale", Float)
  , ("sss_ior", Float)
  , ("sss_colfac", Float)
  , ("sss_texfac", Float)
  , ("sss_front", Float)
  , ("sss_back", Float)
  , ("sss_flag", Short)
  , ("sss_preset", Short)
  , ("YF_ar", Float)
  , ("YF_ag", Float)
  , ("YF_ab", Float)
  , ("YF_dscale", Float)
  , ("YF_dpwr", Float)
  , ("YF_dsmp", Int)
  , ("YF_preset", Int)
  , ("YF_djit", Int)
  , ("scriptlink", Compound sScriptLink)
  ])

sVFont:: Struct
sVFont = ("VFont",
  [ ("id", Compound sID)
  , ("name", Arr 256 (Char))
  , ("scale", Float)
  , ("pad", Float)
  , ("data", RefVoid {- Ref (UnknownCompound VFontData) -})
  , ("packedfile", Ref (Compound sPackedFile))
  ])

sMetaElem:: Struct
sMetaElem = ("MetaElem",
  [ ("next", Ref (Compound sMetaElem))
  , ("prev", Ref (Compound sMetaElem))
  , ("bb", Ref (Compound sBoundBox))
  , ("i1", Int)
  , ("j1", Int)
  , ("k1", Int)
  , ("i2", Int)
  , ("j2", Int)
  , ("k2", Int)
  , ("type", Short)
  , ("flag", Short)
  , ("selcol1", Short)
  , ("selcol2", Short)
  , ("x", Float)
  , ("y", Float)
  , ("z", Float)
  , ("quat", Arr 4 (Float))
  , ("expx", Float)
  , ("expy", Float)
  , ("expz", Float)
  , ("rad", Float)
  , ("rad2", Float)
  , ("s", Float)
  , ("len", Float)
  , ("mat", Ref (Float))
  , ("imat", Ref (Float))
  ])

sMetaBall:: Struct
sMetaBall = ("MetaBall",
  [ ("id", Compound sID)
  , ("bb", Ref (Compound sBoundBox))
  , ("elems", Compound sListBase)
  , ("disp", Compound sListBase)
  , ("ipo", Ref (Compound sIpo))
  , ("mat", Ref (Ref (Compound sMaterial)))
  , ("flag", Short)
  , ("totcol", Short)
  , ("texflag", Int)
  , ("loc", Arr 3 (Float))
  , ("size", Arr 3 (Float))
  , ("rot", Arr 3 (Float))
  , ("wiresize", Float)
  , ("rendersize", Float)
  , ("thresh", Float)
  ])

sBezTriple:: Struct
sBezTriple = ("BezTriple",
  [ ("vec", Arr 3 (Arr 3 (Float)))
  , ("alfa", Float)
  , ("weight", Float)
  , ("radius", Float)
  , ("h1", Short)
  , ("h2", Short)
  , ("f1", Char)
  , ("f2", Char)
  , ("f3", Char)
  , ("hide", Char)
  ])

sBPoint:: Struct
sBPoint = ("BPoint",
  [ ("vec", Arr 4 (Float))
  , ("alfa", Float)
  , ("weight", Float)
  , ("f1", Short)
  , ("hide", Short)
  , ("radius", Float)
  , ("pad", Float)
  ])

sNurb:: Struct
sNurb = ("Nurb",
  [ ("next", Ref (Compound sNurb))
  , ("prev", Ref (Compound sNurb))
  , ("type", Short)
  , ("mat_nr", Short)
  , ("hide", Short)
  , ("flag", Short)
  , ("pntsu", Short)
  , ("pntsv", Short)
  , ("resolu", Short)
  , ("resolv", Short)
  , ("orderu", Short)
  , ("orderv", Short)
  , ("flagu", Short)
  , ("flagv", Short)
  , ("knotsu", Ref (Float))
  , ("knotsv", Ref (Float))
  , ("bp", Ref (Compound sBPoint))
  , ("bezt", Ref (Compound sBezTriple))
  , ("charidx", Int)
  , ("pad", Int)
  ])

sCharInfo:: Struct
sCharInfo = ("CharInfo",
  [ ("kern", Short)
  , ("mat_nr", Short)
  , ("flag", Char)
  , ("pad", Char)
  , ("pad2", Short)
  ])

sTextBox:: Struct
sTextBox = ("TextBox",
  [ ("x", Float)
  , ("y", Float)
  , ("w", Float)
  , ("h", Float)
  ])

sCurve:: Struct
sCurve = ("Curve",
  [ ("id", Compound sID)
  , ("bb", Ref (Compound sBoundBox))
  , ("nurb", Compound sListBase)
  , ("disp", Compound sListBase)
  , ("bevobj", Ref (Compound sObject))
  , ("taperobj", Ref (Compound sObject))
  , ("textoncurve", Ref (Compound sObject))
  , ("ipo", Ref (Compound sIpo))
  , ("path", RefVoid {- Ref (UnknownCompound Path) -})
  , ("key", Ref (Compound sKey))
  , ("mat", Ref (Ref (Compound sMaterial)))
  , ("bev", Compound sListBase)
  , ("loc", Arr 3 (Float))
  , ("size", Arr 3 (Float))
  , ("rot", Arr 3 (Float))
  , ("texflag", Int)
  , ("pathlen", Short)
  , ("totcol", Short)
  , ("flag", Short)
  , ("bevresol", Short)
  , ("width", Float)
  , ("ext1", Float)
  , ("ext2", Float)
  , ("resolu", Short)
  , ("resolv", Short)
  , ("resolu_ren", Short)
  , ("resolv_ren", Short)
  , ("pad2", Int)
  , ("len", Short)
  , ("lines", Short)
  , ("pos", Short)
  , ("spacemode", Short)
  , ("spacing", Float)
  , ("linedist", Float)
  , ("shear", Float)
  , ("fsize", Float)
  , ("wordspace", Float)
  , ("ulpos", Float)
  , ("ulheight", Float)
  , ("xof", Float)
  , ("yof", Float)
  , ("linewidth", Float)
  , ("str", Ref (Char))
  , ("family", Arr 24 (Char))
  , ("vfont", Ref (Compound sVFont))
  , ("vfontb", Ref (Compound sVFont))
  , ("vfonti", Ref (Compound sVFont))
  , ("vfontbi", Ref (Compound sVFont))
  , ("sepchar", Int)
  , ("totbox", Int)
  , ("actbox", Int)
  , ("pad", Int)
  , ("tb", Ref (Compound sTextBox))
  , ("selstart", Int)
  , ("selend", Int)
  , ("strinfo", Ref (Compound sCharInfo))
  , ("curinfo", Compound sCharInfo)
  ])

sIpoDriver:: Struct
sIpoDriver = ("IpoDriver",
  [ ("ob", Ref (Compound sObject))
  , ("blocktype", Short)
  , ("adrcode", Short)
  , ("type", Short)
  , ("flag", Short)
  , ("name", Arr 128 (Char))
  ])

sIpoCurve:: Struct
sIpoCurve = ("IpoCurve",
  [ ("next", Ref (Compound sIpoCurve))
  , ("prev", Ref (Compound sIpoCurve))
  , ("bp", Ref (Compound sBPoint))
  , ("bezt", Ref (Compound sBezTriple))
  , ("maxrct", Compound srctf)
  , ("totrct", Compound srctf)
  , ("blocktype", Short)
  , ("adrcode", Short)
  , ("vartype", Short)
  , ("totvert", Short)
  , ("ipo", Short)
  , ("extrap", Short)
  , ("flag", Short)
  , ("rt", Short)
  , ("ymin", Float)
  , ("ymax", Float)
  , ("bitmask", Int)
  , ("slide_min", Float)
  , ("slide_max", Float)
  , ("curval", Float)
  , ("driver", Ref (Compound sIpoDriver))
  ])

sMesh:: Struct
sMesh = ("Mesh",
  [ ("id", Compound sID)
  , ("bb", Ref (Compound sBoundBox))
  , ("effect", Compound sListBase)
  , ("ipo", Ref (Compound sIpo))
  , ("key", Ref (Compound sKey))
  , ("mat", Ref (Ref (Compound sMaterial)))
  , ("mface", Ref (Compound sMFace))
  , ("mtface", Ref (Compound sMTFace))
  , ("tface", Ref (Compound sTFace))
  , ("mvert", Ref (Compound sMVert))
  , ("medge", Ref (Compound sMEdge))
  , ("dvert", Ref (Compound sMDeformVert))
  , ("mcol", Ref (Compound sMCol))
  , ("msticky", Ref (Compound sMSticky))
  , ("texcomesh", Ref (Compound sMesh))
  , ("mselect", Ref (Compound sMSelect))
  , ("oc", Ref (Compound sOcInfo))
  , ("sumohandle", Ref (RefVoid))
  , ("vdata", Compound sCustomData)
  , ("edata", Compound sCustomData)
  , ("fdata", Compound sCustomData)
  , ("totvert", Int)
  , ("totedge", Int)
  , ("totface", Int)
  , ("totselect", Int)
  , ("pad2", Int)
  , ("texflag", Int)
  , ("loc", Arr 3 (Float))
  , ("size", Arr 3 (Float))
  , ("rot", Arr 3 (Float))
  , ("cubemapsize", Float)
  , ("pad", Float)
  , ("smoothresh", Short)
  , ("flag", Short)
  , ("subdiv", Short)
  , ("subdivr", Short)
  , ("totcol", Short)
  , ("subsurftype", Short)
  , ("mr", Ref (Compound sMultires))
  , ("pv", Ref (Compound sPartialVisibility))
  , ("vnode", Ref (RefVoid))
  ])

sTFace:: Struct
sTFace = ("TFace",
  [ ("tpage", Ref (RefVoid))
  , ("uv", Arr 2 (Arr 4 (Float)))
  , ("col", Arr 4 (Int))
  , ("flag", Char)
  , ("transp", Char)
  , ("mode", Short)
  , ("tile", Short)
  , ("unwrap", Short)
  ])

sMFace:: Struct
sMFace = ("MFace",
  [ ("v1", Int)
  , ("v2", Int)
  , ("v3", Int)
  , ("v4", Int)
  , ("pad", Char)
  , ("mat_nr", Char)
  , ("edcode", Char)
  , ("flag", Char)
  ])

sMEdge:: Struct
sMEdge = ("MEdge",
  [ ("v1", Int)
  , ("v2", Int)
  , ("crease", Char)
  , ("pad", Char)
  , ("flag", Short)
  ])

sMDeformWeight:: Struct
sMDeformWeight = ("MDeformWeight",
  [ ("def_nr", Int)
  , ("weight", Float)
  ])

sMDeformVert:: Struct
sMDeformVert = ("MDeformVert",
  [ ("dw", Ref (Compound sMDeformWeight))
  , ("totweight", Int)
  , ("flag", Int)
  ])

sMVert:: Struct
sMVert = ("MVert",
  [ ("co", Arr 3 (Float))
  , ("no", Arr 3 (Short))
  , ("flag", Char)
  , ("mat_nr", Char)
  ])

sMCol:: Struct
sMCol = ("MCol",
  [ ("a", Char)
  , ("r", Char)
  , ("g", Char)
  , ("b", Char)
  ])

sMSticky:: Struct
sMSticky = ("MSticky",
  [ ("co", Arr 2 (Float))
  ])

sMSelect:: Struct
sMSelect = ("MSelect",
  [ ("index", Int)
  , ("type", Int)
  ])

sMTFace:: Struct
sMTFace = ("MTFace",
  [ ("uv", Arr 2 (Arr 4 (Float)))
  , ("tpage", Ref (Compound sImage))
  , ("flag", Char)
  , ("transp", Char)
  , ("mode", Short)
  , ("tile", Short)
  , ("unwrap", Short)
  ])

sMultiresCol:: Struct
sMultiresCol = ("MultiresCol",
  [ ("a", Float)
  , ("r", Float)
  , ("g", Float)
  , ("b", Float)
  ])

sMultiresColFace:: Struct
sMultiresColFace = ("MultiresColFace",
  [ ("col", Arr 4 (Compound sMultiresCol))
  ])

sMultiresFace:: Struct
sMultiresFace = ("MultiresFace",
  [ ("v", Arr 4 (Int))
  , ("mid", Int)
  , ("childrenstart", Int)
  , ("flag", Char)
  , ("mat_nr", Char)
  , ("pad", Arr 2 (Char))
  ])

sMultiresEdge:: Struct
sMultiresEdge = ("MultiresEdge",
  [ ("v", Arr 2 (Int))
  , ("mid", Int)
  ])

sMultiresLevel:: Struct
sMultiresLevel = ("MultiresLevel",
  [ ("next", Ref (Compound sMultiresLevel))
  , ("prev", Ref (Compound sMultiresLevel))
  , ("verts", Ref (Compound sMVert))
  , ("faces", Ref (Compound sMultiresFace))
  , ("colfaces", Ref (Compound sMultiresColFace))
  , ("edges", Ref (Compound sMultiresEdge))
  , ("vert_edge_map", Ref (Compound sListBase))
  , ("vert_face_map", Ref (Compound sListBase))
  , ("map_mem", RefVoid {- Ref (UnknownCompound MultiresMapNode) -})
  , ("totvert", Int)
  , ("totface", Int)
  , ("totedge", Int)
  , ("pad", Int)
  ])

sMultires:: Struct
sMultires = ("Multires",
  [ ("levels", Compound sListBase)
  , ("level_count", Char)
  , ("current", Char)
  , ("newlvl", Char)
  , ("edgelvl", Char)
  , ("pinlvl", Char)
  , ("renderlvl", Char)
  , ("use_col", Char)
  , ("pad", Char)
  , ("vdata", Compound sCustomData)
  , ("fdata", Compound sCustomData)
  , ("edge_flags", Ref (Short))
  , ("edge_creases", Ref (Char))
  ])

sPartialVisibility:: Struct
sPartialVisibility = ("PartialVisibility",
  [ ("vert_map", Ref (Int))
  , ("edge_map", Ref (Int))
  , ("old_faces", Ref (Compound sMFace))
  , ("old_edges", Ref (Compound sMEdge))
  , ("totface", Int)
  , ("totedge", Int)
  , ("totvert", Int)
  , ("pad", Int)
  ])

sModifierData:: Struct
sModifierData = ("ModifierData",
  [ ("next", Ref (Compound sModifierData))
  , ("prev", Ref (Compound sModifierData))
  , ("type", Int)
  , ("mode", Int)
  , ("name", Arr 32 (Char))
  , ("error", Ref (Char))
  ])

sSubsurfModifierData:: Struct
sSubsurfModifierData = ("SubsurfModifierData",
  [ ("modifier", Compound sModifierData)
  , ("subdivType", Short)
  , ("levels", Short)
  , ("renderLevels", Short)
  , ("flags", Short)
  , ("emCache", Ref (RefVoid))
  , ("mCache", Ref (RefVoid))
  ])

sLatticeModifierData:: Struct
sLatticeModifierData = ("LatticeModifierData",
  [ ("modifier", Compound sModifierData)
  , ("object", Ref (Compound sObject))
  , ("name", Arr 32 (Char))
  ])

sCurveModifierData:: Struct
sCurveModifierData = ("CurveModifierData",
  [ ("modifier", Compound sModifierData)
  , ("object", Ref (Compound sObject))
  , ("name", Arr 32 (Char))
  , ("defaxis", Short)
  , ("pad", Arr 6 (Char))
  ])

sBuildModifierData:: Struct
sBuildModifierData = ("BuildModifierData",
  [ ("modifier", Compound sModifierData)
  , ("start", Float)
  , ("length", Float)
  , ("randomize", Int)
  , ("seed", Int)
  ])

sArrayModifierData:: Struct
sArrayModifierData = ("ArrayModifierData",
  [ ("modifier", Compound sModifierData)
  , ("start_cap", Ref (Compound sObject))
  , ("end_cap", Ref (Compound sObject))
  , ("curve_ob", Ref (Compound sObject))
  , ("offset_ob", Ref (Compound sObject))
  , ("offset", Arr 3 (Float))
  , ("scale", Arr 3 (Float))
  , ("length", Float)
  , ("merge_dist", Float)
  , ("fit_type", Int)
  , ("offset_type", Int)
  , ("flags", Int)
  , ("count", Int)
  ])

sMirrorModifierData:: Struct
sMirrorModifierData = ("MirrorModifierData",
  [ ("modifier", Compound sModifierData)
  , ("axis", Short)
  , ("flag", Short)
  , ("tolerance", Float)
  ])

sEdgeSplitModifierData:: Struct
sEdgeSplitModifierData = ("EdgeSplitModifierData",
  [ ("modifier", Compound sModifierData)
  , ("split_angle", Float)
  , ("flags", Int)
  ])

sDisplaceModifierData:: Struct
sDisplaceModifierData = ("DisplaceModifierData",
  [ ("modifier", Compound sModifierData)
  , ("texture", Ref (Compound sTex))
  , ("strength", Float)
  , ("direction", Int)
  , ("defgrp_name", Arr 32 (Char))
  , ("midlevel", Float)
  , ("texmapping", Int)
  , ("map_object", Ref (Compound sObject))
  , ("uvlayer_name", Arr 32 (Char))
  , ("uvlayer_tmp", Int)
  , ("pad", Int)
  ])

sUVProjectModifierData:: Struct
sUVProjectModifierData = ("UVProjectModifierData",
  [ ("modifier", Compound sModifierData)
  , ("projectors", Arr 10 (Ref (Compound sObject)))
  , ("image", Ref (Compound sImage))
  , ("flags", Int)
  , ("num_projectors", Int)
  , ("aspectx", Float)
  , ("aspecty", Float)
  , ("uvlayer_name", Arr 32 (Char))
  , ("uvlayer_tmp", Int)
  , ("pad", Int)
  ])

sDecimateModifierData:: Struct
sDecimateModifierData = ("DecimateModifierData",
  [ ("modifier", Compound sModifierData)
  , ("percent", Float)
  , ("faceCount", Int)
  ])

sSmoothModifierData:: Struct
sSmoothModifierData = ("SmoothModifierData",
  [ ("modifier", Compound sModifierData)
  , ("fac", Float)
  , ("defgrp_name", Arr 32 (Char))
  , ("flag", Short)
  , ("repeat", Short)
  ])

sCastModifierData:: Struct
sCastModifierData = ("CastModifierData",
  [ ("modifier", Compound sModifierData)
  , ("object", Ref (Compound sObject))
  , ("fac", Float)
  , ("radius", Float)
  , ("size", Float)
  , ("defgrp_name", Arr 32 (Char))
  , ("flag", Short)
  , ("type", Short)
  ])

sWaveModifierData:: Struct
sWaveModifierData = ("WaveModifierData",
  [ ("modifier", Compound sModifierData)
  , ("objectcenter", Ref (Compound sObject))
  , ("defgrp_name", Arr 32 (Char))
  , ("texture", Ref (Compound sTex))
  , ("map_object", Ref (Compound sObject))
  , ("flag", Short)
  , ("pad", Short)
  , ("startx", Float)
  , ("starty", Float)
  , ("height", Float)
  , ("width", Float)
  , ("narrow", Float)
  , ("speed", Float)
  , ("damp", Float)
  , ("texmapping", Int)
  , ("uvlayer_tmp", Int)
  , ("uvlayer_name", Arr 32 (Char))
  , ("timeoffs", Float)
  , ("lifetime", Float)
  ])

sArmatureModifierData:: Struct
sArmatureModifierData = ("ArmatureModifierData",
  [ ("modifier", Compound sModifierData)
  , ("deformflag", Short)
  , ("pad1", Short)
  , ("pad2", Int)
  , ("object", Ref (Compound sObject))
  , ("defgrp_name", Arr 32 (Char))
  ])

sHookModifierData:: Struct
sHookModifierData = ("HookModifierData",
  [ ("modifier", Compound sModifierData)
  , ("object", Ref (Compound sObject))
  , ("parentinv", Arr 4 (Arr 4 (Float)))
  , ("cent", Arr 3 (Float))
  , ("falloff", Float)
  , ("indexar", Ref (Int))
  , ("totindex", Int)
  , ("force", Float)
  , ("name", Arr 32 (Char))
  ])

sSoftbodyModifierData:: Struct
sSoftbodyModifierData = ("SoftbodyModifierData",
  [ ("modifier", Compound sModifierData)
  ])

sBooleanModifierData:: Struct
sBooleanModifierData = ("BooleanModifierData",
  [ ("modifier", Compound sModifierData)
  , ("object", Ref (Compound sObject))
  , ("operation", Int)
  , ("pad", Int)
  ])

sLattice:: Struct
sLattice = ("Lattice",
  [ ("id", Compound sID)
  , ("pntsu", Short)
  , ("pntsv", Short)
  , ("pntsw", Short)
  , ("flag", Short)
  , ("opntsu", Short)
  , ("opntsv", Short)
  , ("opntsw", Short)
  , ("pad2", Short)
  , ("typeu", Char)
  , ("typev", Char)
  , ("typew", Char)
  , ("type", Char)
  , ("pad", Int)
  , ("fu", Float)
  , ("fv", Float)
  , ("fw", Float)
  , ("du", Float)
  , ("dv", Float)
  , ("dw", Float)
  , ("def", Ref (Compound sBPoint))
  , ("ipo", Ref (Compound sIpo))
  , ("key", Ref (Compound sKey))
  , ("dvert", Ref (Compound sMDeformVert))
  ])

sbDeformGroup:: Struct
sbDeformGroup = ("bDeformGroup",
  [ ("next", Ref (Compound sbDeformGroup))
  , ("prev", Ref (Compound sbDeformGroup))
  , ("name", Arr 32 (Char))
  ])

sBoundBox:: Struct
sBoundBox = ("BoundBox",
  [ ("vec", Arr 3 (Arr 8 (Float)))
  , ("flag", Int)
  , ("pad", Int)
  ])

sOcInfo:: Struct
sOcInfo = ("OcInfo",
  [ ("dvec", Arr 3 (Float))
  , ("size", Arr 3 (Float))
  ])

sLBuf:: Struct
sLBuf = ("LBuf",
  [ ("tot", Short)
  , ("max", Short)
  , ("pad", Int)
  , ("ob", Ref (Ref (Compound sObject)))
  ])

sObject:: Struct
sObject = ("Object",
  [ ("id", Compound sID)
  , ("type", Short)
  , ("partype", Short)
  , ("par1", Int)
  , ("par2", Int)
  , ("par3", Int)
  , ("parsubstr", Arr 32 (Char))
  , ("parent", Ref (Compound sObject))
  , ("track", Ref (Compound sObject))
  , ("proxy", Ref (Compound sObject))
  , ("proxy_group", Ref (Compound sObject))
  , ("proxy_from", Ref (Compound sObject))
  , ("ipo", Ref (Compound sIpo))
  , ("path", RefVoid {- Ref (UnknownCompound Path) -})
  , ("bb", Ref (Compound sBoundBox))
  , ("action", Ref (Compound sbAction))
  , ("pose", Ref (Compound sbPose))
  , ("data", Ref (RefVoid))
  , ("constraintChannels", Compound sListBase)
  , ("effect", Compound sListBase)
  , ("network", Compound sListBase)
  , ("disp", Compound sListBase)
  , ("defbase", Compound sListBase)
  , ("modifiers", Compound sListBase)
  , ("mat", Ref (Ref (Compound sMaterial)))
  , ("loc", Arr 3 (Float))
  , ("dloc", Arr 3 (Float))
  , ("orig", Arr 3 (Float))
  , ("size", Arr 3 (Float))
  , ("dsize", Arr 3 (Float))
  , ("rot", Arr 3 (Float))
  , ("drot", Arr 3 (Float))
  , ("quat", Arr 4 (Float))
  , ("dquat", Arr 4 (Float))
  , ("obmat", Arr 4 (Arr 4 (Float)))
  , ("parentinv", Arr 4 (Arr 4 (Float)))
  , ("imat", Arr 4 (Arr 4 (Float)))
  , ("lay", Int)
  , ("flag", Short)
  , ("colbits", Short)
  , ("transflag", Short)
  , ("ipoflag", Short)
  , ("trackflag", Short)
  , ("upflag", Short)
  , ("nlaflag", Short)
  , ("protectflag", Short)
  , ("ipowin", Short)
  , ("scaflag", Short)
  , ("scavisflag", Short)
  , ("boundtype", Short)
  , ("dupon", Int)
  , ("dupoff", Int)
  , ("dupsta", Int)
  , ("dupend", Int)
  , ("sf", Float)
  , ("ctime", Float)
  , ("mass", Float)
  , ("damping", Float)
  , ("inertia", Float)
  , ("formfactor", Float)
  , ("rdamping", Float)
  , ("sizefac", Float)
  , ("dt", Char)
  , ("dtx", Char)
  , ("totcol", Char)
  , ("actcol", Char)
  , ("empty_drawtype", Char)
  , ("pad1", Arr 7 (Char))
  , ("empty_drawsize", Float)
  , ("scriptlink", Compound sScriptLink)
  , ("prop", Compound sListBase)
  , ("sensors", Compound sListBase)
  , ("controllers", Compound sListBase)
  , ("actuators", Compound sListBase)
  , ("sumohandle", Ref (RefVoid))
  , ("bbsize", Arr 3 (Float))
  , ("index", Short)
  , ("actdef", Short)
  , ("col", Arr 4 (Float))
  , ("gameflag", Int)
  , ("gameflag2", Int)
  , ("softflag", Short)
  , ("recalc", Short)
  , ("anisotropicFriction", Arr 3 (Float))
  , ("constraints", Compound sListBase)
  , ("nlastrips", Compound sListBase)
  , ("hooks", Compound sListBase)
  , ("pd", Ref (Compound sPartDeflect))
  , ("soft", Ref (Compound sSoftBody))
  , ("dup_group", Ref (Compound sGroup))
  , ("fluidsimFlag", Short)
  , ("restrictflag", Short)
  , ("shapenr", Short)
  , ("shapeflag", Short)
  , ("smoothresh", Float)
  , ("recalco", Short)
  , ("pad4", Short)
  , ("fluidsimSettings", Ref (Compound sFluidsimSettings))
  , ("derivedDeform", RefVoid {- Ref (UnknownCompound DerivedMesh) -})
  , ("derivedFinal", RefVoid {- Ref (UnknownCompound DerivedMesh) -})
  , ("lastDataMask", Int)
  , ("pad", Int)
  , ("vnode", Ref (RefVoid))
  ])

sObHook:: Struct
sObHook = ("ObHook",
  [ ("next", Ref (Compound sObHook))
  , ("prev", Ref (Compound sObHook))
  , ("parent", Ref (Compound sObject))
  , ("parentinv", Arr 4 (Arr 4 (Float)))
  , ("mat", Arr 4 (Arr 4 (Float)))
  , ("cent", Arr 3 (Float))
  , ("falloff", Float)
  , ("name", Arr 32 (Char))
  , ("indexar", Ref (Int))
  , ("totindex", Int)
  , ("curindex", Int)
  , ("type", Short)
  , ("active", Short)
  , ("force", Float)
  ])

sPartDeflect:: Struct
sPartDeflect = ("PartDeflect",
  [ ("deflect", Short)
  , ("forcefield", Short)
  , ("flag", Short)
  , ("pad", Short)
  , ("pdef_damp", Float)
  , ("pdef_rdamp", Float)
  , ("pdef_perm", Float)
  , ("f_strength", Float)
  , ("f_power", Float)
  , ("maxdist", Float)
  , ("pdef_sbdamp", Float)
  , ("pdef_sbift", Float)
  , ("pdef_sboft", Float)
  ])

sSBVertex:: Struct
sSBVertex = ("SBVertex",
  [ ("vec", Arr 4 (Float))
  ])

sSoftBody:: Struct
sSoftBody = ("SoftBody",
  [ ("totpoint", Int)
  , ("totspring", Int)
  , ("bpoint", RefVoid {- Ref (UnknownCompound BodyPoint) -})
  , ("bspring", RefVoid {- Ref (UnknownCompound BodySpring) -})
  , ("ctime", Float)
  , ("nodemass", Float)
  , ("grav", Float)
  , ("mediafrict", Float)
  , ("rklimit", Float)
  , ("physics_speed", Float)
  , ("goalspring", Float)
  , ("goalfrict", Float)
  , ("mingoal", Float)
  , ("maxgoal", Float)
  , ("defgoal", Float)
  , ("vertgroup", Short)
  , ("fuzzyness", Short)
  , ("inspring", Float)
  , ("infrict", Float)
  , ("sfra", Int)
  , ("efra", Int)
  , ("interval", Int)
  , ("local", Short)
  , ("solverflags", Short)
  , ("keys", Ref (Ref (Compound sSBVertex)))
  , ("totpointkey", Int)
  , ("totkey", Int)
  , ("secondspring", Float)
  , ("colball", Float)
  , ("balldamp", Float)
  , ("ballstiff", Float)
  , ("sbc_mode", Short)
  , ("aeroedge", Short)
  , ("minloops", Short)
  , ("maxloops", Short)
  , ("choke", Short)
  , ("pad3", Short)
  , ("pad4", Short)
  , ("pad5", Short)
  , ("scratch", RefVoid {- Ref (UnknownCompound SBScratch) -})
  ])

sFluidsimSettings:: Struct
sFluidsimSettings = ("FluidsimSettings",
  [ ("type", Short)
  , ("show_advancedoptions", Short)
  , ("resolutionxyz", Short)
  , ("previewresxyz", Short)
  , ("realsize", Float)
  , ("guiDisplayMode", Short)
  , ("renderDisplayMode", Short)
  , ("viscosityValue", Float)
  , ("viscosityMode", Short)
  , ("viscosityExponent", Short)
  , ("gravx", Float)
  , ("gravy", Float)
  , ("gravz", Float)
  , ("animStart", Float)
  , ("animEnd", Float)
  , ("gstar", Float)
  , ("maxRefine", Int)
  , ("iniVelx", Float)
  , ("iniVely", Float)
  , ("iniVelz", Float)
  , ("orgMesh", Ref (Compound sMesh))
  , ("meshSurface", Ref (Compound sMesh))
  , ("meshBB", Ref (Compound sMesh))
  , ("surfdataPath", Arr 240 (Char))
  , ("bbStart", Arr 3 (Float))
  , ("bbSize", Arr 3 (Float))
  , ("ipo", Ref (Compound sIpo))
  , ("typeFlags", Short)
  , ("domainNovecgen", Char)
  , ("volumeInitType", Char)
  , ("partSlipValue", Float)
  , ("generateTracers", Int)
  , ("generateParticles", Float)
  , ("surfaceSmoothing", Float)
  , ("surfaceSubdivs", Int)
  , ("unusedDNADummy", Int)
  , ("particleInfSize", Float)
  , ("particleInfAlpha", Float)
  , ("farFieldSize", Float)
  , ("meshSurfNormals", Ref (Compound sMVert))
  ])

sWorld:: Struct
sWorld = ("World",
  [ ("id", Compound sID)
  , ("colormodel", Short)
  , ("totex", Short)
  , ("texact", Short)
  , ("mistype", Short)
  , ("horr", Float)
  , ("horg", Float)
  , ("horb", Float)
  , ("hork", Float)
  , ("zenr", Float)
  , ("zeng", Float)
  , ("zenb", Float)
  , ("zenk", Float)
  , ("ambr", Float)
  , ("ambg", Float)
  , ("ambb", Float)
  , ("ambk", Float)
  , ("fastcol", Int)
  , ("exposure", Float)
  , ("exp", Float)
  , ("range", Float)
  , ("linfac", Float)
  , ("logfac", Float)
  , ("gravity", Float)
  , ("activityBoxRadius", Float)
  , ("skytype", Short)
  , ("mode", Short)
  , ("physicsEngine", Int)
  , ("misi", Float)
  , ("miststa", Float)
  , ("mistdist", Float)
  , ("misthi", Float)
  , ("starr", Float)
  , ("starg", Float)
  , ("starb", Float)
  , ("stark", Float)
  , ("starsize", Float)
  , ("starmindist", Float)
  , ("stardist", Float)
  , ("starcolnoise", Float)
  , ("dofsta", Short)
  , ("dofend", Short)
  , ("dofmin", Short)
  , ("dofmax", Short)
  , ("aodist", Float)
  , ("aodistfac", Float)
  , ("aoenergy", Float)
  , ("aobias", Float)
  , ("aomode", Short)
  , ("aosamp", Short)
  , ("aomix", Short)
  , ("aocolor", Short)
  , ("aosphere", Ref (Float))
  , ("aotables", Ref (Float))
  , ("ipo", Ref (Compound sIpo))
  , ("mtex", Arr 10 (Ref (Compound sMTex)))
  , ("scriptlink", Compound sScriptLink)
  ])

sRadio:: Struct
sRadio = ("Radio",
  [ ("hemires", Short)
  , ("maxiter", Short)
  , ("drawtype", Short)
  , ("flag", Short)
  , ("subshootp", Short)
  , ("subshoote", Short)
  , ("nodelim", Short)
  , ("maxsublamp", Short)
  , ("pama", Short)
  , ("pami", Short)
  , ("elma", Short)
  , ("elmi", Short)
  , ("maxnode", Int)
  , ("convergence", Float)
  , ("radfac", Float)
  , ("gamma", Float)
  ])

sBase:: Struct
sBase = ("Base",
  [ ("next", Ref (Compound sBase))
  , ("prev", Ref (Compound sBase))
  , ("lay", Int)
  , ("selcol", Int)
  , ("flag", Int)
  , ("sx", Short)
  , ("sy", Short)
  , ("object", Ref (Compound sObject))
  ])

sAviCodecData:: Struct
sAviCodecData = ("AviCodecData",
  [ ("lpFormat", Ref (RefVoid))
  , ("lpParms", Ref (RefVoid))
  , ("cbFormat", Int)
  , ("cbParms", Int)
  , ("fccType", Int)
  , ("fccHandler", Int)
  , ("dwKeyFrameEvery", Int)
  , ("dwQuality", Int)
  , ("dwBytesPerSecond", Int)
  , ("dwFlags", Int)
  , ("dwInterleaveEvery", Int)
  , ("pad", Int)
  , ("avicodecname", Arr 128 (Char))
  ])

sQuicktimeCodecData:: Struct
sQuicktimeCodecData = ("QuicktimeCodecData",
  [ ("cdParms", Ref (RefVoid))
  , ("pad", Ref (RefVoid))
  , ("cdSize", Int)
  , ("pad2", Int)
  , ("qtcodecname", Arr 128 (Char))
  ])

sFFMpegCodecData:: Struct
sFFMpegCodecData = ("FFMpegCodecData",
  [ ("type", Int)
  , ("codec", Int)
  , ("audio_codec", Int)
  , ("video_bitrate", Int)
  , ("audio_bitrate", Int)
  , ("gop_size", Int)
  , ("flags", Int)
  , ("rc_min_rate", Int)
  , ("rc_max_rate", Int)
  , ("rc_buffer_size", Int)
  , ("mux_packet_size", Int)
  , ("mux_rate", Int)
  ])

sAudioData:: Struct
sAudioData = ("AudioData",
  [ ("mixrate", Int)
  , ("main", Float)
  , ("flag", Short)
  , ("pad", Arr 3 (Short))
  ])

sSceneRenderLayer:: Struct
sSceneRenderLayer = ("SceneRenderLayer",
  [ ("next", Ref (Compound sSceneRenderLayer))
  , ("prev", Ref (Compound sSceneRenderLayer))
  , ("name", Arr 32 (Char))
  , ("mat_override", Ref (Compound sMaterial))
  , ("light_override", Ref (Compound sGroup))
  , ("lay", Int)
  , ("layflag", Int)
  , ("passflag", Int)
  , ("pass_xor", Int)
  ])

sRenderData:: Struct
sRenderData = ("RenderData",
  [ ("avicodecdata", Ref (Compound sAviCodecData))
  , ("qtcodecdata", Ref (Compound sQuicktimeCodecData))
  , ("ffcodecdata", Compound sFFMpegCodecData)
  , ("cfra", Int)
  , ("sfra", Int)
  , ("efra", Int)
  , ("psfra", Int)
  , ("pefra", Int)
  , ("images", Int)
  , ("framapto", Int)
  , ("flag", Short)
  , ("threads", Short)
  , ("ctime", Float)
  , ("framelen", Float)
  , ("blurfac", Float)
  , ("edgeR", Float)
  , ("edgeG", Float)
  , ("edgeB", Float)
  , ("fullscreen", Short)
  , ("xplay", Short)
  , ("yplay", Short)
  , ("freqplay", Short)
  , ("depth", Short)
  , ("attrib", Short)
  , ("rt1", Short)
  , ("rt2", Short)
  , ("stereomode", Short)
  , ("dimensionspreset", Short)
  , ("filtertype", Short)
  , ("size", Short)
  , ("maximsize", Short)
  , ("xsch", Short)
  , ("ysch", Short)
  , ("xasp", Short)
  , ("yasp", Short)
  , ("xparts", Short)
  , ("yparts", Short)
  , ("winpos", Short)
  , ("planes", Short)
  , ("imtype", Short)
  , ("subimtype", Short)
  , ("bufflag", Short)
  , ("quality", Short)
  , ("scemode", Short)
  , ("mode", Int)
  , ("renderer", Short)
  , ("ocres", Short)
  , ("rpad", Arr 2 (Short))
  , ("alphamode", Short)
  , ("osa", Short)
  , ("frs_sec", Short)
  , ("edgeint", Short)
  , ("safety", Compound srctf)
  , ("border", Compound srctf)
  , ("disprect", Compound srcti)
  , ("layers", Compound sListBase)
  , ("actlay", Short)
  , ("pad", Short)
  , ("pad2", Int)
  , ("gauss", Float)
  , ("postmul", Float)
  , ("postgamma", Float)
  , ("posthue", Float)
  , ("postsat", Float)
  , ("dither_intensity", Float)
  , ("bake_osa", Short)
  , ("bake_filter", Short)
  , ("bake_mode", Short)
  , ("bake_flag", Short)
  , ("GIquality", Short)
  , ("GIcache", Short)
  , ("GImethod", Short)
  , ("GIphotons", Short)
  , ("GIdirect", Short)
  , ("YF_AA", Short)
  , ("YFexportxml", Short)
  , ("YF_nobump", Short)
  , ("YF_clamprgb", Short)
  , ("yfpad1", Short)
  , ("GIdepth", Int)
  , ("GIcausdepth", Int)
  , ("GIpixelspersample", Int)
  , ("GIphotoncount", Int)
  , ("GImixphotons", Int)
  , ("GIphotonradius", Float)
  , ("YF_numprocs", Int)
  , ("YF_raydepth", Int)
  , ("YF_AApasses", Int)
  , ("YF_AAsamples", Int)
  , ("GIshadowquality", Float)
  , ("GIrefinement", Float)
  , ("GIpower", Float)
  , ("GIindirpower", Float)
  , ("YF_gamma", Float)
  , ("YF_exposure", Float)
  , ("YF_raybias", Float)
  , ("YF_AApixelsize", Float)
  , ("YF_AAthreshold", Float)
  , ("backbuf", Arr 160 (Char))
  , ("pic", Arr 160 (Char))
  , ("ftype", Arr 160 (Char))
  ])

sGameFraming:: Struct
sGameFraming = ("GameFraming",
  [ ("col", Arr 3 (Float))
  , ("type", Char)
  , ("pad1", Char)
  , ("pad2", Char)
  , ("pad3", Char)
  ])

sTimeMarker:: Struct
sTimeMarker = ("TimeMarker",
  [ ("next", Ref (Compound sTimeMarker))
  , ("prev", Ref (Compound sTimeMarker))
  , ("frame", Int)
  , ("name", Arr 64 (Char))
  , ("flag", Int)
  ])

sImagePaintSettings:: Struct
sImagePaintSettings = ("ImagePaintSettings",
  [ ("brush", Ref (Compound sBrush))
  , ("flag", Short)
  , ("tool", Short)
  , ("pad3", Int)
  ])

sToolSettings:: Struct
sToolSettings = ("ToolSettings",
  [ ("cornertype", Short)
  , ("editbutflag", Short)
  , ("jointrilimit", Float)
  , ("degr", Float)
  , ("step", Short)
  , ("turn", Short)
  , ("extr_offs", Float)
  , ("doublimit", Float)
  , ("segments", Short)
  , ("rings", Short)
  , ("vertices", Short)
  , ("unwrapper", Short)
  , ("uvcalc_radius", Float)
  , ("uvcalc_cubesize", Float)
  , ("uvcalc_mapdir", Short)
  , ("uvcalc_mapalign", Short)
  , ("uvcalc_flag", Short)
  , ("pad2", Short)
  , ("imapaint", Compound sImagePaintSettings)
  , ("select_thresh", Float)
  , ("clean_thresh", Float)
  , ("retopo_mode", Char)
  , ("retopo_paint_tool", Char)
  , ("line_div", Char)
  , ("ellipse_div", Char)
  , ("retopo_hotspot", Char)
  , ("multires_subdiv_type", Char)
  , ("pad4", Arr 2 (Char))
  ])

sBrushData:: Struct
sBrushData = ("BrushData",
  [ ("size", Short)
  , ("strength", Char)
  , ("dir", Char)
  , ("airbrush", Char)
  , ("view", Char)
  , ("pad", Arr 2 (Char))
  ])

sSculptData:: Struct
sSculptData = ("SculptData",
  [ ("session", RefVoid {- Ref (UnknownCompound SculptSession) -})
  , ("mtex", Arr 10 (Ref (Compound sMTex)))
  , ("drawbrush", Compound sBrushData)
  , ("smoothbrush", Compound sBrushData)
  , ("pinchbrush", Compound sBrushData)
  , ("inflatebrush", Compound sBrushData)
  , ("grabbrush", Compound sBrushData)
  , ("layerbrush", Compound sBrushData)
  , ("flattenbrush", Compound sBrushData)
  , ("brush_type", Short)
  , ("texact", Short)
  , ("texnr", Short)
  , ("spacing", Short)
  , ("texrept", Char)
  , ("texfade", Char)
  , ("texsep", Char)
  , ("averaging", Char)
  , ("draw_flag", Char)
  , ("tablet_size", Char)
  , ("tablet_strength", Char)
  , ("symm", Char)
  ])

sScene:: Struct
sScene = ("Scene",
  [ ("id", Compound sID)
  , ("camera", Ref (Compound sObject))
  , ("world", Ref (Compound sWorld))
  , ("set", Ref (Compound sScene))
  , ("ima", Ref (Compound sImage))
  , ("base", Compound sListBase)
  , ("basact", Ref (Compound sBase))
  , ("cursor", Arr 3 (Float))
  , ("twcent", Arr 3 (Float))
  , ("twmin", Arr 3 (Float))
  , ("twmax", Arr 3 (Float))
  , ("lay", Int)
  , ("editbutsize", Float)
  , ("selectmode", Short)
  , ("proportional", Short)
  , ("prop_mode", Short)
  , ("use_nodes", Short)
  , ("nodetree", Ref (Compound sbNodeTree))
  , ("ed", Ref (RefVoid))
  , ("radio", Ref (Compound sRadio))
  , ("sumohandle", Ref (RefVoid))
  , ("framing", Compound sGameFraming)
  , ("toolsettings", Ref (Compound sToolSettings))
  , ("r", Compound sRenderData)
  , ("audio", Compound sAudioData)
  , ("scriptlink", Compound sScriptLink)
  , ("markers", Compound sListBase)
  , ("jumpframe", Short)
  , ("pad1", Short)
  , ("pad2", Short)
  , ("pad3", Short)
  , ("theDag", RefVoid {- Ref (UnknownCompound DagForest) -})
  , ("dagisvalid", Short)
  , ("dagflags", Short)
  , ("pad4", Short)
  , ("recalc", Short)
  , ("sculptdata", Compound sSculptData)
  ])

sBGpic:: Struct
sBGpic = ("BGpic",
  [ ("ima", Ref (Compound sImage))
  , ("iuser", Compound sImageUser)
  , ("xof", Float)
  , ("yof", Float)
  , ("size", Float)
  , ("zoom", Float)
  , ("blend", Float)
  , ("xim", Short)
  , ("yim", Short)
  ])

sView3D:: Struct
sView3D = ("View3D",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("blockhandler", Arr 8 (Short))
  , ("viewmat", Arr 4 (Arr 4 (Float)))
  , ("viewinv", Arr 4 (Arr 4 (Float)))
  , ("persmat", Arr 4 (Arr 4 (Float)))
  , ("persinv", Arr 4 (Arr 4 (Float)))
  , ("winmat1", Arr 4 (Arr 4 (Float)))
  , ("viewmat1", Arr 4 (Arr 4 (Float)))
  , ("viewquat", Arr 4 (Float))
  , ("dist", Float)
  , ("zfac", Float)
  , ("pad0", Float)
  , ("persp", Short)
  , ("view", Short)
  , ("camera", Ref (Compound sObject))
  , ("ob_centre", Ref (Compound sObject))
  , ("bgpic", Ref (Compound sBGpic))
  , ("localvd", Ref (Compound sView3D))
  , ("ri", RefVoid {- Ref (UnknownCompound RenderInfo) -})
  , ("retopo_view_data", RefVoid {- Ref (UnknownCompound RetopoViewData) -})
  , ("depths", RefVoid {- Ref (UnknownCompound ViewDepths) -})
  , ("ob_centre_bone", Arr 32 (Char))
  , ("drawtype", Short)
  , ("localview", Short)
  , ("lay", Int)
  , ("layact", Int)
  , ("scenelock", Short)
  , ("around", Short)
  , ("camzoom", Short)
  , ("pivot_last", Char)
  , ("pad1", Char)
  , ("lens", Float)
  , ("grid", Float)
  , ("gridview", Float)
  , ("pixsize", Float)
  , ("near", Float)
  , ("far", Float)
  , ("camdx", Float)
  , ("camdy", Float)
  , ("ofs", Arr 3 (Float))
  , ("cursor", Arr 3 (Float))
  , ("gridlines", Short)
  , ("viewbut", Short)
  , ("gridflag", Short)
  , ("modeselect", Short)
  , ("menunr", Short)
  , ("texnr", Short)
  , ("twtype", Short)
  , ("twmode", Short)
  , ("twflag", Short)
  , ("twdrawflag", Short)
  , ("twmat", Arr 4 (Arr 4 (Float)))
  , ("clip", Arr 4 (Arr 4 (Float)))
  , ("clipbb", Ref (Compound sBoundBox))
  , ("afterdraw", Compound sListBase)
  , ("zbuf", Short)
  , ("transp", Short)
  , ("xray", Short)
  , ("flag", Short)
  , ("flag2", Short)
  , ("gridsubdiv", Short)
  , ("snap_target", Short)
  , ("pad2", Short)
  , ("properties_storage", Ref (RefVoid))
  ])

sView2D:: Struct
sView2D = ("View2D",
  [ ("tot", Compound srctf)
  , ("cur", Compound srctf)
  , ("vert", Compound srcti)
  , ("hor", Compound srcti)
  , ("mask", Compound srcti)
  , ("min", Arr 2 (Float))
  , ("max", Arr 2 (Float))
  , ("minzoom", Float)
  , ("maxzoom", Float)
  , ("scroll", Short)
  , ("keeptot", Short)
  , ("keepaspect", Short)
  , ("keepzoom", Short)
  , ("oldwinx", Short)
  , ("oldwiny", Short)
  , ("flag", Int)
  ])

sSpaceLink:: Struct
sSpaceLink = ("SpaceLink",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("blockhandler", Arr 8 (Short))
  ])

sSpaceInfo:: Struct
sSpaceInfo = ("SpaceInfo",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("blockhandler", Arr 8 (Short))
  ])

sSpaceIpo:: Struct
sSpaceIpo = ("SpaceIpo",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("blockhandler", Arr 8 (Short))
  , ("rowbut", Int)
  , ("pad2", Int)
  , ("v2d", Compound sView2D)
  , ("editipo", Ref (RefVoid))
  , ("ipokey", Compound sListBase)
  , ("ipo", Ref (Compound sIpo))
  , ("from", Ref (Compound sID))
  , ("actname", Arr 32 (Char))
  , ("constname", Arr 32 (Char))
  , ("totipo", Short)
  , ("pin", Short)
  , ("butofs", Short)
  , ("channel", Short)
  , ("showkey", Short)
  , ("blocktype", Short)
  , ("menunr", Short)
  , ("lock", Short)
  , ("flag", Int)
  , ("median", Arr 3 (Float))
  , ("tot", Compound srctf)
  ])

sSpaceButs:: Struct
sSpaceButs = ("SpaceButs",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("ri", RefVoid {- Ref (UnknownCompound RenderInfo) -})
  , ("blockhandler", Arr 8 (Short))
  , ("cursens", Short)
  , ("curact", Short)
  , ("align", Short)
  , ("tabo", Short)
  , ("v2d", Compound sView2D)
  , ("mainb", Short)
  , ("menunr", Short)
  , ("pin", Short)
  , ("mainbo", Short)
  , ("lockpoin", Ref (RefVoid))
  , ("texnr", Short)
  , ("texfrom", Char)
  , ("showgroup", Char)
  , ("modeltype", Short)
  , ("scriptblock", Short)
  , ("scaflag", Short)
  , ("re_align", Short)
  , ("oldkeypress", Short)
  , ("pad", Char)
  , ("flag", Char)
  , ("texact", Char)
  , ("tab", Arr 7 (Char))
  ])

sSpaceSeq:: Struct
sSpaceSeq = ("SpaceSeq",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("blockhandler", Arr 8 (Short))
  , ("v2d", Compound sView2D)
  , ("xof", Float)
  , ("yof", Float)
  , ("mainb", Short)
  , ("zoom", Short)
  , ("chanshown", Short)
  , ("pad2", Short)
  , ("flag", Int)
  , ("pad", Int)
  ])

sSpaceFile:: Struct
sSpaceFile = ("SpaceFile",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("blockhandler", Arr 8 (Short))
  , ("filelist", RefVoid {- Ref (UnknownCompound direntry) -})
  , ("totfile", Int)
  , ("title", Arr 24 (Char))
  , ("dir", Arr 160 (Char))
  , ("file", Arr 80 (Char))
  , ("type", Short)
  , ("ofs", Short)
  , ("flag", Short)
  , ("sort", Short)
  , ("maxnamelen", Short)
  , ("collums", Short)
  , ("libfiledata", RefVoid {- Ref (UnknownCompound BlendHandle) -})
  , ("retval", Short)
  , ("menu", Short)
  , ("act", Short)
  , ("ipotype", Short)
  , ("returnfunc", FunPtr (RefVoid))
  , ("returnfunc_event", FunPtr (RefVoid))
  , ("returnfunc_args", FunPtr (RefVoid))
  , ("arg1", Ref (RefVoid))
  , ("arg2", Ref (RefVoid))
  , ("menup", Ref (Short))
  , ("pupmenu", Ref (Char))
  ])

sSpaceOops:: Struct
sSpaceOops = ("SpaceOops",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("blockhandler", Arr 8 (Short))
  , ("v2d", Compound sView2D)
  , ("oops", Compound sListBase)
  , ("pin", Short)
  , ("visiflag", Short)
  , ("flag", Short)
  , ("rt", Short)
  , ("lockpoin", Ref (RefVoid))
  , ("tree", Compound sListBase)
  , ("treestore", Ref (Compound sTreeStore))
  , ("search_string", Arr 32 (Char))
  , ("search_tse", Compound sTreeStoreElem)
  , ("search_flags", Int)
  , ("do_", Int)
  , ("type", Short)
  , ("outlinevis", Short)
  , ("storeflag", Short)
  , ("deps_flags", Short)
  ])

sSpaceImage:: Struct
sSpaceImage = ("SpaceImage",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("blockhandler", Arr 8 (Short))
  , ("v2d", Compound sView2D)
  , ("image", Ref (Compound sImage))
  , ("iuser", Compound sImageUser)
  , ("cumap", Ref (Compound sCurveMapping))
  , ("mode", Short)
  , ("menunr", Short)
  , ("imanr", Short)
  , ("curtile", Short)
  , ("flag", Int)
  , ("imtypenr", Short)
  , ("lock", Short)
  , ("showspare", Short)
  , ("pad2", Short)
  , ("zoom", Float)
  , ("xof", Float)
  , ("yof", Float)
  , ("centx", Float)
  , ("centy", Float)
  , ("info_str", Ref (Char))
  , ("info_spare", Ref (Char))
  , ("spare", RefVoid {- Ref (UnknownCompound ImBuf) -})
  ])

sSpaceNla:: Struct
sSpaceNla = ("SpaceNla",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("blockhandler", Arr 8 (Short))
  , ("menunr", Short)
  , ("lock", Short)
  , ("flag", Int)
  , ("v2d", Compound sView2D)
  ])

sSpaceText:: Struct
sSpaceText = ("SpaceText",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("blockhandler", Arr 8 (Short))
  , ("text", Ref (Compound sText))
  , ("top", Int)
  , ("viewlines", Int)
  , ("flags", Short)
  , ("menunr", Short)
  , ("font_id", Int)
  , ("lheight", Int)
  , ("left", Int)
  , ("showlinenrs", Int)
  , ("tabnumber", Int)
  , ("currtab_set", Int)
  , ("showsyntax", Int)
  , ("unused_padd", Int)
  , ("pix_per_line", Float)
  , ("txtscroll", Compound srcti)
  , ("txtbar", Compound srcti)
  ])

sSpaceScript:: Struct
sSpaceScript = ("SpaceScript",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("script", RefVoid {- Ref (UnknownCompound Script) -})
  , ("flags", Short)
  , ("menunr", Short)
  , ("pad1", Int)
  , ("but_refs", Ref (RefVoid))
  ])

sSpaceTime:: Struct
sSpaceTime = ("SpaceTime",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("v2d", Compound sView2D)
  , ("flag", Int)
  , ("redraws", Int)
  ])

sSpaceNode:: Struct
sSpaceNode = ("SpaceNode",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("v2d", Compound sView2D)
  , ("id", Ref (Compound sID))
  , ("from", Ref (Compound sID))
  , ("flag", Short)
  , ("menunr", Short)
  , ("aspect", Float)
  , ("curfont", Ref (RefVoid))
  , ("xof", Float)
  , ("yof", Float)
  , ("nodetree", Ref (Compound sbNodeTree))
  , ("edittree", Ref (Compound sbNodeTree))
  , ("treetype", Int)
  , ("pad", Int)
  ])

sSpaceImaSel:: Struct
sSpaceImaSel = ("SpaceImaSel",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("title", Arr 28 (Char))
  , ("fase", Int)
  , ("mode", Short)
  , ("subfase", Short)
  , ("mouse_move_redraw", Short)
  , ("imafase", Short)
  , ("mx", Short)
  , ("my", Short)
  , ("dirsli", Short)
  , ("dirsli_lines", Short)
  , ("dirsli_sx", Short)
  , ("dirsli_ey", Short)
  , ("dirsli_ex", Short)
  , ("dirsli_h", Short)
  , ("imasli", Short)
  , ("fileselmenuitem", Short)
  , ("imasli_sx", Short)
  , ("imasli_ey", Short)
  , ("imasli_ex", Short)
  , ("imasli_h", Short)
  , ("dssx", Short)
  , ("dssy", Short)
  , ("dsex", Short)
  , ("dsey", Short)
  , ("desx", Short)
  , ("desy", Short)
  , ("deex", Short)
  , ("deey", Short)
  , ("fssx", Short)
  , ("fssy", Short)
  , ("fsex", Short)
  , ("fsey", Short)
  , ("dsdh", Short)
  , ("fsdh", Short)
  , ("fesx", Short)
  , ("fesy", Short)
  , ("feex", Short)
  , ("feey", Short)
  , ("infsx", Short)
  , ("infsy", Short)
  , ("infex", Short)
  , ("infey", Short)
  , ("dnsx", Short)
  , ("dnsy", Short)
  , ("dnw", Short)
  , ("dnh", Short)
  , ("fnsx", Short)
  , ("fnsy", Short)
  , ("fnw", Short)
  , ("fnh", Short)
  , ("fole", Arr 128 (Char))
  , ("dor", Arr 128 (Char))
  , ("file", Arr 128 (Char))
  , ("dir", Arr 128 (Char))
  , ("firstdir", RefVoid {- Ref (UnknownCompound ImaDir) -})
  , ("firstfile", RefVoid {- Ref (UnknownCompound ImaDir) -})
  , ("topdir", Int)
  , ("totaldirs", Int)
  , ("hilite", Int)
  , ("topfile", Int)
  , ("totalfiles", Int)
  , ("image_slider", Float)
  , ("slider_height", Float)
  , ("slider_space", Float)
  , ("topima", Short)
  , ("totalima", Short)
  , ("curimax", Short)
  , ("curimay", Short)
  , ("first_sel_ima", RefVoid {- Ref (UnknownCompound OneSelectableIma) -})
  , ("hilite_ima", RefVoid {- Ref (UnknownCompound OneSelectableIma) -})
  , ("total_selected", Short)
  , ("ima_redraw", Short)
  , ("pad2", Int)
  , ("cmap", RefVoid {- Ref (UnknownCompound ImBuf) -})
  , ("returnfunc", FunPtr (RefVoid))
  , ("arg1", Ref (RefVoid))
  ])

sThemeUI:: Struct
sThemeUI = ("ThemeUI",
  [ ("outline", Arr 4 (Char))
  , ("neutral", Arr 4 (Char))
  , ("action", Arr 4 (Char))
  , ("setting", Arr 4 (Char))
  , ("setting1", Arr 4 (Char))
  , ("setting2", Arr 4 (Char))
  , ("num", Arr 4 (Char))
  , ("textfield", Arr 4 (Char))
  , ("textfield_hi", Arr 4 (Char))
  , ("popup", Arr 4 (Char))
  , ("text", Arr 4 (Char))
  , ("text_hi", Arr 4 (Char))
  , ("menu_back", Arr 4 (Char))
  , ("menu_item", Arr 4 (Char))
  , ("menu_hilite", Arr 4 (Char))
  , ("menu_text", Arr 4 (Char))
  , ("menu_text_hi", Arr 4 (Char))
  , ("but_drawtype", Char)
  , ("pad", Arr 3 (Char))
  , ("iconfile", Arr 80 (Char))
  ])

sThemeSpace:: Struct
sThemeSpace = ("ThemeSpace",
  [ ("back", Arr 4 (Char))
  , ("text", Arr 4 (Char))
  , ("text_hi", Arr 4 (Char))
  , ("header", Arr 4 (Char))
  , ("panel", Arr 4 (Char))
  , ("shade1", Arr 4 (Char))
  , ("shade2", Arr 4 (Char))
  , ("hilite", Arr 4 (Char))
  , ("grid", Arr 4 (Char))
  , ("wire", Arr 4 (Char))
  , ("select", Arr 4 (Char))
  , ("lamp", Arr 4 (Char))
  , ("active", Arr 4 (Char))
  , ("group", Arr 4 (Char))
  , ("group_active", Arr 4 (Char))
  , ("transform", Arr 4 (Char))
  , ("vertex", Arr 4 (Char))
  , ("vertex_select", Arr 4 (Char))
  , ("edge", Arr 4 (Char))
  , ("edge_select", Arr 4 (Char))
  , ("edge_seam", Arr 4 (Char))
  , ("edge_sharp", Arr 4 (Char))
  , ("edge_facesel", Arr 4 (Char))
  , ("face", Arr 4 (Char))
  , ("face_select", Arr 4 (Char))
  , ("face_dot", Arr 4 (Char))
  , ("normal", Arr 4 (Char))
  , ("bone_solid", Arr 4 (Char))
  , ("bone_pose", Arr 4 (Char))
  , ("strip", Arr 4 (Char))
  , ("strip_select", Arr 4 (Char))
  , ("vertex_size", Char)
  , ("facedot_size", Char)
  , ("bpad", Arr 2 (Char))
  , ("syntaxl", Arr 4 (Char))
  , ("syntaxn", Arr 4 (Char))
  , ("syntaxb", Arr 4 (Char))
  , ("syntaxv", Arr 4 (Char))
  , ("syntaxc", Arr 4 (Char))
  , ("movie", Arr 4 (Char))
  , ("image", Arr 4 (Char))
  , ("scene", Arr 4 (Char))
  , ("audio", Arr 4 (Char))
  , ("effect", Arr 4 (Char))
  , ("plugin", Arr 4 (Char))
  , ("transition", Arr 4 (Char))
  , ("meta", Arr 4 (Char))
  , ("bpad1", Arr 4 (Char))
  ])

sbTheme:: Struct
sbTheme = ("bTheme",
  [ ("next", Ref (Compound sbTheme))
  , ("prev", Ref (Compound sbTheme))
  , ("name", Arr 32 (Char))
  , ("tui", Compound sThemeUI)
  , ("tbuts", Compound sThemeSpace)
  , ("tv3d", Compound sThemeSpace)
  , ("tfile", Compound sThemeSpace)
  , ("tipo", Compound sThemeSpace)
  , ("tinfo", Compound sThemeSpace)
  , ("tsnd", Compound sThemeSpace)
  , ("tact", Compound sThemeSpace)
  , ("tnla", Compound sThemeSpace)
  , ("tseq", Compound sThemeSpace)
  , ("tima", Compound sThemeSpace)
  , ("timasel", Compound sThemeSpace)
  , ("text", Compound sThemeSpace)
  , ("toops", Compound sThemeSpace)
  , ("ttime", Compound sThemeSpace)
  , ("tnode", Compound sThemeSpace)
  , ("bpad", Arr 4 (Char))
  , ("bpad1", Arr 4 (Char))
  ])

sSolidLight:: Struct
sSolidLight = ("SolidLight",
  [ ("flag", Int)
  , ("pad", Int)
  , ("col", Arr 4 (Float))
  , ("spec", Arr 4 (Float))
  , ("vec", Arr 4 (Float))
  ])

sUserDef:: Struct
sUserDef = ("UserDef",
  [ ("flag", Int)
  , ("dupflag", Int)
  , ("savetime", Int)
  , ("tempdir", Arr 160 (Char))
  , ("fontdir", Arr 160 (Char))
  , ("renderdir", Arr 160 (Char))
  , ("textudir", Arr 160 (Char))
  , ("plugtexdir", Arr 160 (Char))
  , ("plugseqdir", Arr 160 (Char))
  , ("pythondir", Arr 160 (Char))
  , ("sounddir", Arr 160 (Char))
  , ("yfexportdir", Arr 160 (Char))
  , ("versions", Short)
  , ("vrmlflag", Short)
  , ("gameflags", Int)
  , ("wheellinescroll", Int)
  , ("uiflag", Int)
  , ("language", Int)
  , ("userpref", Short)
  , ("viewzoom", Short)
  , ("console_buffer", Short)
  , ("console_out", Short)
  , ("mixbufsize", Int)
  , ("fontsize", Int)
  , ("encoding", Short)
  , ("transopts", Short)
  , ("menuthreshold1", Short)
  , ("menuthreshold2", Short)
  , ("fontname", Arr 256 (Char))
  , ("themes", Compound sListBase)
  , ("undosteps", Short)
  , ("curssize", Short)
  , ("tb_leftmouse", Short)
  , ("tb_rightmouse", Short)
  , ("light", Arr 3 (Compound sSolidLight))
  , ("tw_hotspot", Short)
  , ("tw_flag", Short)
  , ("tw_handlesize", Short)
  , ("tw_size", Short)
  , ("textimeout", Int)
  , ("texcollectrate", Int)
  , ("memcachelimit", Int)
  , ("frameserverport", Short)
  , ("pad_rot_angle", Short)
  , ("obcenter_dia", Short)
  , ("rvisize", Short)
  , ("rvibright", Short)
  , ("versemaster", Arr 160 (Char))
  , ("verseuser", Arr 160 (Char))
  , ("recent_files", Short)
  , ("smooth_viewtx", Short)
  , ("pad", Arr 6 (Char))
  ])

sbScreen:: Struct
sbScreen = ("bScreen",
  [ ("id", Compound sID)
  , ("vertbase", Compound sListBase)
  , ("edgebase", Compound sListBase)
  , ("areabase", Compound sListBase)
  , ("scene", Ref (Compound sScene))
  , ("startx", Short)
  , ("endx", Short)
  , ("starty", Short)
  , ("endy", Short)
  , ("sizex", Short)
  , ("sizey", Short)
  , ("scenenr", Short)
  , ("screennr", Short)
  , ("full", Short)
  , ("pad", Short)
  , ("mainwin", Short)
  , ("winakt", Short)
  , ("handler", Arr 8 (Short))
  ])

sScrVert:: Struct
sScrVert = ("ScrVert",
  [ ("next", Ref (Compound sScrVert))
  , ("prev", Ref (Compound sScrVert))
  , ("newv", Ref (Compound sScrVert))
  , ("vec", Compound svec2s)
  , ("flag", Int)
  ])

sScrEdge:: Struct
sScrEdge = ("ScrEdge",
  [ ("next", Ref (Compound sScrEdge))
  , ("prev", Ref (Compound sScrEdge))
  , ("v1", Ref (Compound sScrVert))
  , ("v2", Ref (Compound sScrVert))
  , ("border", Short)
  , ("flag", Short)
  , ("pad", Int)
  ])

sPanel:: Struct
sPanel = ("Panel",
  [ ("next", Ref (Compound sPanel))
  , ("prev", Ref (Compound sPanel))
  , ("panelname", Arr 64 (Char))
  , ("tabname", Arr 64 (Char))
  , ("drawname", Arr 64 (Char))
  , ("ofsx", Short)
  , ("ofsy", Short)
  , ("sizex", Short)
  , ("sizey", Short)
  , ("flag", Short)
  , ("active", Short)
  , ("control", Short)
  , ("snap", Short)
  , ("old_ofsx", Short)
  , ("old_ofsy", Short)
  , ("sortcounter", Int)
  , ("paneltab", Ref (Compound sPanel))
  ])

sScrArea:: Struct
sScrArea = ("ScrArea",
  [ ("next", Ref (Compound sScrArea))
  , ("prev", Ref (Compound sScrArea))
  , ("v1", Ref (Compound sScrVert))
  , ("v2", Ref (Compound sScrVert))
  , ("v3", Ref (Compound sScrVert))
  , ("v4", Ref (Compound sScrVert))
  , ("full", Ref (Compound sbScreen))
  , ("winmat", Arr 4 (Arr 4 (Float)))
  , ("totrct", Compound srcti)
  , ("headrct", Compound srcti)
  , ("winrct", Compound srcti)
  , ("headwin", Short)
  , ("win", Short)
  , ("headertype", Short)
  , ("spacetype", Char)
  , ("butspacetype", Char)
  , ("winx", Short)
  , ("winy", Short)
  , ("head_swap", Char)
  , ("head_equal", Char)
  , ("win_swap", Char)
  , ("win_equal", Char)
  , ("headbutlen", Short)
  , ("headbutofs", Short)
  , ("cursor", Short)
  , ("flag", Short)
  , ("scriptlink", Compound sScriptLink)
  , ("spacedata", Compound sListBase)
  , ("uiblocks", Compound sListBase)
  , ("panels", Compound sListBase)
  ])

sFileGlobal:: Struct
sFileGlobal = ("FileGlobal",
  [ ("subvstr", Arr 4 (Char))
  , ("subversion", Short)
  , ("pads", Short)
  , ("minversion", Short)
  , ("minsubversion", Short)
  , ("displaymode", Short)
  , ("winpos", Short)
  , ("curscreen", Ref (RefVoid))
  , ("curscene", Ref (RefVoid))
  , ("fileflags", Int)
  , ("globalf", Int)
  ])

sStripElem:: Struct
sStripElem = ("StripElem",
  [ ("name", Arr 80 (Char))
  , ("ibuf", RefVoid {- Ref (UnknownCompound ImBuf) -})
  , ("se1", Ref (Compound sStripElem))
  , ("se2", Ref (Compound sStripElem))
  , ("se3", Ref (Compound sStripElem))
  , ("ok", Short)
  , ("pad", Short)
  , ("nr", Int)
  ])

sStrip:: Struct
sStrip = ("Strip",
  [ ("next", Ref (Compound sStrip))
  , ("prev", Ref (Compound sStrip))
  , ("rt", Int)
  , ("len", Int)
  , ("us", Int)
  , ("done", Int)
  , ("stripdata", Ref (Compound sStripElem))
  , ("dir", Arr 160 (Char))
  , ("orx", Int)
  , ("ory", Int)
  ])

sPluginSeq:: Struct
sPluginSeq = ("PluginSeq",
  [ ("name", Arr 256 (Char))
  , ("handle", Ref (RefVoid))
  , ("pname", Ref (Char))
  , ("vars", Int)
  , ("version", Int)
  , ("varstr", Ref (RefVoid))
  , ("cfra", Ref (Float))
  , ("data", Arr 32 (Float))
  , ("instance_private_data", Ref (RefVoid))
  , ("current_private_data", Ref (Ref (RefVoid)))
  , ("doit", FunPtr (RefVoid))
  , ("callback", FunPtr (RefVoid))
  ])

sSequence:: Struct
sSequence = ("Sequence",
  [ ("next", Ref (Compound sSequence))
  , ("prev", Ref (Compound sSequence))
  , ("newseq", Ref (Compound sSequence))
  , ("lib", Ref (RefVoid))
  , ("name", Arr 24 (Char))
  , ("flag", Short)
  , ("type", Short)
  , ("len", Int)
  , ("start", Int)
  , ("startofs", Int)
  , ("endofs", Int)
  , ("startstill", Int)
  , ("endstill", Int)
  , ("machine", Int)
  , ("depth", Int)
  , ("startdisp", Int)
  , ("enddisp", Int)
  , ("mul", Float)
  , ("handsize", Float)
  , ("sfra", Int)
  , ("strip", Ref (Compound sStrip))
  , ("curelem", Ref (Compound sStripElem))
  , ("ipo", Ref (Compound sIpo))
  , ("scene", Ref (Compound sScene))
  , ("anim", RefVoid {- Ref (UnknownCompound anim) -})
  , ("facf0", Float)
  , ("facf1", Float)
  , ("plugin", Ref (Compound sPluginSeq))
  , ("seq1", Ref (Compound sSequence))
  , ("seq2", Ref (Compound sSequence))
  , ("seq3", Ref (Compound sSequence))
  , ("seqbase", Compound sListBase)
  , ("sound", Ref (Compound sbSound))
  , ("hdaudio", RefVoid {- Ref (UnknownCompound hdaudio) -})
  , ("level", Float)
  , ("pan", Float)
  , ("curpos", Int)
  , ("strobe", Float)
  , ("effectdata", Ref (RefVoid))
  , ("anim_preseek", Int)
  , ("pad", Int)
  ])

sMetaStack:: Struct
sMetaStack = ("MetaStack",
  [ ("next", Ref (Compound sMetaStack))
  , ("prev", Ref (Compound sMetaStack))
  , ("oldbasep", Ref (Compound sListBase))
  , ("parseq", Ref (Compound sSequence))
  ])

sEditing:: Struct
sEditing = ("Editing",
  [ ("seqbasep", Ref (Compound sListBase))
  , ("seqbase", Compound sListBase)
  , ("metastack", Compound sListBase)
  , ("flag", Short)
  , ("pad", Short)
  , ("rt", Int)
  ])

sWipeVars:: Struct
sWipeVars = ("WipeVars",
  [ ("edgeWidth", Float)
  , ("angle", Float)
  , ("forward", Short)
  , ("wipetype", Short)
  ])

sGlowVars:: Struct
sGlowVars = ("GlowVars",
  [ ("fMini", Float)
  , ("fClamp", Float)
  , ("fBoost", Float)
  , ("dDist", Float)
  , ("dQuality", Int)
  , ("bNoComp", Int)
  ])

sTransformVars:: Struct
sTransformVars = ("TransformVars",
  [ ("ScalexIni", Float)
  , ("ScaleyIni", Float)
  , ("ScalexFin", Float)
  , ("ScaleyFin", Float)
  , ("xIni", Float)
  , ("xFin", Float)
  , ("yIni", Float)
  , ("yFin", Float)
  , ("rotIni", Float)
  , ("rotFin", Float)
  ])

sSolidColorVars:: Struct
sSolidColorVars = ("SolidColorVars",
  [ ("col", Arr 3 (Float))
  , ("pad", Float)
  ])

sSpeedControlVars:: Struct
sSpeedControlVars = ("SpeedControlVars",
  [ ("frameMap", Ref (Float))
  , ("globalSpeed", Float)
  , ("flags", Int)
  , ("length", Int)
  , ("pad", Int)
  ])

sEffect:: Struct
sEffect = ("Effect",
  [ ("next", Ref (Compound sEffect))
  , ("prev", Ref (Compound sEffect))
  , ("type", Short)
  , ("flag", Short)
  , ("buttype", Short)
  , ("rt", Short)
  ])

sBuildEff:: Struct
sBuildEff = ("BuildEff",
  [ ("next", Ref (Compound sBuildEff))
  , ("prev", Ref (Compound sBuildEff))
  , ("type", Short)
  , ("flag", Short)
  , ("buttype", Short)
  , ("rt", Short)
  , ("len", Float)
  , ("sfra", Float)
  ])

sPartEff:: Struct
sPartEff = ("PartEff",
  [ ("next", Ref (Compound sPartEff))
  , ("prev", Ref (Compound sPartEff))
  , ("type", Short)
  , ("flag", Short)
  , ("buttype", Short)
  , ("stype", Short)
  , ("vertgroup", Short)
  , ("userjit", Short)
  , ("sta", Float)
  , ("end", Float)
  , ("lifetime", Float)
  , ("totpart", Int)
  , ("totkey", Int)
  , ("seed", Int)
  , ("normfac", Float)
  , ("obfac", Float)
  , ("randfac", Float)
  , ("texfac", Float)
  , ("randlife", Float)
  , ("force", Arr 3 (Float))
  , ("damp", Float)
  , ("nabla", Float)
  , ("vectsize", Float)
  , ("maxlen", Float)
  , ("pad", Float)
  , ("defvec", Arr 3 (Float))
  , ("mult", Arr 4 (Float))
  , ("life", Arr 4 (Float))
  , ("child", Arr 4 (Short))
  , ("mat", Arr 4 (Short))
  , ("texmap", Short)
  , ("curmult", Short)
  , ("staticstep", Short)
  , ("omat", Short)
  , ("timetex", Short)
  , ("speedtex", Short)
  , ("flag2", Short)
  , ("flag2neg", Short)
  , ("disp", Short)
  , ("vertgroup_v", Short)
  , ("vgroupname", Arr 32 (Char))
  , ("vgroupname_v", Arr 32 (Char))
  , ("imat", Arr 4 (Arr 4 (Float)))
  , ("keys", RefVoid {- Ref (UnknownCompound Particle) -})
  , ("group", Ref (Compound sGroup))
  ])

sWaveEff:: Struct
sWaveEff = ("WaveEff",
  [ ("next", Ref (Compound sWaveEff))
  , ("prev", Ref (Compound sWaveEff))
  , ("type", Short)
  , ("flag", Short)
  , ("buttype", Short)
  , ("stype", Short)
  , ("startx", Float)
  , ("starty", Float)
  , ("height", Float)
  , ("width", Float)
  , ("narrow", Float)
  , ("speed", Float)
  , ("minfac", Float)
  , ("damp", Float)
  , ("timeoffs", Float)
  , ("lifetime", Float)
  ])

sTreeStoreElem:: Struct
sTreeStoreElem = ("TreeStoreElem",
  [ ("type", Short)
  , ("nr", Short)
  , ("flag", Short)
  , ("used", Short)
  , ("id", Ref (Compound sID))
  ])

sTreeStore:: Struct
sTreeStore = ("TreeStore",
  [ ("totelem", Int)
  , ("usedelem", Int)
  , ("data", Ref (Compound sTreeStoreElem))
  ])

sOops:: Struct
sOops = ("Oops",
  [ ("next", Ref (Compound sOops))
  , ("prev", Ref (Compound sOops))
  , ("type", Short)
  , ("flag", Short)
  , ("dt", Short)
  , ("hide", Short)
  , ("x", Float)
  , ("y", Float)
  , ("dx", Float)
  , ("dy", Float)
  , ("id", Ref (Compound sID))
  , ("link", Compound sListBase)
  ])

sbProperty:: Struct
sbProperty = ("bProperty",
  [ ("next", Ref (Compound sbProperty))
  , ("prev", Ref (Compound sbProperty))
  , ("name", Arr 32 (Char))
  , ("type", Short)
  , ("otype", Short)
  , ("data", Int)
  , ("old", Int)
  , ("flag", Short)
  , ("pad", Short)
  , ("poin", Ref (RefVoid))
  , ("oldpoin", Ref (RefVoid))
  ])

sbNearSensor:: Struct
sbNearSensor = ("bNearSensor",
  [ ("name", Arr 32 (Char))
  , ("dist", Float)
  , ("resetdist", Float)
  , ("lastval", Int)
  , ("pad", Int)
  ])

sbMouseSensor:: Struct
sbMouseSensor = ("bMouseSensor",
  [ ("type", Short)
  , ("flag", Short)
  , ("pad1", Short)
  , ("pad2", Short)
  ])

sbTouchSensor:: Struct
sbTouchSensor = ("bTouchSensor",
  [ ("name", Arr 32 (Char))
  , ("ma", Ref (Compound sMaterial))
  , ("dist", Float)
  , ("pad", Float)
  ])

sbKeyboardSensor:: Struct
sbKeyboardSensor = ("bKeyboardSensor",
  [ ("key", Short)
  , ("qual", Short)
  , ("type", Short)
  , ("qual2", Short)
  , ("targetName", Arr 32 (Char))
  , ("toggleName", Arr 32 (Char))
  ])

sbPropertySensor:: Struct
sbPropertySensor = ("bPropertySensor",
  [ ("type", Int)
  , ("pad", Int)
  , ("name", Arr 32 (Char))
  , ("value", Arr 32 (Char))
  , ("maxvalue", Arr 32 (Char))
  ])

sbCollisionSensor:: Struct
sbCollisionSensor = ("bCollisionSensor",
  [ ("name", Arr 32 (Char))
  , ("materialName", Arr 32 (Char))
  , ("damptimer", Short)
  , ("damp", Short)
  , ("mode", Short)
  , ("pad2", Short)
  ])

sbRadarSensor:: Struct
sbRadarSensor = ("bRadarSensor",
  [ ("name", Arr 32 (Char))
  , ("angle", Float)
  , ("range", Float)
  , ("flag", Short)
  , ("axis", Short)
  ])

sbRandomSensor:: Struct
sbRandomSensor = ("bRandomSensor",
  [ ("name", Arr 32 (Char))
  , ("seed", Int)
  , ("delay", Int)
  ])

sbRaySensor:: Struct
sbRaySensor = ("bRaySensor",
  [ ("name", Arr 32 (Char))
  , ("range", Float)
  , ("propname", Arr 32 (Char))
  , ("matname", Arr 32 (Char))
  , ("mode", Short)
  , ("pad1", Short)
  , ("axisflag", Int)
  ])

sbMessageSensor:: Struct
sbMessageSensor = ("bMessageSensor",
  [ ("fromObject", Ref (Compound sObject))
  , ("subject", Arr 32 (Char))
  , ("body", Arr 32 (Char))
  ])

sbSensor:: Struct
sbSensor = ("bSensor",
  [ ("next", Ref (Compound sbSensor))
  , ("prev", Ref (Compound sbSensor))
  , ("type", Short)
  , ("otype", Short)
  , ("flag", Short)
  , ("pulse", Short)
  , ("freq", Short)
  , ("totlinks", Short)
  , ("pad1", Short)
  , ("pad2", Short)
  , ("name", Arr 32 (Char))
  , ("data", Ref (RefVoid))
  , ("links", Ref (Ref (Compound sbController)))
  , ("ob", Ref (Compound sObject))
  , ("invert", Short)
  , ("freq2", Short)
  , ("pad", Int)
  ])

sbJoystickSensor:: Struct
sbJoystickSensor = ("bJoystickSensor",
  [ ("name", Arr 32 (Char))
  , ("type", Short)
  , ("pad", Short)
  , ("axis", Int)
  , ("axisf", Int)
  , ("button", Int)
  , ("buttonf", Int)
  , ("hat", Int)
  , ("hatf", Int)
  , ("precision", Int)
  ])

sbExpressionCont:: Struct
sbExpressionCont = ("bExpressionCont",
  [ ("str", Arr 128 (Char))
  ])

sbPythonCont:: Struct
sbPythonCont = ("bPythonCont",
  [ ("text", Ref (Compound sText))
  ])

sbController:: Struct
sbController = ("bController",
  [ ("next", Ref (Compound sbController))
  , ("prev", Ref (Compound sbController))
  , ("mynew", Ref (Compound sbController))
  , ("type", Short)
  , ("flag", Short)
  , ("inputs", Short)
  , ("totlinks", Short)
  , ("otype", Short)
  , ("totslinks", Short)
  , ("pad2", Short)
  , ("pad3", Short)
  , ("name", Arr 32 (Char))
  , ("data", Ref (RefVoid))
  , ("links", Ref (Ref (Compound sbActuator)))
  , ("slinks", Ref (Ref (Compound sbSensor)))
  , ("val", Short)
  , ("valo", Short)
  , ("pad5", Int)
  ])

sbAddObjectActuator:: Struct
sbAddObjectActuator = ("bAddObjectActuator",
  [ ("time", Int)
  , ("pad", Int)
  , ("ob", Ref (Compound sObject))
  ])

sbActionActuator:: Struct
sbActionActuator = ("bActionActuator",
  [ ("act", Ref (Compound sbAction))
  , ("type", Short)
  , ("flag", Short)
  , ("sta", Int)
  , ("end", Int)
  , ("name", Arr 32 (Char))
  , ("blendin", Int)
  , ("priority", Short)
  , ("strideaxis", Short)
  , ("stridelength", Float)
  ])

sbSoundActuator:: Struct
sbSoundActuator = ("bSoundActuator",
  [ ("flag", Short)
  , ("sndnr", Short)
  , ("sta", Int)
  , ("end", Int)
  , ("pad1", Arr 2 (Short))
  , ("sound", Ref (Compound sbSound))
  , ("type", Short)
  , ("makecopy", Short)
  , ("copymade", Short)
  , ("pad2", Arr 1 (Short))
  ])

sbCDActuator:: Struct
sbCDActuator = ("bCDActuator",
  [ ("flag", Short)
  , ("sndnr", Short)
  , ("sta", Int)
  , ("end", Int)
  , ("type", Short)
  , ("track", Short)
  , ("volume", Float)
  ])

sbEditObjectActuator:: Struct
sbEditObjectActuator = ("bEditObjectActuator",
  [ ("time", Int)
  , ("type", Short)
  , ("flag", Short)
  , ("ob", Ref (Compound sObject))
  , ("me", Ref (Compound sMesh))
  , ("name", Arr 32 (Char))
  , ("linVelocity", Arr 3 (Float))
  , ("localflag", Short)
  , ("pad", Short)
  ])

sbSceneActuator:: Struct
sbSceneActuator = ("bSceneActuator",
  [ ("type", Short)
  , ("flag", Short)
  , ("pad", Int)
  , ("scene", Ref (Compound sScene))
  , ("camera", Ref (Compound sObject))
  ])

sbPropertyActuator:: Struct
sbPropertyActuator = ("bPropertyActuator",
  [ ("flag", Int)
  , ("type", Int)
  , ("name", Arr 32 (Char))
  , ("value", Arr 32 (Char))
  , ("ob", Ref (Compound sObject))
  ])

sbObjectActuator:: Struct
sbObjectActuator = ("bObjectActuator",
  [ ("flag", Int)
  , ("type", Int)
  , ("forceloc", Arr 3 (Float))
  , ("forcerot", Arr 3 (Float))
  , ("loc", Arr 3 (Float))
  , ("rot", Arr 3 (Float))
  , ("dloc", Arr 3 (Float))
  , ("drot", Arr 3 (Float))
  , ("linearvelocity", Arr 3 (Float))
  , ("angularvelocity", Arr 3 (Float))
  ])

sbIpoActuator:: Struct
sbIpoActuator = ("bIpoActuator",
  [ ("flag", Short)
  , ("type", Short)
  , ("sta", Int)
  , ("end", Int)
  , ("name", Arr 32 (Char))
  , ("pad1", Short)
  , ("cur", Short)
  , ("butsta", Short)
  , ("butend", Short)
  ])

sbCameraActuator:: Struct
sbCameraActuator = ("bCameraActuator",
  [ ("ob", Ref (Compound sObject))
  , ("height", Float)
  , ("min", Float)
  , ("max", Float)
  , ("fac", Float)
  , ("flag", Short)
  , ("axis", Short)
  , ("visifac", Float)
  ])

sbConstraintActuator:: Struct
sbConstraintActuator = ("bConstraintActuator",
  [ ("flag", Short)
  , ("damp", Short)
  , ("slow", Float)
  , ("minloc", Arr 3 (Float))
  , ("maxloc", Arr 3 (Float))
  , ("minrot", Arr 3 (Float))
  , ("maxrot", Arr 3 (Float))
  ])

sbGroupActuator:: Struct
sbGroupActuator = ("bGroupActuator",
  [ ("flag", Short)
  , ("type", Short)
  , ("sta", Int)
  , ("end", Int)
  , ("name", Arr 32 (Char))
  , ("pad", Arr 3 (Short))
  , ("cur", Short)
  , ("butsta", Short)
  , ("butend", Short)
  , ("group", Ref (Compound sGroup))
  ])

sbRandomActuator:: Struct
sbRandomActuator = ("bRandomActuator",
  [ ("seed", Int)
  , ("distribution", Int)
  , ("int_arg_1", Int)
  , ("int_arg_2", Int)
  , ("float_arg_1", Float)
  , ("float_arg_2", Float)
  , ("propname", Arr 32 (Char))
  ])

sbMessageActuator:: Struct
sbMessageActuator = ("bMessageActuator",
  [ ("toPropName", Arr 32 (Char))
  , ("toObject", Ref (Compound sObject))
  , ("subject", Arr 32 (Char))
  , ("bodyType", Short)
  , ("pad1", Short)
  , ("pad2", Int)
  , ("body", Arr 32 (Char))
  ])

sbGameActuator:: Struct
sbGameActuator = ("bGameActuator",
  [ ("flag", Short)
  , ("type", Short)
  , ("sta", Int)
  , ("end", Int)
  , ("filename", Arr 64 (Char))
  , ("loadaniname", Arr 64 (Char))
  ])

sbVisibilityActuator:: Struct
sbVisibilityActuator = ("bVisibilityActuator",
  [ ("flag", Int)
  ])

sbActuator:: Struct
sbActuator = ("bActuator",
  [ ("next", Ref (Compound sbActuator))
  , ("prev", Ref (Compound sbActuator))
  , ("mynew", Ref (Compound sbActuator))
  , ("type", Short)
  , ("flag", Short)
  , ("otype", Short)
  , ("go", Short)
  , ("name", Arr 32 (Char))
  , ("data", Ref (RefVoid))
  , ("ob", Ref (Compound sObject))
  ])

sFreeCamera:: Struct
sFreeCamera = ("FreeCamera",
  [ ("mass", Float)
  , ("accelleration", Float)
  , ("maxspeed", Float)
  , ("maxrotspeed", Float)
  , ("maxtiltspeed", Float)
  , ("flag", Int)
  , ("rotdamp", Float)
  , ("tiltdamp", Float)
  , ("speeddamp", Float)
  , ("pad", Float)
  ])

sbSound:: Struct
sbSound = ("bSound",
  [ ("id", Compound sID)
  , ("name", Arr 160 (Char))
  , ("sample", RefVoid {- Ref (UnknownCompound bSample) -})
  , ("stream", Ref (RefVoid))
  , ("packedfile", Ref (Compound sPackedFile))
  , ("newpackedfile", Ref (Compound sPackedFile))
  , ("snd_sound", Ref (RefVoid))
  , ("ipo", Ref (Compound sIpo))
  , ("volume", Float)
  , ("panning", Float)
  , ("attenuation", Float)
  , ("pitch", Float)
  , ("min_gain", Float)
  , ("max_gain", Float)
  , ("distance", Float)
  , ("flags", Int)
  , ("streamlen", Int)
  , ("channels", Char)
  , ("highprio", Char)
  , ("pad", Arr 10 (Char))
  ])

sbSoundListener:: Struct
sbSoundListener = ("bSoundListener",
  [ ("id", Compound sID)
  , ("gain", Float)
  , ("dopplerfactor", Float)
  , ("dopplervelocity", Float)
  , ("numsoundsblender", Short)
  , ("numsoundsgameengine", Short)
  ])

sSpaceSound:: Struct
sSpaceSound = ("SpaceSound",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("v2d", Compound sView2D)
  , ("sound", Ref (Compound sbSound))
  , ("mode", Short)
  , ("sndnr", Short)
  , ("xof", Short)
  , ("yof", Short)
  , ("flag", Short)
  , ("lock", Short)
  , ("pad2", Int)
  ])

sGroupObject:: Struct
sGroupObject = ("GroupObject",
  [ ("next", Ref (Compound sGroupObject))
  , ("prev", Ref (Compound sGroupObject))
  , ("ob", Ref (Compound sObject))
  , ("lampren", Ref (RefVoid))
  , ("recalc", Int)
  , ("pad", Int)
  ])

sGroup:: Struct
sGroup = ("Group",
  [ ("id", Compound sID)
  , ("gobject", Compound sListBase)
  , ("layer", Int)
  , ("pad", Int)
  ])

sBone:: Struct
sBone = ("Bone",
  [ ("next", Ref (Compound sBone))
  , ("prev", Ref (Compound sBone))
  , ("parent", Ref (Compound sBone))
  , ("childbase", Compound sListBase)
  , ("name", Arr 32 (Char))
  , ("roll", Float)
  , ("head", Arr 3 (Float))
  , ("tail", Arr 3 (Float))
  , ("bone_mat", Arr 3 (Arr 3 (Float)))
  , ("flag", Int)
  , ("arm_head", Arr 3 (Float))
  , ("arm_tail", Arr 3 (Float))
  , ("arm_mat", Arr 4 (Arr 4 (Float)))
  , ("dist", Float)
  , ("weight", Float)
  , ("xwidth", Float)
  , ("length", Float)
  , ("zwidth", Float)
  , ("ease1", Float)
  , ("ease2", Float)
  , ("rad_head", Float)
  , ("rad_tail", Float)
  , ("size", Arr 3 (Float))
  , ("layer", Short)
  , ("segments", Short)
  ])

sbArmature:: Struct
sbArmature = ("bArmature",
  [ ("id", Compound sID)
  , ("bonebase", Compound sListBase)
  , ("chainbase", Compound sListBase)
  , ("flag", Int)
  , ("drawtype", Int)
  , ("deformflag", Short)
  , ("pathflag", Short)
  , ("layer", Short)
  , ("layer_protected", Short)
  , ("ghostep", Short)
  , ("ghostsize", Short)
  , ("ghosttype", Short)
  , ("pathsize", Short)
  , ("ghostsf", Int)
  , ("ghostef", Int)
  , ("pathsf", Int)
  , ("pathef", Int)
  ])

sbPoseChannel:: Struct
sbPoseChannel = ("bPoseChannel",
  [ ("next", Ref (Compound sbPoseChannel))
  , ("prev", Ref (Compound sbPoseChannel))
  , ("constraints", Compound sListBase)
  , ("name", Arr 32 (Char))
  , ("flag", Short)
  , ("constflag", Short)
  , ("ikflag", Short)
  , ("selectflag", Short)
  , ("protectflag", Short)
  , ("pad2", Short)
  , ("pathlen", Int)
  , ("pathsf", Int)
  , ("pathef", Int)
  , ("bone", Ref (Compound sBone))
  , ("parent", Ref (Compound sbPoseChannel))
  , ("child", Ref (Compound sbPoseChannel))
  , ("iktree", Compound sListBase)
  , ("b_bone_mats", Ref (RefVoid))
  , ("loc", Arr 3 (Float))
  , ("size", Arr 3 (Float))
  , ("quat", Arr 4 (Float))
  , ("chan_mat", Arr 4 (Arr 4 (Float)))
  , ("pose_mat", Arr 4 (Arr 4 (Float)))
  , ("pose_head", Arr 3 (Float))
  , ("pose_tail", Arr 3 (Float))
  , ("limitmin", Arr 3 (Float))
  , ("limitmax", Arr 3 (Float))
  , ("stiffness", Arr 3 (Float))
  , ("ikstretch", Float)
  , ("path", Ref (Float))
  , ("custom", Ref (Compound sObject))
  ])

sbPose:: Struct
sbPose = ("bPose",
  [ ("chanbase", Compound sListBase)
  , ("flag", Short)
  , ("proxy_layer", Short)
  , ("ctime", Float)
  , ("stride_offset", Arr 3 (Float))
  , ("cyclic_offset", Arr 3 (Float))
  ])

sbActionChannel:: Struct
sbActionChannel = ("bActionChannel",
  [ ("next", Ref (Compound sbActionChannel))
  , ("prev", Ref (Compound sbActionChannel))
  , ("ipo", Ref (Compound sIpo))
  , ("constraintChannels", Compound sListBase)
  , ("flag", Int)
  , ("name", Arr 32 (Char))
  , ("reserved1", Int)
  ])

sbAction:: Struct
sbAction = ("bAction",
  [ ("id", Compound sID)
  , ("chanbase", Compound sListBase)
  ])

sSpaceAction:: Struct
sSpaceAction = ("SpaceAction",
  [ ("next", Ref (Compound sSpaceLink))
  , ("prev", Ref (Compound sSpaceLink))
  , ("spacetype", Int)
  , ("blockscale", Float)
  , ("area", Ref (Compound sScrArea))
  , ("blockhandler", Arr 8 (Short))
  , ("v2d", Compound sView2D)
  , ("action", Ref (Compound sbAction))
  , ("flag", Short)
  , ("autosnap", Short)
  , ("pin", Short)
  , ("actnr", Short)
  , ("lock", Short)
  , ("actwidth", Short)
  , ("timeslide", Float)
  ])

sbConstraintChannel:: Struct
sbConstraintChannel = ("bConstraintChannel",
  [ ("next", Ref (Compound sbConstraintChannel))
  , ("prev", Ref (Compound sbConstraintChannel))
  , ("ipo", Ref (Compound sIpo))
  , ("flag", Short)
  , ("name", Arr 30 (Char))
  ])

sbConstraint:: Struct
sbConstraint = ("bConstraint",
  [ ("next", Ref (Compound sbConstraint))
  , ("prev", Ref (Compound sbConstraint))
  , ("data", Ref (RefVoid))
  , ("type", Short)
  , ("flag", Short)
  , ("reserved1", Short)
  , ("name", Arr 30 (Char))
  , ("enforce", Float)
  ])

sbKinematicConstraint:: Struct
sbKinematicConstraint = ("bKinematicConstraint",
  [ ("tar", Ref (Compound sObject))
  , ("iterations", Short)
  , ("flag", Short)
  , ("rootbone", Int)
  , ("subtarget", Arr 32 (Char))
  , ("weight", Float)
  , ("orientweight", Float)
  , ("grabtarget", Arr 3 (Float))
  , ("pad", Int)
  ])

sbTrackToConstraint:: Struct
sbTrackToConstraint = ("bTrackToConstraint",
  [ ("tar", Ref (Compound sObject))
  , ("reserved1", Int)
  , ("reserved2", Int)
  , ("flags", Int)
  , ("pad", Int)
  , ("subtarget", Arr 32 (Char))
  ])

sbRotateLikeConstraint:: Struct
sbRotateLikeConstraint = ("bRotateLikeConstraint",
  [ ("tar", Ref (Compound sObject))
  , ("flag", Int)
  , ("reserved1", Int)
  , ("subtarget", Arr 32 (Char))
  ])

sbLocateLikeConstraint:: Struct
sbLocateLikeConstraint = ("bLocateLikeConstraint",
  [ ("tar", Ref (Compound sObject))
  , ("flag", Int)
  , ("reserved1", Int)
  , ("subtarget", Arr 32 (Char))
  ])

sbMinMaxConstraint:: Struct
sbMinMaxConstraint = ("bMinMaxConstraint",
  [ ("tar", Ref (Compound sObject))
  , ("minmaxflag", Int)
  , ("offset", Float)
  , ("flag", Int)
  , ("sticky", Short)
  , ("stuck", Short)
  , ("pad1", Short)
  , ("pad2", Short)
  , ("cache", Arr 3 (Float))
  , ("subtarget", Arr 32 (Char))
  ])

sbSizeLikeConstraint:: Struct
sbSizeLikeConstraint = ("bSizeLikeConstraint",
  [ ("tar", Ref (Compound sObject))
  , ("flag", Int)
  , ("reserved1", Int)
  , ("subtarget", Arr 32 (Char))
  ])

sbActionConstraint:: Struct
sbActionConstraint = ("bActionConstraint",
  [ ("tar", Ref (Compound sObject))
  , ("type", Short)
  , ("local", Short)
  , ("start", Int)
  , ("end", Int)
  , ("min", Float)
  , ("max", Float)
  , ("pad", Int)
  , ("act", Ref (Compound sbAction))
  , ("subtarget", Arr 32 (Char))
  ])

sbLockTrackConstraint:: Struct
sbLockTrackConstraint = ("bLockTrackConstraint",
  [ ("tar", Ref (Compound sObject))
  , ("trackflag", Int)
  , ("lockflag", Int)
  , ("subtarget", Arr 32 (Char))
  ])

sbFollowPathConstraint:: Struct
sbFollowPathConstraint = ("bFollowPathConstraint",
  [ ("tar", Ref (Compound sObject))
  , ("offset", Float)
  , ("followflag", Int)
  , ("trackflag", Int)
  , ("upflag", Int)
  ])

sbDistanceLimitConstraint:: Struct
sbDistanceLimitConstraint = ("bDistanceLimitConstraint",
  [ ("tar", Ref (Compound sObject))
  , ("subtarget", Arr 32 (Char))
  , ("pad1", Float)
  , ("pad2", Float)
  , ("distance", Float)
  , ("offset", Arr 3 (Float))
  ])

sbRotationConstraint:: Struct
sbRotationConstraint = ("bRotationConstraint",
  [ ("xmin", Float)
  , ("xmax", Float)
  , ("ymin", Float)
  , ("ymax", Float)
  , ("zmin", Float)
  , ("zmax", Float)
  ])

sbStretchToConstraint:: Struct
sbStretchToConstraint = ("bStretchToConstraint",
  [ ("tar", Ref (Compound sObject))
  , ("volmode", Int)
  , ("plane", Int)
  , ("orglength", Float)
  , ("bulge", Float)
  , ("subtarget", Arr 32 (Char))
  ])

sbLocLimitConstraint:: Struct
sbLocLimitConstraint = ("bLocLimitConstraint",
  [ ("xmin", Float)
  , ("xmax", Float)
  , ("ymin", Float)
  , ("ymax", Float)
  , ("zmin", Float)
  , ("zmax", Float)
  , ("flag", Short)
  , ("flag2", Short)
  ])

sbRotLimitConstraint:: Struct
sbRotLimitConstraint = ("bRotLimitConstraint",
  [ ("xmin", Float)
  , ("xmax", Float)
  , ("ymin", Float)
  , ("ymax", Float)
  , ("zmin", Float)
  , ("zmax", Float)
  , ("flag", Short)
  , ("pad1", Short)
  ])

sbSizeLimitConstraint:: Struct
sbSizeLimitConstraint = ("bSizeLimitConstraint",
  [ ("xmin", Float)
  , ("xmax", Float)
  , ("ymin", Float)
  , ("ymax", Float)
  , ("zmin", Float)
  , ("zmax", Float)
  , ("flag", Short)
  , ("pad1", Short)
  ])

sbRigidBodyJointConstraint:: Struct
sbRigidBodyJointConstraint = ("bRigidBodyJointConstraint",
  [ ("tar", Ref (Compound sObject))
  , ("child", Ref (Compound sObject))
  , ("type", Int)
  , ("pivX", Float)
  , ("pivY", Float)
  , ("pivZ", Float)
  , ("axX", Float)
  , ("axY", Float)
  , ("axZ", Float)
  , ("minLimit", Arr 6 (Float))
  , ("maxLimit", Arr 6 (Float))
  , ("extraFz", Float)
  , ("flag", Short)
  , ("pad", Short)
  , ("pad1", Short)
  , ("pad2", Short)
  ])

sbClampToConstraint:: Struct
sbClampToConstraint = ("bClampToConstraint",
  [ ("tar", Ref (Compound sObject))
  , ("flag", Int)
  , ("pad", Int)
  ])

sbActionModifier:: Struct
sbActionModifier = ("bActionModifier",
  [ ("next", Ref (Compound sbActionModifier))
  , ("prev", Ref (Compound sbActionModifier))
  , ("type", Short)
  , ("flag", Short)
  , ("channel", Arr 32 (Char))
  , ("noisesize", Float)
  , ("turbul", Float)
  , ("channels", Short)
  , ("no_rot_axis", Short)
  , ("ob", Ref (Compound sObject))
  ])

sbActionStrip:: Struct
sbActionStrip = ("bActionStrip",
  [ ("next", Ref (Compound sbActionStrip))
  , ("prev", Ref (Compound sbActionStrip))
  , ("flag", Short)
  , ("mode", Short)
  , ("stride_axis", Short)
  , ("curmod", Short)
  , ("ipo", Ref (Compound sIpo))
  , ("act", Ref (Compound sbAction))
  , ("object", Ref (Compound sObject))
  , ("start", Float)
  , ("end", Float)
  , ("actstart", Float)
  , ("actend", Float)
  , ("actoffs", Float)
  , ("padf", Float)
  , ("stridelen", Float)
  , ("repeat", Float)
  , ("blendin", Float)
  , ("blendout", Float)
  , ("stridechannel", Arr 32 (Char))
  , ("offs_bone", Arr 32 (Char))
  , ("modifiers", Compound sListBase)
  ])

sbNodeStack:: Struct
sbNodeStack = ("bNodeStack",
  [ ("vec", Arr 4 (Float))
  , ("min", Float)
  , ("max", Float)
  , ("data", Ref (RefVoid))
  , ("hasinput", Short)
  , ("hasoutput", Short)
  , ("datatype", Short)
  , ("sockettype", Short)
  ])

sbNodeSocket:: Struct
sbNodeSocket = ("bNodeSocket",
  [ ("next", Ref (Compound sbNodeSocket))
  , ("prev", Ref (Compound sbNodeSocket))
  , ("name", Arr 32 (Char))
  , ("ns", Compound sbNodeStack)
  , ("type", Short)
  , ("flag", Short)
  , ("limit", Short)
  , ("stack_index", Short)
  , ("intern", Short)
  , ("stack_index_ext", Short)
  , ("pad1", Int)
  , ("locx", Float)
  , ("locy", Float)
  , ("own_index", Int)
  , ("to_index", Int)
  , ("tosock", Ref (Compound sbNodeSocket))
  , ("link", Ref (Compound sbNodeLink))
  ])

sbNode:: Struct
sbNode = ("bNode",
  [ ("next", Ref (Compound sbNode))
  , ("prev", Ref (Compound sbNode))
  , ("new_node", Ref (Compound sbNode))
  , ("name", Arr 32 (Char))
  , ("type", Short)
  , ("flag", Short)
  , ("done", Short)
  , ("level", Short)
  , ("lasty", Short)
  , ("menunr", Short)
  , ("stack_index", Short)
  , ("nr", Short)
  , ("inputs", Compound sListBase)
  , ("outputs", Compound sListBase)
  , ("id", Ref (Compound sID))
  , ("storage", Ref (RefVoid))
  , ("locx", Float)
  , ("locy", Float)
  , ("width", Float)
  , ("miniwidth", Float)
  , ("custom1", Short)
  , ("custom2", Short)
  , ("need_exec", Short)
  , ("exec", Short)
  , ("totr", Compound srctf)
  , ("butr", Compound srctf)
  , ("prvr", Compound srctf)
  , ("preview", RefVoid {- Ref (UnknownCompound bNodePreview) -})
  , ("typeinfo", RefVoid {- Ref (UnknownCompound bNodeType) -})
  ])

sbNodeLink:: Struct
sbNodeLink = ("bNodeLink",
  [ ("next", Ref (Compound sbNodeLink))
  , ("prev", Ref (Compound sbNodeLink))
  , ("fromnode", Ref (Compound sbNode))
  , ("tonode", Ref (Compound sbNode))
  , ("fromsock", Ref (Compound sbNodeSocket))
  , ("tosock", Ref (Compound sbNodeSocket))
  ])

sbNodeTree:: Struct
sbNodeTree = ("bNodeTree",
  [ ("id", Compound sID)
  , ("nodes", Compound sListBase)
  , ("links", Compound sListBase)
  , ("stack", Ref (Ref (Compound sbNodeStack)))
  , ("type", Int)
  , ("init", Int)
  , ("stacksize", Int)
  , ("cur_index", Int)
  , ("alltypes", Compound sListBase)
  , ("owntype", RefVoid {- Ref (UnknownCompound bNodeType) -})
  , ("timecursor", FunPtr (RefVoid))
  , ("stats_draw", FunPtr (RefVoid))
  , ("test_break", FunPtr (Int))
  ])

sNodeImageAnim:: Struct
sNodeImageAnim = ("NodeImageAnim",
  [ ("frames", Int)
  , ("sfra", Int)
  , ("nr", Int)
  , ("cyclic", Char)
  , ("movie", Char)
  , ("pad", Short)
  ])

sNodeBlurData:: Struct
sNodeBlurData = ("NodeBlurData",
  [ ("sizex", Short)
  , ("sizey", Short)
  , ("samples", Short)
  , ("maxspeed", Short)
  , ("minspeed", Short)
  , ("pad1", Short)
  , ("fac", Float)
  , ("filtertype", Short)
  , ("bokeh", Char)
  , ("gamma", Char)
  , ("pad2", Int)
  ])

sNodeHueSat:: Struct
sNodeHueSat = ("NodeHueSat",
  [ ("hue", Float)
  , ("sat", Float)
  , ("val", Float)
  ])

sNodeImageFile:: Struct
sNodeImageFile = ("NodeImageFile",
  [ ("name", Arr 256 (Char))
  , ("imtype", Short)
  , ("subimtype", Short)
  , ("quality", Short)
  , ("codec", Short)
  , ("sfra", Int)
  , ("efra", Int)
  ])

sNodeChroma:: Struct
sNodeChroma = ("NodeChroma",
  [ ("t1", Float)
  , ("t2", Float)
  , ("t3", Float)
  , ("fsize", Float)
  , ("fstrength", Float)
  , ("falpha", Float)
  , ("key", Arr 4 (Float))
  ])

sNodeGeometry:: Struct
sNodeGeometry = ("NodeGeometry",
  [ ("uvname", Arr 32 (Char))
  , ("colname", Arr 32 (Char))
  ])

sNodeVertexCol:: Struct
sNodeVertexCol = ("NodeVertexCol",
  [ ("name", Arr 32 (Char))
  ])

sNodeDefocus:: Struct
sNodeDefocus = ("NodeDefocus",
  [ ("bktype", Char)
  , ("rotation", Char)
  , ("preview", Char)
  , ("gamco", Char)
  , ("samples", Short)
  , ("no_zbuf", Short)
  , ("fstop", Float)
  , ("maxblur", Float)
  , ("bthresh", Float)
  , ("scale", Float)
  ])

sCurveMapPoint:: Struct
sCurveMapPoint = ("CurveMapPoint",
  [ ("x", Float)
  , ("y", Float)
  , ("flag", Short)
  , ("shorty", Short)
  ])

sCurveMap:: Struct
sCurveMap = ("CurveMap",
  [ ("totpoint", Short)
  , ("flag", Short)
  , ("range", Float)
  , ("mintable", Float)
  , ("maxtable", Float)
  , ("ext_in", Arr 2 (Float))
  , ("ext_out", Arr 2 (Float))
  , ("curve", Ref (Compound sCurveMapPoint))
  , ("table", Ref (Compound sCurveMapPoint))
  , ("premultable", Ref (Compound sCurveMapPoint))
  ])

sCurveMapping:: Struct
sCurveMapping = ("CurveMapping",
  [ ("flag", Int)
  , ("cur", Int)
  , ("curr", Compound srctf)
  , ("clipr", Compound srctf)
  , ("cm", Arr 4 (Compound sCurveMap))
  , ("black", Arr 3 (Float))
  , ("white", Arr 3 (Float))
  , ("bwmul", Arr 3 (Float))
  , ("padf", Float)
  ])

sBrushClone:: Struct
sBrushClone = ("BrushClone",
  [ ("image", Ref (Compound sImage))
  , ("offset", Arr 2 (Float))
  , ("alpha", Float)
  , ("pad", Float)
  ])

sBrush:: Struct
sBrush = ("Brush",
  [ ("id", Compound sID)
  , ("flag", Short)
  , ("blend", Short)
  , ("size", Int)
  , ("innerradius", Float)
  , ("spacing", Float)
  , ("rate", Float)
  , ("rgb", Arr 3 (Float))
  , ("alpha", Float)
  , ("texact", Short)
  , ("pad", Short)
  , ("mtex", Arr 10 (Ref (Compound sMTex)))
  , ("clone", Compound sBrushClone)
  ])

sCustomDataLayer:: Struct
sCustomDataLayer = ("CustomDataLayer",
  [ ("type", Int)
  , ("offset", Int)
  , ("flag", Int)
  , ("active", Int)
  , ("active_rnd", Int)
  , ("pad", Arr 4 (Char))
  , ("name", Arr 32 (Char))
  , ("data", Ref (RefVoid))
  ])

sCustomData:: Struct
sCustomData = ("CustomData",
  [ ("layers", Ref (Compound sCustomDataLayer))
  , ("totlayer", Int)
  , ("maxlayer", Int)
  , ("totsize", Int)
  , ("pad", Int)
  ])

sdna :: SDNA
sdna =
  [ sLink
  , sListBase
  , svec2s
  , svec2i
  , svec2f
  , svec2d
  , svec3i
  , svec3f
  , svec3d
  , svec4i
  , svec4f
  , svec4d
  , srcti
  , srctf
  , sIDPropertyData
  , sIDProperty
  , sID
  , sLibrary
  , sIpo
  , sKeyBlock
  , sKey
  , sScriptLink
  , sTextLine
  , sText
  , sPackedFile
  , sCamera
  , sPreviewImage
  , sImageUser
  , sImage
  , sMTex
  , sPluginTex
  , sCBData
  , sColorBand
  , sEnvMap
  , sTex
  , sTexMapping
  , sLamp
  , sWave
  , sMaterial
  , sVFont
  , sMetaElem
  , sMetaBall
  , sBezTriple
  , sBPoint
  , sNurb
  , sCharInfo
  , sTextBox
  , sCurve
  , sIpoDriver
  , sIpoCurve
  , sMesh
  , sTFace
  , sMFace
  , sMEdge
  , sMDeformWeight
  , sMDeformVert
  , sMVert
  , sMCol
  , sMSticky
  , sMSelect
  , sMTFace
  , sMultiresCol
  , sMultiresColFace
  , sMultiresFace
  , sMultiresEdge
  , sMultiresLevel
  , sMultires
  , sPartialVisibility
  , sModifierData
  , sSubsurfModifierData
  , sLatticeModifierData
  , sCurveModifierData
  , sBuildModifierData
  , sArrayModifierData
  , sMirrorModifierData
  , sEdgeSplitModifierData
  , sDisplaceModifierData
  , sUVProjectModifierData
  , sDecimateModifierData
  , sSmoothModifierData
  , sCastModifierData
  , sWaveModifierData
  , sArmatureModifierData
  , sHookModifierData
  , sSoftbodyModifierData
  , sBooleanModifierData
  , sLattice
  , sbDeformGroup
  , sBoundBox
  , sOcInfo
  , sLBuf
  , sObject
  , sObHook
  , sPartDeflect
  , sSBVertex
  , sSoftBody
  , sFluidsimSettings
  , sWorld
  , sRadio
  , sBase
  , sAviCodecData
  , sQuicktimeCodecData
  , sFFMpegCodecData
  , sAudioData
  , sSceneRenderLayer
  , sRenderData
  , sGameFraming
  , sTimeMarker
  , sImagePaintSettings
  , sToolSettings
  , sBrushData
  , sSculptData
  , sScene
  , sBGpic
  , sView3D
  , sView2D
  , sSpaceLink
  , sSpaceInfo
  , sSpaceIpo
  , sSpaceButs
  , sSpaceSeq
  , sSpaceFile
  , sSpaceOops
  , sSpaceImage
  , sSpaceNla
  , sSpaceText
  , sSpaceScript
  , sSpaceTime
  , sSpaceNode
  , sSpaceImaSel
  , sThemeUI
  , sThemeSpace
  , sbTheme
  , sSolidLight
  , sUserDef
  , sbScreen
  , sScrVert
  , sScrEdge
  , sPanel
  , sScrArea
  , sFileGlobal
  , sStripElem
  , sStrip
  , sPluginSeq
  , sSequence
  , sMetaStack
  , sEditing
  , sWipeVars
  , sGlowVars
  , sTransformVars
  , sSolidColorVars
  , sSpeedControlVars
  , sEffect
  , sBuildEff
  , sPartEff
  , sWaveEff
  , sTreeStoreElem
  , sTreeStore
  , sOops
  , sbProperty
  , sbNearSensor
  , sbMouseSensor
  , sbTouchSensor
  , sbKeyboardSensor
  , sbPropertySensor
  , sbCollisionSensor
  , sbRadarSensor
  , sbRandomSensor
  , sbRaySensor
  , sbMessageSensor
  , sbSensor
  , sbJoystickSensor
  , sbExpressionCont
  , sbPythonCont
  , sbController
  , sbAddObjectActuator
  , sbActionActuator
  , sbSoundActuator
  , sbCDActuator
  , sbEditObjectActuator
  , sbSceneActuator
  , sbPropertyActuator
  , sbObjectActuator
  , sbIpoActuator
  , sbCameraActuator
  , sbConstraintActuator
  , sbGroupActuator
  , sbRandomActuator
  , sbMessageActuator
  , sbGameActuator
  , sbVisibilityActuator
  , sbActuator
  , sFreeCamera
  , sbSound
  , sbSoundListener
  , sSpaceSound
  , sGroupObject
  , sGroup
  , sBone
  , sbArmature
  , sbPoseChannel
  , sbPose
  , sbActionChannel
  , sbAction
  , sSpaceAction
  , sbConstraintChannel
  , sbConstraint
  , sbKinematicConstraint
  , sbTrackToConstraint
  , sbRotateLikeConstraint
  , sbLocateLikeConstraint
  , sbMinMaxConstraint
  , sbSizeLikeConstraint
  , sbActionConstraint
  , sbLockTrackConstraint
  , sbFollowPathConstraint
  , sbDistanceLimitConstraint
  , sbRotationConstraint
  , sbStretchToConstraint
  , sbLocLimitConstraint
  , sbRotLimitConstraint
  , sbSizeLimitConstraint
  , sbRigidBodyJointConstraint
  , sbClampToConstraint
  , sbActionModifier
  , sbActionStrip
  , sbNodeStack
  , sbNodeSocket
  , sbNode
  , sbNodeLink
  , sbNodeTree
  , sNodeImageAnim
  , sNodeBlurData
  , sNodeHueSat
  , sNodeImageFile
  , sNodeChroma
  , sNodeGeometry
  , sNodeVertexCol
  , sNodeDefocus
  , sCurveMapPoint
  , sCurveMap
  , sCurveMapping
  , sBrushClone
  , sBrush
  , sCustomDataLayer
  , sCustomData
  ]
data Link = Link
  { link_next :: Integer {- struct Link * -}
  , link_prev :: Integer {- struct Link * -}
  }
  deriving Show

data ListBase = ListBase
  { listbase_first :: Integer {- void * * -}
  , listbase_last :: Integer {- void * * -}
  }
  deriving Show

data Vec2s = Vec2s
  { vec2s_x :: Int16 {- short -}
  , vec2s_y :: Int16 {- short -}
  }
  deriving Show

data Vec2i = Vec2i
  { vec2i_x :: Int32 {- int -}
  , vec2i_y :: Int32 {- int -}
  }
  deriving Show

data Vec2f = Vec2f
  { vec2f_x :: Float {- float -}
  , vec2f_y :: Float {- float -}
  }
  deriving Show

data Vec2d = Vec2d
  { vec2d_x :: Double {- double -}
  , vec2d_y :: Double {- double -}
  }
  deriving Show

data Vec3i = Vec3i
  { vec3i_x :: Int32 {- int -}
  , vec3i_y :: Int32 {- int -}
  , vec3i_z :: Int32 {- int -}
  }
  deriving Show

data Vec3f = Vec3f
  { vec3f_x :: Float {- float -}
  , vec3f_y :: Float {- float -}
  , vec3f_z :: Float {- float -}
  }
  deriving Show

data Vec3d = Vec3d
  { vec3d_x :: Double {- double -}
  , vec3d_y :: Double {- double -}
  , vec3d_z :: Double {- double -}
  }
  deriving Show

data Vec4i = Vec4i
  { vec4i_x :: Int32 {- int -}
  , vec4i_y :: Int32 {- int -}
  , vec4i_z :: Int32 {- int -}
  , vec4i_w :: Int32 {- int -}
  }
  deriving Show

data Vec4f = Vec4f
  { vec4f_x :: Float {- float -}
  , vec4f_y :: Float {- float -}
  , vec4f_z :: Float {- float -}
  , vec4f_w :: Float {- float -}
  }
  deriving Show

data Vec4d = Vec4d
  { vec4d_x :: Double {- double -}
  , vec4d_y :: Double {- double -}
  , vec4d_z :: Double {- double -}
  , vec4d_w :: Double {- double -}
  }
  deriving Show

data Rcti = Rcti
  { rcti_xmin :: Int32 {- int -}
  , rcti_xmax :: Int32 {- int -}
  , rcti_ymin :: Int32 {- int -}
  , rcti_ymax :: Int32 {- int -}
  }
  deriving Show

data Rctf = Rctf
  { rctf_xmin :: Float {- float -}
  , rctf_xmax :: Float {- float -}
  , rctf_ymin :: Float {- float -}
  , rctf_ymax :: Float {- float -}
  }
  deriving Show

data IDPropertyData = IDPropertyData
  { idpropertydata_pointer :: Integer {- void * * -}
  , idpropertydata_group :: ListBase {- struct ListBase -}
  , idpropertydata_val :: Int32 {- int -}
  , idpropertydata_pad :: Int32 {- int -}
  }
  deriving Show

data IDProperty = IDProperty
  { idproperty_next :: Integer {- struct IDProperty * -}
  , idproperty_prev :: Integer {- struct IDProperty * -}
  , idproperty_name :: ByteString {- char[32] -}
  , idproperty_type :: Int8 {- char -}
  , idproperty_subtype :: Int8 {- char -}
  , idproperty_flag :: Int16 {- short -}
  , idproperty_saved :: Int32 {- int -}
  , idproperty_data :: IDPropertyData {- struct IDPropertyData -}
  , idproperty_len :: Int32 {- int -}
  , idproperty_totallen :: Int32 {- int -}
  }
  deriving Show

data ID = ID
  { id_next :: Integer {- void * * -}
  , id_prev :: Integer {- void * * -}
  , id_newid :: Integer {- struct ID * -}
  , id_lib :: Integer {- struct Library * -}
  , id_name :: ByteString {- char[24] -}
  , id_us :: Int16 {- short -}
  , id_flag :: Int16 {- short -}
  , id_icon_id :: Int32 {- int -}
  , id_properties :: Integer {- struct IDProperty * -}
  }
  deriving Show

data Library = Library
  { library_id :: ID {- struct ID -}
  , library_idblock :: Integer {- struct ID * -}
  , library_filedata :: Integer {- struct FileData /* undefined */ * -}
  , library_name :: ByteString {- char[240] -}
  , library_filename :: ByteString {- char[240] -}
  , library_tot :: Int32 {- int -}
  , library_pad :: Int32 {- int -}
  , library_parent :: Integer {- struct Library * -}
  }
  deriving Show

data Ipo = Ipo
  { ipo_id :: ID {- struct ID -}
  , ipo_curve :: ListBase {- struct ListBase -}
  , ipo_cur :: Rctf {- struct rctf -}
  , ipo_blocktype :: Int16 {- short -}
  , ipo_showkey :: Int16 {- short -}
  , ipo_pad :: Int32 {- int -}
  }
  deriving Show

data KeyBlock = KeyBlock
  { keyblock_next :: Integer {- struct KeyBlock * -}
  , keyblock_prev :: Integer {- struct KeyBlock * -}
  , keyblock_pos :: Float {- float -}
  , keyblock_curval :: Float {- float -}
  , keyblock_type :: Int16 {- short -}
  , keyblock_adrcode :: Int16 {- short -}
  , keyblock_totelem :: Int32 {- int -}
  , keyblock_data :: Integer {- void * * -}
  , keyblock_weights :: Integer {- float * -}
  , keyblock_name :: ByteString {- char[32] -}
  , keyblock_vgroup :: ByteString {- char[32] -}
  , keyblock_slidermin :: Float {- float -}
  , keyblock_slidermax :: Float {- float -}
  }
  deriving Show

data Key = Key
  { key_id :: ID {- struct ID -}
  , key_refkey :: Integer {- struct KeyBlock * -}
  , key_elemstr :: ByteString {- char[32] -}
  , key_elemsize :: Int32 {- int -}
  , key_curval :: Float {- float -}
  , key_block :: ListBase {- struct ListBase -}
  , key_ipo :: Integer {- struct Ipo * -}
  , key_from :: Integer {- struct ID * -}
  , key_type :: Int16 {- short -}
  , key_totkey :: Int16 {- short -}
  , key_slurph :: Int16 {- short -}
  , key_flag :: Int16 {- short -}
  }
  deriving Show

data ScriptLink = ScriptLink
  { scriptlink_scripts :: Integer {- struct ID * * -}
  , scriptlink_flag :: Integer {- short * -}
  , scriptlink_actscript :: Int16 {- short -}
  , scriptlink_totscript :: Int16 {- short -}
  , scriptlink_pad :: Int32 {- int -}
  }
  deriving Show

data TextLine = TextLine
  { textline_next :: Integer {- struct TextLine * -}
  , textline_prev :: Integer {- struct TextLine * -}
  , textline_line :: Integer {- char * -}
  , textline_format :: Integer {- char * -}
  , textline_len :: Int32 {- int -}
  , textline_blen :: Int32 {- int -}
  }
  deriving Show

data Text = Text
  { text_id :: ID {- struct ID -}
  , text_name :: Integer {- char * -}
  , text_flags :: Int32 {- int -}
  , text_nlines :: Int32 {- int -}
  , text_lines :: ListBase {- struct ListBase -}
  , text_curl :: Integer {- struct TextLine * -}
  , text_sell :: Integer {- struct TextLine * -}
  , text_curc :: Int32 {- int -}
  , text_selc :: Int32 {- int -}
  , text_undo_buf :: Integer {- char * -}
  , text_undo_pos :: Int32 {- int -}
  , text_undo_len :: Int32 {- int -}
  , text_compiled :: Integer {- void * * -}
  }
  deriving Show

data PackedFile = PackedFile
  { packedfile_size :: Int32 {- int -}
  , packedfile_seek :: Int32 {- int -}
  , packedfile_flags :: Int32 {- int -}
  , packedfile_pad :: Int32 {- int -}
  , packedfile_data :: Integer {- void * * -}
  }
  deriving Show

data Camera = Camera
  { camera_id :: ID {- struct ID -}
  , camera_type :: Int16 {- short -}
  , camera_flag :: Int16 {- short -}
  , camera_passepartalpha :: Float {- float -}
  , camera_angle :: Float {- float -}
  , camera_clipsta :: Float {- float -}
  , camera_clipend :: Float {- float -}
  , camera_lens :: Float {- float -}
  , camera_ortho_scale :: Float {- float -}
  , camera_drawsize :: Float {- float -}
  , camera_shiftx :: Float {- float -}
  , camera_shifty :: Float {- float -}
  , camera_YF_dofdist :: Float {- float -}
  , camera_YF_aperture :: Float {- float -}
  , camera_YF_bkhtype :: Int16 {- short -}
  , camera_YF_bkhbias :: Int16 {- short -}
  , camera_YF_bkhrot :: Float {- float -}
  , camera_ipo :: Integer {- struct Ipo * -}
  , camera_scriptlink :: ScriptLink {- struct ScriptLink -}
  }
  deriving Show

data PreviewImage = PreviewImage
  { previewimage_w :: Int32 {- int -}
  , previewimage_h :: Int32 {- int -}
  , previewimage_rect :: Integer {- int * -}
  }
  deriving Show

data ImageUser = ImageUser
  { imageuser_framenr :: Int32 {- int -}
  , imageuser_frames :: Int32 {- int -}
  , imageuser_offset :: Int32 {- int -}
  , imageuser_sfra :: Int32 {- int -}
  , imageuser_fie_ima :: Int16 {- short -}
  , imageuser_cycl :: Int16 {- short -}
  , imageuser_flag :: Int16 {- short -}
  , imageuser_ok :: Int16 {- short -}
  , imageuser_multi_index :: Int16 {- short -}
  , imageuser_layer :: Int16 {- short -}
  , imageuser_pass :: Int16 {- short -}
  , imageuser_menunr :: Int16 {- short -}
  }
  deriving Show

data Image = Image
  { image_id :: ID {- struct ID -}
  , image_name :: ByteString {- char[240] -}
  , image_ibufs :: ListBase {- struct ListBase -}
  , image_anim :: Integer {- struct anim /* undefined */ * -}
  , image_rr :: Integer {- struct RenderResult /* undefined */ * -}
  , image_ok :: Int16 {- short -}
  , image_flag :: Int16 {- short -}
  , image_source :: Int16 {- short -}
  , image_type :: Int16 {- short -}
  , image_pad :: Int16 {- short -}
  , image_pad1 :: Int16 {- short -}
  , image_lastframe :: Int32 {- int -}
  , image_tpageflag :: Int16 {- short -}
  , image_totbind :: Int16 {- short -}
  , image_xrep :: Int16 {- short -}
  , image_yrep :: Int16 {- short -}
  , image_twsta :: Int16 {- short -}
  , image_twend :: Int16 {- short -}
  , image_bindcode :: Int32 {- int -}
  , image_repbind :: Integer {- int * -}
  , image_packedfile :: Integer {- struct PackedFile * -}
  , image_preview :: Integer {- struct PreviewImage * -}
  , image_lastupdate :: Float {- float -}
  , image_lastused :: Int32 {- int -}
  , image_animspeed :: Int16 {- short -}
  , image_gen_x :: Int16 {- short -}
  , image_gen_y :: Int16 {- short -}
  , image_gen_type :: Int16 {- short -}
  , image_vnode :: Integer {- void * * -}
  }
  deriving Show

data MTex = MTex
  { mtex_texco :: Int16 {- short -}
  , mtex_mapto :: Int16 {- short -}
  , mtex_maptoneg :: Int16 {- short -}
  , mtex_blendtype :: Int16 {- short -}
  , mtex_object :: Integer {- struct Object * -}
  , mtex_tex :: Integer {- struct Tex * -}
  , mtex_uvname :: ByteString {- char[32] -}
  , mtex_projx :: Int8 {- char -}
  , mtex_projy :: Int8 {- char -}
  , mtex_projz :: Int8 {- char -}
  , mtex_mapping :: Int8 {- char -}
  , mtex_ofs :: [Float {- float -}] {- float[3] -}
  , mtex_size :: [Float {- float -}] {- float[3] -}
  , mtex_texflag :: Int16 {- short -}
  , mtex_colormodel :: Int16 {- short -}
  , mtex_r :: Float {- float -}
  , mtex_g :: Float {- float -}
  , mtex_b :: Float {- float -}
  , mtex_k :: Float {- float -}
  , mtex_def_var :: Float {- float -}
  , mtex_colfac :: Float {- float -}
  , mtex_norfac :: Float {- float -}
  , mtex_varfac :: Float {- float -}
  , mtex_dispfac :: Float {- float -}
  , mtex_warpfac :: Float {- float -}
  }
  deriving Show

data PluginTex = PluginTex
  { plugintex_name :: ByteString {- char[160] -}
  , plugintex_handle :: Integer {- void * * -}
  , plugintex_pname :: Integer {- char * -}
  , plugintex_stnames :: Integer {- char * -}
  , plugintex_stypes :: Int32 {- int -}
  , plugintex_vars :: Int32 {- int -}
  , plugintex_varstr :: Integer {- void * * -}
  , plugintex_result :: Integer {- float * -}
  , plugintex_cfra :: Integer {- float * -}
  , plugintex_data :: [Float {- float -}] {- float[32] -}
  , plugintex_doit :: Integer {- int (*xxx)() -}
  , plugintex_instance_init :: Integer {- void * (*xxx)() -}
  , plugintex_callback :: Integer {- void * (*xxx)() -}
  , plugintex_version :: Int32 {- int -}
  , plugintex_pad :: Int32 {- int -}
  }
  deriving Show

data CBData = CBData
  { cbdata_r :: Float {- float -}
  , cbdata_g :: Float {- float -}
  , cbdata_b :: Float {- float -}
  , cbdata_a :: Float {- float -}
  , cbdata_pos :: Float {- float -}
  , cbdata_cur :: Int32 {- int -}
  }
  deriving Show

data ColorBand = ColorBand
  { colorband_flag :: Int16 {- short -}
  , colorband_tot :: Int16 {- short -}
  , colorband_cur :: Int16 {- short -}
  , colorband_ipotype :: Int16 {- short -}
  , colorband_data :: [CBData {- struct CBData -}] {- struct CBData[32] -}
  }
  deriving Show

data EnvMap = EnvMap
  { envmap_object :: Integer {- struct Object * -}
  , envmap_ima :: Integer {- struct Image * -}
  , envmap_cube :: [Integer {- struct ImBuf /* undefined */ * -}] {- struct ImBuf /* undefined */ *[6] -}
  , envmap_imat :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , envmap_obimat :: [[Float {- float -}] {- float[3] -}] {- float [3][3] -}
  , envmap_type :: Int16 {- short -}
  , envmap_stype :: Int16 {- short -}
  , envmap_clipsta :: Float {- float -}
  , envmap_clipend :: Float {- float -}
  , envmap_viewscale :: Float {- float -}
  , envmap_notlay :: Int32 {- int -}
  , envmap_cuberes :: Int16 {- short -}
  , envmap_depth :: Int16 {- short -}
  , envmap_ok :: Int32 {- int -}
  , envmap_lastframe :: Int32 {- int -}
  , envmap_recalc :: Int16 {- short -}
  , envmap_lastsize :: Int16 {- short -}
  }
  deriving Show

data Tex = Tex
  { tex_id :: ID {- struct ID -}
  , tex_noisesize :: Float {- float -}
  , tex_turbul :: Float {- float -}
  , tex_bright :: Float {- float -}
  , tex_contrast :: Float {- float -}
  , tex_rfac :: Float {- float -}
  , tex_gfac :: Float {- float -}
  , tex_bfac :: Float {- float -}
  , tex_filtersize :: Float {- float -}
  , tex_mg_H :: Float {- float -}
  , tex_mg_lacunarity :: Float {- float -}
  , tex_mg_octaves :: Float {- float -}
  , tex_mg_offset :: Float {- float -}
  , tex_mg_gain :: Float {- float -}
  , tex_dist_amount :: Float {- float -}
  , tex_ns_outscale :: Float {- float -}
  , tex_vn_w1 :: Float {- float -}
  , tex_vn_w2 :: Float {- float -}
  , tex_vn_w3 :: Float {- float -}
  , tex_vn_w4 :: Float {- float -}
  , tex_vn_mexp :: Float {- float -}
  , tex_vn_distm :: Int16 {- short -}
  , tex_vn_coltype :: Int16 {- short -}
  , tex_noisedepth :: Int16 {- short -}
  , tex_noisetype :: Int16 {- short -}
  , tex_noisebasis :: Int16 {- short -}
  , tex_noisebasis2 :: Int16 {- short -}
  , tex_imaflag :: Int16 {- short -}
  , tex_flag :: Int16 {- short -}
  , tex_type :: Int16 {- short -}
  , tex_stype :: Int16 {- short -}
  , tex_cropxmin :: Float {- float -}
  , tex_cropymin :: Float {- float -}
  , tex_cropxmax :: Float {- float -}
  , tex_cropymax :: Float {- float -}
  , tex_xrepeat :: Int16 {- short -}
  , tex_yrepeat :: Int16 {- short -}
  , tex_extend :: Int16 {- short -}
  , tex_fie_ima :: Int16 {- short -}
  , tex_len :: Int32 {- int -}
  , tex_frames :: Int32 {- int -}
  , tex_offset :: Int32 {- int -}
  , tex_sfra :: Int32 {- int -}
  , tex_checkerdist :: Float {- float -}
  , tex_nabla :: Float {- float -}
  , tex_norfac :: Float {- float -}
  , tex_iuser :: ImageUser {- struct ImageUser -}
  , tex_ipo :: Integer {- struct Ipo * -}
  , tex_ima :: Integer {- struct Image * -}
  , tex_plugin :: Integer {- struct PluginTex * -}
  , tex_coba :: Integer {- struct ColorBand * -}
  , tex_env :: Integer {- struct EnvMap * -}
  }
  deriving Show

data TexMapping = TexMapping
  { texmapping_loc :: [Float {- float -}] {- float[3] -}
  , texmapping_rot :: [Float {- float -}] {- float[3] -}
  , texmapping_size :: [Float {- float -}] {- float[3] -}
  , texmapping_flag :: Int32 {- int -}
  , texmapping_mat :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , texmapping_min :: [Float {- float -}] {- float[3] -}
  , texmapping_max :: [Float {- float -}] {- float[3] -}
  , texmapping_ob :: Integer {- struct Object * -}
  }
  deriving Show

data Lamp = Lamp
  { lamp_id :: ID {- struct ID -}
  , lamp_type :: Int16 {- short -}
  , lamp_mode :: Int16 {- short -}
  , lamp_colormodel :: Int16 {- short -}
  , lamp_totex :: Int16 {- short -}
  , lamp_r :: Float {- float -}
  , lamp_g :: Float {- float -}
  , lamp_b :: Float {- float -}
  , lamp_k :: Float {- float -}
  , lamp_energy :: Float {- float -}
  , lamp_dist :: Float {- float -}
  , lamp_spotsize :: Float {- float -}
  , lamp_spotblend :: Float {- float -}
  , lamp_haint :: Float {- float -}
  , lamp_att1 :: Float {- float -}
  , lamp_att2 :: Float {- float -}
  , lamp_clipsta :: Float {- float -}
  , lamp_clipend :: Float {- float -}
  , lamp_shadspotsize :: Float {- float -}
  , lamp_bias :: Float {- float -}
  , lamp_soft :: Float {- float -}
  , lamp_bufsize :: Int16 {- short -}
  , lamp_samp :: Int16 {- short -}
  , lamp_buffers :: Int16 {- short -}
  , lamp_filtertype :: Int16 {- short -}
  , lamp_bufflag :: Int8 {- char -}
  , lamp_buftype :: Int8 {- char -}
  , lamp_ray_samp :: Int16 {- short -}
  , lamp_ray_sampy :: Int16 {- short -}
  , lamp_ray_sampz :: Int16 {- short -}
  , lamp_ray_samp_type :: Int16 {- short -}
  , lamp_area_shape :: Int16 {- short -}
  , lamp_area_size :: Float {- float -}
  , lamp_area_sizey :: Float {- float -}
  , lamp_area_sizez :: Float {- float -}
  , lamp_texact :: Int16 {- short -}
  , lamp_shadhalostep :: Int16 {- short -}
  , lamp_YF_numphotons :: Int32 {- int -}
  , lamp_YF_numsearch :: Int32 {- int -}
  , lamp_YF_phdepth :: Int16 {- short -}
  , lamp_YF_useqmc :: Int16 {- short -}
  , lamp_YF_bufsize :: Int16 {- short -}
  , lamp_YF_pad :: Int16 {- short -}
  , lamp_YF_causticblur :: Float {- float -}
  , lamp_YF_ltradius :: Float {- float -}
  , lamp_YF_glowint :: Float {- float -}
  , lamp_YF_glowofs :: Float {- float -}
  , lamp_YF_glowtype :: Int16 {- short -}
  , lamp_YF_pad2 :: Int16 {- short -}
  , lamp_mtex :: [Integer {- struct MTex * -}] {- struct MTex *[10] -}
  , lamp_ipo :: Integer {- struct Ipo * -}
  , lamp_scriptlink :: ScriptLink {- struct ScriptLink -}
  }
  deriving Show

data Wave = Wave
  { wave_id :: ID {- struct ID -}
  , wave_ipo :: Integer {- struct Ipo * -}
  }
  deriving Show

data Material = Material
  { material_id :: ID {- struct ID -}
  , material_colormodel :: Int16 {- short -}
  , material_flag :: Int16 {- short -}
  , material_r :: Float {- float -}
  , material_g :: Float {- float -}
  , material_b :: Float {- float -}
  , material_specr :: Float {- float -}
  , material_specg :: Float {- float -}
  , material_specb :: Float {- float -}
  , material_mirr :: Float {- float -}
  , material_mirg :: Float {- float -}
  , material_mirb :: Float {- float -}
  , material_ambr :: Float {- float -}
  , material_ambb :: Float {- float -}
  , material_ambg :: Float {- float -}
  , material_amb :: Float {- float -}
  , material_emit :: Float {- float -}
  , material_ang :: Float {- float -}
  , material_spectra :: Float {- float -}
  , material_ray_mirror :: Float {- float -}
  , material_alpha :: Float {- float -}
  , material_ref :: Float {- float -}
  , material_spec :: Float {- float -}
  , material_zoffs :: Float {- float -}
  , material_add :: Float {- float -}
  , material_translucency :: Float {- float -}
  , material_fresnel_mir :: Float {- float -}
  , material_fresnel_mir_i :: Float {- float -}
  , material_fresnel_tra :: Float {- float -}
  , material_fresnel_tra_i :: Float {- float -}
  , material_filter :: Float {- float -}
  , material_tx_limit :: Float {- float -}
  , material_tx_falloff :: Float {- float -}
  , material_ray_depth :: Int16 {- short -}
  , material_ray_depth_tra :: Int16 {- short -}
  , material_har :: Int16 {- short -}
  , material_seed1 :: Int8 {- char -}
  , material_seed2 :: Int8 {- char -}
  , material_mode :: Int32 {- int -}
  , material_mode_l :: Int32 {- int -}
  , material_flarec :: Int16 {- short -}
  , material_starc :: Int16 {- short -}
  , material_linec :: Int16 {- short -}
  , material_ringc :: Int16 {- short -}
  , material_hasize :: Float {- float -}
  , material_flaresize :: Float {- float -}
  , material_subsize :: Float {- float -}
  , material_flareboost :: Float {- float -}
  , material_strand_sta :: Float {- float -}
  , material_strand_end :: Float {- float -}
  , material_strand_ease :: Float {- float -}
  , material_sbias :: Float {- float -}
  , material_shad_alpha :: Float {- float -}
  , material_padf :: Float {- float -}
  , material_rgbsel :: Int8 {- char -}
  , material_texact :: Int8 {- char -}
  , material_pr_type :: Int8 {- char -}
  , material_use_nodes :: Int8 {- char -}
  , material_pr_back :: Int16 {- short -}
  , material_pr_lamp :: Int16 {- short -}
  , material_septex :: Int16 {- short -}
  , material_ml_flag :: Int16 {- short -}
  , material_diff_shader :: Int16 {- short -}
  , material_spec_shader :: Int16 {- short -}
  , material_roughness :: Float {- float -}
  , material_refrac :: Float {- float -}
  , material_param :: [Float {- float -}] {- float[4] -}
  , material_rms :: Float {- float -}
  , material_darkness :: Float {- float -}
  , material_texco :: Int16 {- short -}
  , material_mapto :: Int16 {- short -}
  , material_ramp_col :: Integer {- struct ColorBand * -}
  , material_ramp_spec :: Integer {- struct ColorBand * -}
  , material_rampin_col :: Int8 {- char -}
  , material_rampin_spec :: Int8 {- char -}
  , material_rampblend_col :: Int8 {- char -}
  , material_rampblend_spec :: Int8 {- char -}
  , material_ramp_show :: Int16 {- short -}
  , material_pad3 :: Int16 {- short -}
  , material_rampfac_col :: Float {- float -}
  , material_rampfac_spec :: Float {- float -}
  , material_mtex :: [Integer {- struct MTex * -}] {- struct MTex *[10] -}
  , material_nodetree :: Integer {- struct bNodeTree * -}
  , material_ipo :: Integer {- struct Ipo * -}
  , material_group :: Integer {- struct Group * -}
  , material_friction :: Float {- float -}
  , material_fh :: Float {- float -}
  , material_reflect :: Float {- float -}
  , material_fhdist :: Float {- float -}
  , material_xyfrict :: Float {- float -}
  , material_dynamode :: Int16 {- short -}
  , material_pad2 :: Int16 {- short -}
  , material_sss_radius :: [Float {- float -}] {- float[3] -}
  , material_sss_col :: [Float {- float -}] {- float[3] -}
  , material_sss_error :: Float {- float -}
  , material_sss_scale :: Float {- float -}
  , material_sss_ior :: Float {- float -}
  , material_sss_colfac :: Float {- float -}
  , material_sss_texfac :: Float {- float -}
  , material_sss_front :: Float {- float -}
  , material_sss_back :: Float {- float -}
  , material_sss_flag :: Int16 {- short -}
  , material_sss_preset :: Int16 {- short -}
  , material_YF_ar :: Float {- float -}
  , material_YF_ag :: Float {- float -}
  , material_YF_ab :: Float {- float -}
  , material_YF_dscale :: Float {- float -}
  , material_YF_dpwr :: Float {- float -}
  , material_YF_dsmp :: Int32 {- int -}
  , material_YF_preset :: Int32 {- int -}
  , material_YF_djit :: Int32 {- int -}
  , material_scriptlink :: ScriptLink {- struct ScriptLink -}
  }
  deriving Show

data VFont = VFont
  { vfont_id :: ID {- struct ID -}
  , vfont_name :: ByteString {- char[256] -}
  , vfont_scale :: Float {- float -}
  , vfont_pad :: Float {- float -}
  , vfont_data :: Integer {- struct VFontData /* undefined */ * -}
  , vfont_packedfile :: Integer {- struct PackedFile * -}
  }
  deriving Show

data MetaElem = MetaElem
  { metaelem_next :: Integer {- struct MetaElem * -}
  , metaelem_prev :: Integer {- struct MetaElem * -}
  , metaelem_bb :: Integer {- struct BoundBox * -}
  , metaelem_i1 :: Int32 {- int -}
  , metaelem_j1 :: Int32 {- int -}
  , metaelem_k1 :: Int32 {- int -}
  , metaelem_i2 :: Int32 {- int -}
  , metaelem_j2 :: Int32 {- int -}
  , metaelem_k2 :: Int32 {- int -}
  , metaelem_type :: Int16 {- short -}
  , metaelem_flag :: Int16 {- short -}
  , metaelem_selcol1 :: Int16 {- short -}
  , metaelem_selcol2 :: Int16 {- short -}
  , metaelem_x :: Float {- float -}
  , metaelem_y :: Float {- float -}
  , metaelem_z :: Float {- float -}
  , metaelem_quat :: [Float {- float -}] {- float[4] -}
  , metaelem_expx :: Float {- float -}
  , metaelem_expy :: Float {- float -}
  , metaelem_expz :: Float {- float -}
  , metaelem_rad :: Float {- float -}
  , metaelem_rad2 :: Float {- float -}
  , metaelem_s :: Float {- float -}
  , metaelem_len :: Float {- float -}
  , metaelem_mat :: Integer {- float * -}
  , metaelem_imat :: Integer {- float * -}
  }
  deriving Show

data MetaBall = MetaBall
  { metaball_id :: ID {- struct ID -}
  , metaball_bb :: Integer {- struct BoundBox * -}
  , metaball_elems :: ListBase {- struct ListBase -}
  , metaball_disp :: ListBase {- struct ListBase -}
  , metaball_ipo :: Integer {- struct Ipo * -}
  , metaball_mat :: Integer {- struct Material * * -}
  , metaball_flag :: Int16 {- short -}
  , metaball_totcol :: Int16 {- short -}
  , metaball_texflag :: Int32 {- int -}
  , metaball_loc :: [Float {- float -}] {- float[3] -}
  , metaball_size :: [Float {- float -}] {- float[3] -}
  , metaball_rot :: [Float {- float -}] {- float[3] -}
  , metaball_wiresize :: Float {- float -}
  , metaball_rendersize :: Float {- float -}
  , metaball_thresh :: Float {- float -}
  }
  deriving Show

data BezTriple = BezTriple
  { beztriple_vec :: [[Float {- float -}] {- float[3] -}] {- float [3][3] -}
  , beztriple_alfa :: Float {- float -}
  , beztriple_weight :: Float {- float -}
  , beztriple_radius :: Float {- float -}
  , beztriple_h1 :: Int16 {- short -}
  , beztriple_h2 :: Int16 {- short -}
  , beztriple_f1 :: Int8 {- char -}
  , beztriple_f2 :: Int8 {- char -}
  , beztriple_f3 :: Int8 {- char -}
  , beztriple_hide :: Int8 {- char -}
  }
  deriving Show

data BPoint = BPoint
  { bpoint_vec :: [Float {- float -}] {- float[4] -}
  , bpoint_alfa :: Float {- float -}
  , bpoint_weight :: Float {- float -}
  , bpoint_f1 :: Int16 {- short -}
  , bpoint_hide :: Int16 {- short -}
  , bpoint_radius :: Float {- float -}
  , bpoint_pad :: Float {- float -}
  }
  deriving Show

data Nurb = Nurb
  { nurb_next :: Integer {- struct Nurb * -}
  , nurb_prev :: Integer {- struct Nurb * -}
  , nurb_type :: Int16 {- short -}
  , nurb_mat_nr :: Int16 {- short -}
  , nurb_hide :: Int16 {- short -}
  , nurb_flag :: Int16 {- short -}
  , nurb_pntsu :: Int16 {- short -}
  , nurb_pntsv :: Int16 {- short -}
  , nurb_resolu :: Int16 {- short -}
  , nurb_resolv :: Int16 {- short -}
  , nurb_orderu :: Int16 {- short -}
  , nurb_orderv :: Int16 {- short -}
  , nurb_flagu :: Int16 {- short -}
  , nurb_flagv :: Int16 {- short -}
  , nurb_knotsu :: Integer {- float * -}
  , nurb_knotsv :: Integer {- float * -}
  , nurb_bp :: Integer {- struct BPoint * -}
  , nurb_bezt :: Integer {- struct BezTriple * -}
  , nurb_charidx :: Int32 {- int -}
  , nurb_pad :: Int32 {- int -}
  }
  deriving Show

data CharInfo = CharInfo
  { charinfo_kern :: Int16 {- short -}
  , charinfo_mat_nr :: Int16 {- short -}
  , charinfo_flag :: Int8 {- char -}
  , charinfo_pad :: Int8 {- char -}
  , charinfo_pad2 :: Int16 {- short -}
  }
  deriving Show

data TextBox = TextBox
  { textbox_x :: Float {- float -}
  , textbox_y :: Float {- float -}
  , textbox_w :: Float {- float -}
  , textbox_h :: Float {- float -}
  }
  deriving Show

data Curve = Curve
  { curve_id :: ID {- struct ID -}
  , curve_bb :: Integer {- struct BoundBox * -}
  , curve_nurb :: ListBase {- struct ListBase -}
  , curve_disp :: ListBase {- struct ListBase -}
  , curve_bevobj :: Integer {- struct Object * -}
  , curve_taperobj :: Integer {- struct Object * -}
  , curve_textoncurve :: Integer {- struct Object * -}
  , curve_ipo :: Integer {- struct Ipo * -}
  , curve_path :: Integer {- struct Path /* undefined */ * -}
  , curve_key :: Integer {- struct Key * -}
  , curve_mat :: Integer {- struct Material * * -}
  , curve_bev :: ListBase {- struct ListBase -}
  , curve_loc :: [Float {- float -}] {- float[3] -}
  , curve_size :: [Float {- float -}] {- float[3] -}
  , curve_rot :: [Float {- float -}] {- float[3] -}
  , curve_texflag :: Int32 {- int -}
  , curve_pathlen :: Int16 {- short -}
  , curve_totcol :: Int16 {- short -}
  , curve_flag :: Int16 {- short -}
  , curve_bevresol :: Int16 {- short -}
  , curve_width :: Float {- float -}
  , curve_ext1 :: Float {- float -}
  , curve_ext2 :: Float {- float -}
  , curve_resolu :: Int16 {- short -}
  , curve_resolv :: Int16 {- short -}
  , curve_resolu_ren :: Int16 {- short -}
  , curve_resolv_ren :: Int16 {- short -}
  , curve_pad2 :: Int32 {- int -}
  , curve_len :: Int16 {- short -}
  , curve_lines :: Int16 {- short -}
  , curve_pos :: Int16 {- short -}
  , curve_spacemode :: Int16 {- short -}
  , curve_spacing :: Float {- float -}
  , curve_linedist :: Float {- float -}
  , curve_shear :: Float {- float -}
  , curve_fsize :: Float {- float -}
  , curve_wordspace :: Float {- float -}
  , curve_ulpos :: Float {- float -}
  , curve_ulheight :: Float {- float -}
  , curve_xof :: Float {- float -}
  , curve_yof :: Float {- float -}
  , curve_linewidth :: Float {- float -}
  , curve_str :: Integer {- char * -}
  , curve_family :: ByteString {- char[24] -}
  , curve_vfont :: Integer {- struct VFont * -}
  , curve_vfontb :: Integer {- struct VFont * -}
  , curve_vfonti :: Integer {- struct VFont * -}
  , curve_vfontbi :: Integer {- struct VFont * -}
  , curve_sepchar :: Int32 {- int -}
  , curve_totbox :: Int32 {- int -}
  , curve_actbox :: Int32 {- int -}
  , curve_pad :: Int32 {- int -}
  , curve_tb :: Integer {- struct TextBox * -}
  , curve_selstart :: Int32 {- int -}
  , curve_selend :: Int32 {- int -}
  , curve_strinfo :: Integer {- struct CharInfo * -}
  , curve_curinfo :: CharInfo {- struct CharInfo -}
  }
  deriving Show

data IpoDriver = IpoDriver
  { ipodriver_ob :: Integer {- struct Object * -}
  , ipodriver_blocktype :: Int16 {- short -}
  , ipodriver_adrcode :: Int16 {- short -}
  , ipodriver_type :: Int16 {- short -}
  , ipodriver_flag :: Int16 {- short -}
  , ipodriver_name :: ByteString {- char[128] -}
  }
  deriving Show

data IpoCurve = IpoCurve
  { ipocurve_next :: Integer {- struct IpoCurve * -}
  , ipocurve_prev :: Integer {- struct IpoCurve * -}
  , ipocurve_bp :: Integer {- struct BPoint * -}
  , ipocurve_bezt :: Integer {- struct BezTriple * -}
  , ipocurve_maxrct :: Rctf {- struct rctf -}
  , ipocurve_totrct :: Rctf {- struct rctf -}
  , ipocurve_blocktype :: Int16 {- short -}
  , ipocurve_adrcode :: Int16 {- short -}
  , ipocurve_vartype :: Int16 {- short -}
  , ipocurve_totvert :: Int16 {- short -}
  , ipocurve_ipo :: Int16 {- short -}
  , ipocurve_extrap :: Int16 {- short -}
  , ipocurve_flag :: Int16 {- short -}
  , ipocurve_rt :: Int16 {- short -}
  , ipocurve_ymin :: Float {- float -}
  , ipocurve_ymax :: Float {- float -}
  , ipocurve_bitmask :: Int32 {- int -}
  , ipocurve_slide_min :: Float {- float -}
  , ipocurve_slide_max :: Float {- float -}
  , ipocurve_curval :: Float {- float -}
  , ipocurve_driver :: Integer {- struct IpoDriver * -}
  }
  deriving Show

data Mesh = Mesh
  { mesh_id :: ID {- struct ID -}
  , mesh_bb :: Integer {- struct BoundBox * -}
  , mesh_effect :: ListBase {- struct ListBase -}
  , mesh_ipo :: Integer {- struct Ipo * -}
  , mesh_key :: Integer {- struct Key * -}
  , mesh_mat :: Integer {- struct Material * * -}
  , mesh_mface :: Integer {- struct MFace * -}
  , mesh_mtface :: Integer {- struct MTFace * -}
  , mesh_tface :: Integer {- struct TFace * -}
  , mesh_mvert :: Integer {- struct MVert * -}
  , mesh_medge :: Integer {- struct MEdge * -}
  , mesh_dvert :: Integer {- struct MDeformVert * -}
  , mesh_mcol :: Integer {- struct MCol * -}
  , mesh_msticky :: Integer {- struct MSticky * -}
  , mesh_texcomesh :: Integer {- struct Mesh * -}
  , mesh_mselect :: Integer {- struct MSelect * -}
  , mesh_oc :: Integer {- struct OcInfo * -}
  , mesh_sumohandle :: Integer {- void * * -}
  , mesh_vdata :: CustomData {- struct CustomData -}
  , mesh_edata :: CustomData {- struct CustomData -}
  , mesh_fdata :: CustomData {- struct CustomData -}
  , mesh_totvert :: Int32 {- int -}
  , mesh_totedge :: Int32 {- int -}
  , mesh_totface :: Int32 {- int -}
  , mesh_totselect :: Int32 {- int -}
  , mesh_pad2 :: Int32 {- int -}
  , mesh_texflag :: Int32 {- int -}
  , mesh_loc :: [Float {- float -}] {- float[3] -}
  , mesh_size :: [Float {- float -}] {- float[3] -}
  , mesh_rot :: [Float {- float -}] {- float[3] -}
  , mesh_cubemapsize :: Float {- float -}
  , mesh_pad :: Float {- float -}
  , mesh_smoothresh :: Int16 {- short -}
  , mesh_flag :: Int16 {- short -}
  , mesh_subdiv :: Int16 {- short -}
  , mesh_subdivr :: Int16 {- short -}
  , mesh_totcol :: Int16 {- short -}
  , mesh_subsurftype :: Int16 {- short -}
  , mesh_mr :: Integer {- struct Multires * -}
  , mesh_pv :: Integer {- struct PartialVisibility * -}
  , mesh_vnode :: Integer {- void * * -}
  }
  deriving Show

data TFace = TFace
  { tface_tpage :: Integer {- void * * -}
  , tface_uv :: [[Float {- float -}] {- float[4] -}] {- float [4][2] -}
  , tface_col :: [Int32 {- int -}] {- int[4] -}
  , tface_flag :: Int8 {- char -}
  , tface_transp :: Int8 {- char -}
  , tface_mode :: Int16 {- short -}
  , tface_tile :: Int16 {- short -}
  , tface_unwrap :: Int16 {- short -}
  }
  deriving Show

data MFace = MFace
  { mface_v1 :: Int32 {- int -}
  , mface_v2 :: Int32 {- int -}
  , mface_v3 :: Int32 {- int -}
  , mface_v4 :: Int32 {- int -}
  , mface_pad :: Int8 {- char -}
  , mface_mat_nr :: Int8 {- char -}
  , mface_edcode :: Int8 {- char -}
  , mface_flag :: Int8 {- char -}
  }
  deriving Show

data MEdge = MEdge
  { medge_v1 :: Int32 {- int -}
  , medge_v2 :: Int32 {- int -}
  , medge_crease :: Int8 {- char -}
  , medge_pad :: Int8 {- char -}
  , medge_flag :: Int16 {- short -}
  }
  deriving Show

data MDeformWeight = MDeformWeight
  { mdeformweight_def_nr :: Int32 {- int -}
  , mdeformweight_weight :: Float {- float -}
  }
  deriving Show

data MDeformVert = MDeformVert
  { mdeformvert_dw :: Integer {- struct MDeformWeight * -}
  , mdeformvert_totweight :: Int32 {- int -}
  , mdeformvert_flag :: Int32 {- int -}
  }
  deriving Show

data MVert = MVert
  { mvert_co :: [Float {- float -}] {- float[3] -}
  , mvert_no :: [Int16 {- short -}] {- short[3] -}
  , mvert_flag :: Int8 {- char -}
  , mvert_mat_nr :: Int8 {- char -}
  }
  deriving Show

data MCol = MCol
  { mcol_a :: Int8 {- char -}
  , mcol_r :: Int8 {- char -}
  , mcol_g :: Int8 {- char -}
  , mcol_b :: Int8 {- char -}
  }
  deriving Show

data MSticky = MSticky
  { msticky_co :: [Float {- float -}] {- float[2] -}
  }
  deriving Show

data MSelect = MSelect
  { mselect_index :: Int32 {- int -}
  , mselect_type :: Int32 {- int -}
  }
  deriving Show

data MTFace = MTFace
  { mtface_uv :: [[Float {- float -}] {- float[4] -}] {- float [4][2] -}
  , mtface_tpage :: Integer {- struct Image * -}
  , mtface_flag :: Int8 {- char -}
  , mtface_transp :: Int8 {- char -}
  , mtface_mode :: Int16 {- short -}
  , mtface_tile :: Int16 {- short -}
  , mtface_unwrap :: Int16 {- short -}
  }
  deriving Show

data MultiresCol = MultiresCol
  { multirescol_a :: Float {- float -}
  , multirescol_r :: Float {- float -}
  , multirescol_g :: Float {- float -}
  , multirescol_b :: Float {- float -}
  }
  deriving Show

data MultiresColFace = MultiresColFace
  { multirescolface_col :: [MultiresCol {- struct MultiresCol -}] {- struct MultiresCol[4] -}
  }
  deriving Show

data MultiresFace = MultiresFace
  { multiresface_v :: [Int32 {- int -}] {- int[4] -}
  , multiresface_mid :: Int32 {- int -}
  , multiresface_childrenstart :: Int32 {- int -}
  , multiresface_flag :: Int8 {- char -}
  , multiresface_mat_nr :: Int8 {- char -}
  , multiresface_pad :: ByteString {- char[2] -}
  }
  deriving Show

data MultiresEdge = MultiresEdge
  { multiresedge_v :: [Int32 {- int -}] {- int[2] -}
  , multiresedge_mid :: Int32 {- int -}
  }
  deriving Show

data MultiresLevel = MultiresLevel
  { multireslevel_next :: Integer {- struct MultiresLevel * -}
  , multireslevel_prev :: Integer {- struct MultiresLevel * -}
  , multireslevel_verts :: Integer {- struct MVert * -}
  , multireslevel_faces :: Integer {- struct MultiresFace * -}
  , multireslevel_colfaces :: Integer {- struct MultiresColFace * -}
  , multireslevel_edges :: Integer {- struct MultiresEdge * -}
  , multireslevel_vert_edge_map :: Integer {- struct ListBase * -}
  , multireslevel_vert_face_map :: Integer {- struct ListBase * -}
  , multireslevel_map_mem :: Integer {- struct MultiresMapNode /* undefined */ * -}
  , multireslevel_totvert :: Int32 {- int -}
  , multireslevel_totface :: Int32 {- int -}
  , multireslevel_totedge :: Int32 {- int -}
  , multireslevel_pad :: Int32 {- int -}
  }
  deriving Show

data Multires = Multires
  { multires_levels :: ListBase {- struct ListBase -}
  , multires_level_count :: Int8 {- char -}
  , multires_current :: Int8 {- char -}
  , multires_newlvl :: Int8 {- char -}
  , multires_edgelvl :: Int8 {- char -}
  , multires_pinlvl :: Int8 {- char -}
  , multires_renderlvl :: Int8 {- char -}
  , multires_use_col :: Int8 {- char -}
  , multires_pad :: Int8 {- char -}
  , multires_vdata :: CustomData {- struct CustomData -}
  , multires_fdata :: CustomData {- struct CustomData -}
  , multires_edge_flags :: Integer {- short * -}
  , multires_edge_creases :: Integer {- char * -}
  }
  deriving Show

data PartialVisibility = PartialVisibility
  { partialvisibility_vert_map :: Integer {- int * -}
  , partialvisibility_edge_map :: Integer {- int * -}
  , partialvisibility_old_faces :: Integer {- struct MFace * -}
  , partialvisibility_old_edges :: Integer {- struct MEdge * -}
  , partialvisibility_totface :: Int32 {- int -}
  , partialvisibility_totedge :: Int32 {- int -}
  , partialvisibility_totvert :: Int32 {- int -}
  , partialvisibility_pad :: Int32 {- int -}
  }
  deriving Show

data ModifierData = ModifierData
  { modifierdata_next :: Integer {- struct ModifierData * -}
  , modifierdata_prev :: Integer {- struct ModifierData * -}
  , modifierdata_type :: Int32 {- int -}
  , modifierdata_mode :: Int32 {- int -}
  , modifierdata_name :: ByteString {- char[32] -}
  , modifierdata_error :: Integer {- char * -}
  }
  deriving Show

data SubsurfModifierData = SubsurfModifierData
  { subsurfmodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , subsurfmodifierdata_subdivType :: Int16 {- short -}
  , subsurfmodifierdata_levels :: Int16 {- short -}
  , subsurfmodifierdata_renderLevels :: Int16 {- short -}
  , subsurfmodifierdata_flags :: Int16 {- short -}
  , subsurfmodifierdata_emCache :: Integer {- void * * -}
  , subsurfmodifierdata_mCache :: Integer {- void * * -}
  }
  deriving Show

data LatticeModifierData = LatticeModifierData
  { latticemodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , latticemodifierdata_object :: Integer {- struct Object * -}
  , latticemodifierdata_name :: ByteString {- char[32] -}
  }
  deriving Show

data CurveModifierData = CurveModifierData
  { curvemodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , curvemodifierdata_object :: Integer {- struct Object * -}
  , curvemodifierdata_name :: ByteString {- char[32] -}
  , curvemodifierdata_defaxis :: Int16 {- short -}
  , curvemodifierdata_pad :: ByteString {- char[6] -}
  }
  deriving Show

data BuildModifierData = BuildModifierData
  { buildmodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , buildmodifierdata_start :: Float {- float -}
  , buildmodifierdata_length :: Float {- float -}
  , buildmodifierdata_randomize :: Int32 {- int -}
  , buildmodifierdata_seed :: Int32 {- int -}
  }
  deriving Show

data ArrayModifierData = ArrayModifierData
  { arraymodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , arraymodifierdata_start_cap :: Integer {- struct Object * -}
  , arraymodifierdata_end_cap :: Integer {- struct Object * -}
  , arraymodifierdata_curve_ob :: Integer {- struct Object * -}
  , arraymodifierdata_offset_ob :: Integer {- struct Object * -}
  , arraymodifierdata_offset :: [Float {- float -}] {- float[3] -}
  , arraymodifierdata_scale :: [Float {- float -}] {- float[3] -}
  , arraymodifierdata_length :: Float {- float -}
  , arraymodifierdata_merge_dist :: Float {- float -}
  , arraymodifierdata_fit_type :: Int32 {- int -}
  , arraymodifierdata_offset_type :: Int32 {- int -}
  , arraymodifierdata_flags :: Int32 {- int -}
  , arraymodifierdata_count :: Int32 {- int -}
  }
  deriving Show

data MirrorModifierData = MirrorModifierData
  { mirrormodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , mirrormodifierdata_axis :: Int16 {- short -}
  , mirrormodifierdata_flag :: Int16 {- short -}
  , mirrormodifierdata_tolerance :: Float {- float -}
  }
  deriving Show

data EdgeSplitModifierData = EdgeSplitModifierData
  { edgesplitmodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , edgesplitmodifierdata_split_angle :: Float {- float -}
  , edgesplitmodifierdata_flags :: Int32 {- int -}
  }
  deriving Show

data DisplaceModifierData = DisplaceModifierData
  { displacemodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , displacemodifierdata_texture :: Integer {- struct Tex * -}
  , displacemodifierdata_strength :: Float {- float -}
  , displacemodifierdata_direction :: Int32 {- int -}
  , displacemodifierdata_defgrp_name :: ByteString {- char[32] -}
  , displacemodifierdata_midlevel :: Float {- float -}
  , displacemodifierdata_texmapping :: Int32 {- int -}
  , displacemodifierdata_map_object :: Integer {- struct Object * -}
  , displacemodifierdata_uvlayer_name :: ByteString {- char[32] -}
  , displacemodifierdata_uvlayer_tmp :: Int32 {- int -}
  , displacemodifierdata_pad :: Int32 {- int -}
  }
  deriving Show

data UVProjectModifierData = UVProjectModifierData
  { uvprojectmodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , uvprojectmodifierdata_projectors :: [Integer {- struct Object * -}] {- struct Object *[10] -}
  , uvprojectmodifierdata_image :: Integer {- struct Image * -}
  , uvprojectmodifierdata_flags :: Int32 {- int -}
  , uvprojectmodifierdata_num_projectors :: Int32 {- int -}
  , uvprojectmodifierdata_aspectx :: Float {- float -}
  , uvprojectmodifierdata_aspecty :: Float {- float -}
  , uvprojectmodifierdata_uvlayer_name :: ByteString {- char[32] -}
  , uvprojectmodifierdata_uvlayer_tmp :: Int32 {- int -}
  , uvprojectmodifierdata_pad :: Int32 {- int -}
  }
  deriving Show

data DecimateModifierData = DecimateModifierData
  { decimatemodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , decimatemodifierdata_percent :: Float {- float -}
  , decimatemodifierdata_faceCount :: Int32 {- int -}
  }
  deriving Show

data SmoothModifierData = SmoothModifierData
  { smoothmodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , smoothmodifierdata_fac :: Float {- float -}
  , smoothmodifierdata_defgrp_name :: ByteString {- char[32] -}
  , smoothmodifierdata_flag :: Int16 {- short -}
  , smoothmodifierdata_repeat :: Int16 {- short -}
  }
  deriving Show

data CastModifierData = CastModifierData
  { castmodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , castmodifierdata_object :: Integer {- struct Object * -}
  , castmodifierdata_fac :: Float {- float -}
  , castmodifierdata_radius :: Float {- float -}
  , castmodifierdata_size :: Float {- float -}
  , castmodifierdata_defgrp_name :: ByteString {- char[32] -}
  , castmodifierdata_flag :: Int16 {- short -}
  , castmodifierdata_type :: Int16 {- short -}
  }
  deriving Show

data WaveModifierData = WaveModifierData
  { wavemodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , wavemodifierdata_objectcenter :: Integer {- struct Object * -}
  , wavemodifierdata_defgrp_name :: ByteString {- char[32] -}
  , wavemodifierdata_texture :: Integer {- struct Tex * -}
  , wavemodifierdata_map_object :: Integer {- struct Object * -}
  , wavemodifierdata_flag :: Int16 {- short -}
  , wavemodifierdata_pad :: Int16 {- short -}
  , wavemodifierdata_startx :: Float {- float -}
  , wavemodifierdata_starty :: Float {- float -}
  , wavemodifierdata_height :: Float {- float -}
  , wavemodifierdata_width :: Float {- float -}
  , wavemodifierdata_narrow :: Float {- float -}
  , wavemodifierdata_speed :: Float {- float -}
  , wavemodifierdata_damp :: Float {- float -}
  , wavemodifierdata_texmapping :: Int32 {- int -}
  , wavemodifierdata_uvlayer_tmp :: Int32 {- int -}
  , wavemodifierdata_uvlayer_name :: ByteString {- char[32] -}
  , wavemodifierdata_timeoffs :: Float {- float -}
  , wavemodifierdata_lifetime :: Float {- float -}
  }
  deriving Show

data ArmatureModifierData = ArmatureModifierData
  { armaturemodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , armaturemodifierdata_deformflag :: Int16 {- short -}
  , armaturemodifierdata_pad1 :: Int16 {- short -}
  , armaturemodifierdata_pad2 :: Int32 {- int -}
  , armaturemodifierdata_object :: Integer {- struct Object * -}
  , armaturemodifierdata_defgrp_name :: ByteString {- char[32] -}
  }
  deriving Show

data HookModifierData = HookModifierData
  { hookmodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , hookmodifierdata_object :: Integer {- struct Object * -}
  , hookmodifierdata_parentinv :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , hookmodifierdata_cent :: [Float {- float -}] {- float[3] -}
  , hookmodifierdata_falloff :: Float {- float -}
  , hookmodifierdata_indexar :: Integer {- int * -}
  , hookmodifierdata_totindex :: Int32 {- int -}
  , hookmodifierdata_force :: Float {- float -}
  , hookmodifierdata_name :: ByteString {- char[32] -}
  }
  deriving Show

data SoftbodyModifierData = SoftbodyModifierData
  { softbodymodifierdata_modifier :: ModifierData {- struct ModifierData -}
  }
  deriving Show

data BooleanModifierData = BooleanModifierData
  { booleanmodifierdata_modifier :: ModifierData {- struct ModifierData -}
  , booleanmodifierdata_object :: Integer {- struct Object * -}
  , booleanmodifierdata_operation :: Int32 {- int -}
  , booleanmodifierdata_pad :: Int32 {- int -}
  }
  deriving Show

data Lattice = Lattice
  { lattice_id :: ID {- struct ID -}
  , lattice_pntsu :: Int16 {- short -}
  , lattice_pntsv :: Int16 {- short -}
  , lattice_pntsw :: Int16 {- short -}
  , lattice_flag :: Int16 {- short -}
  , lattice_opntsu :: Int16 {- short -}
  , lattice_opntsv :: Int16 {- short -}
  , lattice_opntsw :: Int16 {- short -}
  , lattice_pad2 :: Int16 {- short -}
  , lattice_typeu :: Int8 {- char -}
  , lattice_typev :: Int8 {- char -}
  , lattice_typew :: Int8 {- char -}
  , lattice_type :: Int8 {- char -}
  , lattice_pad :: Int32 {- int -}
  , lattice_fu :: Float {- float -}
  , lattice_fv :: Float {- float -}
  , lattice_fw :: Float {- float -}
  , lattice_du :: Float {- float -}
  , lattice_dv :: Float {- float -}
  , lattice_dw :: Float {- float -}
  , lattice_def :: Integer {- struct BPoint * -}
  , lattice_ipo :: Integer {- struct Ipo * -}
  , lattice_key :: Integer {- struct Key * -}
  , lattice_dvert :: Integer {- struct MDeformVert * -}
  }
  deriving Show

data BDeformGroup = BDeformGroup
  { bdeformgroup_next :: Integer {- struct bDeformGroup * -}
  , bdeformgroup_prev :: Integer {- struct bDeformGroup * -}
  , bdeformgroup_name :: ByteString {- char[32] -}
  }
  deriving Show

data BoundBox = BoundBox
  { boundbox_vec :: [[Float {- float -}] {- float[8] -}] {- float [8][3] -}
  , boundbox_flag :: Int32 {- int -}
  , boundbox_pad :: Int32 {- int -}
  }
  deriving Show

data OcInfo = OcInfo
  { ocinfo_dvec :: [Float {- float -}] {- float[3] -}
  , ocinfo_size :: [Float {- float -}] {- float[3] -}
  }
  deriving Show

data LBuf = LBuf
  { lbuf_tot :: Int16 {- short -}
  , lbuf_max :: Int16 {- short -}
  , lbuf_pad :: Int32 {- int -}
  , lbuf_ob :: Integer {- struct Object * * -}
  }
  deriving Show

data Object = Object
  { object_id :: ID {- struct ID -}
  , object_type :: Int16 {- short -}
  , object_partype :: Int16 {- short -}
  , object_par1 :: Int32 {- int -}
  , object_par2 :: Int32 {- int -}
  , object_par3 :: Int32 {- int -}
  , object_parsubstr :: ByteString {- char[32] -}
  , object_parent :: Integer {- struct Object * -}
  , object_track :: Integer {- struct Object * -}
  , object_proxy :: Integer {- struct Object * -}
  , object_proxy_group :: Integer {- struct Object * -}
  , object_proxy_from :: Integer {- struct Object * -}
  , object_ipo :: Integer {- struct Ipo * -}
  , object_path :: Integer {- struct Path /* undefined */ * -}
  , object_bb :: Integer {- struct BoundBox * -}
  , object_action :: Integer {- struct bAction * -}
  , object_pose :: Integer {- struct bPose * -}
  , object_data :: Integer {- void * * -}
  , object_constraintChannels :: ListBase {- struct ListBase -}
  , object_effect :: ListBase {- struct ListBase -}
  , object_network :: ListBase {- struct ListBase -}
  , object_disp :: ListBase {- struct ListBase -}
  , object_defbase :: ListBase {- struct ListBase -}
  , object_modifiers :: ListBase {- struct ListBase -}
  , object_mat :: Integer {- struct Material * * -}
  , object_loc :: [Float {- float -}] {- float[3] -}
  , object_dloc :: [Float {- float -}] {- float[3] -}
  , object_orig :: [Float {- float -}] {- float[3] -}
  , object_size :: [Float {- float -}] {- float[3] -}
  , object_dsize :: [Float {- float -}] {- float[3] -}
  , object_rot :: [Float {- float -}] {- float[3] -}
  , object_drot :: [Float {- float -}] {- float[3] -}
  , object_quat :: [Float {- float -}] {- float[4] -}
  , object_dquat :: [Float {- float -}] {- float[4] -}
  , object_obmat :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , object_parentinv :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , object_imat :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , object_lay :: Int32 {- int -}
  , object_flag :: Int16 {- short -}
  , object_colbits :: Int16 {- short -}
  , object_transflag :: Int16 {- short -}
  , object_ipoflag :: Int16 {- short -}
  , object_trackflag :: Int16 {- short -}
  , object_upflag :: Int16 {- short -}
  , object_nlaflag :: Int16 {- short -}
  , object_protectflag :: Int16 {- short -}
  , object_ipowin :: Int16 {- short -}
  , object_scaflag :: Int16 {- short -}
  , object_scavisflag :: Int16 {- short -}
  , object_boundtype :: Int16 {- short -}
  , object_dupon :: Int32 {- int -}
  , object_dupoff :: Int32 {- int -}
  , object_dupsta :: Int32 {- int -}
  , object_dupend :: Int32 {- int -}
  , object_sf :: Float {- float -}
  , object_ctime :: Float {- float -}
  , object_mass :: Float {- float -}
  , object_damping :: Float {- float -}
  , object_inertia :: Float {- float -}
  , object_formfactor :: Float {- float -}
  , object_rdamping :: Float {- float -}
  , object_sizefac :: Float {- float -}
  , object_dt :: Int8 {- char -}
  , object_dtx :: Int8 {- char -}
  , object_totcol :: Int8 {- char -}
  , object_actcol :: Int8 {- char -}
  , object_empty_drawtype :: Int8 {- char -}
  , object_pad1 :: ByteString {- char[7] -}
  , object_empty_drawsize :: Float {- float -}
  , object_scriptlink :: ScriptLink {- struct ScriptLink -}
  , object_prop :: ListBase {- struct ListBase -}
  , object_sensors :: ListBase {- struct ListBase -}
  , object_controllers :: ListBase {- struct ListBase -}
  , object_actuators :: ListBase {- struct ListBase -}
  , object_sumohandle :: Integer {- void * * -}
  , object_bbsize :: [Float {- float -}] {- float[3] -}
  , object_index :: Int16 {- short -}
  , object_actdef :: Int16 {- short -}
  , object_col :: [Float {- float -}] {- float[4] -}
  , object_gameflag :: Int32 {- int -}
  , object_gameflag2 :: Int32 {- int -}
  , object_softflag :: Int16 {- short -}
  , object_recalc :: Int16 {- short -}
  , object_anisotropicFriction :: [Float {- float -}] {- float[3] -}
  , object_constraints :: ListBase {- struct ListBase -}
  , object_nlastrips :: ListBase {- struct ListBase -}
  , object_hooks :: ListBase {- struct ListBase -}
  , object_pd :: Integer {- struct PartDeflect * -}
  , object_soft :: Integer {- struct SoftBody * -}
  , object_dup_group :: Integer {- struct Group * -}
  , object_fluidsimFlag :: Int16 {- short -}
  , object_restrictflag :: Int16 {- short -}
  , object_shapenr :: Int16 {- short -}
  , object_shapeflag :: Int16 {- short -}
  , object_smoothresh :: Float {- float -}
  , object_recalco :: Int16 {- short -}
  , object_pad4 :: Int16 {- short -}
  , object_fluidsimSettings :: Integer {- struct FluidsimSettings * -}
  , object_derivedDeform :: Integer {- struct DerivedMesh /* undefined */ * -}
  , object_derivedFinal :: Integer {- struct DerivedMesh /* undefined */ * -}
  , object_lastDataMask :: Int32 {- int -}
  , object_pad :: Int32 {- int -}
  , object_vnode :: Integer {- void * * -}
  }
  deriving Show

data ObHook = ObHook
  { obhook_next :: Integer {- struct ObHook * -}
  , obhook_prev :: Integer {- struct ObHook * -}
  , obhook_parent :: Integer {- struct Object * -}
  , obhook_parentinv :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , obhook_mat :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , obhook_cent :: [Float {- float -}] {- float[3] -}
  , obhook_falloff :: Float {- float -}
  , obhook_name :: ByteString {- char[32] -}
  , obhook_indexar :: Integer {- int * -}
  , obhook_totindex :: Int32 {- int -}
  , obhook_curindex :: Int32 {- int -}
  , obhook_type :: Int16 {- short -}
  , obhook_active :: Int16 {- short -}
  , obhook_force :: Float {- float -}
  }
  deriving Show

data PartDeflect = PartDeflect
  { partdeflect_deflect :: Int16 {- short -}
  , partdeflect_forcefield :: Int16 {- short -}
  , partdeflect_flag :: Int16 {- short -}
  , partdeflect_pad :: Int16 {- short -}
  , partdeflect_pdef_damp :: Float {- float -}
  , partdeflect_pdef_rdamp :: Float {- float -}
  , partdeflect_pdef_perm :: Float {- float -}
  , partdeflect_f_strength :: Float {- float -}
  , partdeflect_f_power :: Float {- float -}
  , partdeflect_maxdist :: Float {- float -}
  , partdeflect_pdef_sbdamp :: Float {- float -}
  , partdeflect_pdef_sbift :: Float {- float -}
  , partdeflect_pdef_sboft :: Float {- float -}
  }
  deriving Show

data SBVertex = SBVertex
  { sbvertex_vec :: [Float {- float -}] {- float[4] -}
  }
  deriving Show

data SoftBody = SoftBody
  { softbody_totpoint :: Int32 {- int -}
  , softbody_totspring :: Int32 {- int -}
  , softbody_bpoint :: Integer {- struct BodyPoint /* undefined */ * -}
  , softbody_bspring :: Integer {- struct BodySpring /* undefined */ * -}
  , softbody_ctime :: Float {- float -}
  , softbody_nodemass :: Float {- float -}
  , softbody_grav :: Float {- float -}
  , softbody_mediafrict :: Float {- float -}
  , softbody_rklimit :: Float {- float -}
  , softbody_physics_speed :: Float {- float -}
  , softbody_goalspring :: Float {- float -}
  , softbody_goalfrict :: Float {- float -}
  , softbody_mingoal :: Float {- float -}
  , softbody_maxgoal :: Float {- float -}
  , softbody_defgoal :: Float {- float -}
  , softbody_vertgroup :: Int16 {- short -}
  , softbody_fuzzyness :: Int16 {- short -}
  , softbody_inspring :: Float {- float -}
  , softbody_infrict :: Float {- float -}
  , softbody_sfra :: Int32 {- int -}
  , softbody_efra :: Int32 {- int -}
  , softbody_interval :: Int32 {- int -}
  , softbody_local :: Int16 {- short -}
  , softbody_solverflags :: Int16 {- short -}
  , softbody_keys :: Integer {- struct SBVertex * * -}
  , softbody_totpointkey :: Int32 {- int -}
  , softbody_totkey :: Int32 {- int -}
  , softbody_secondspring :: Float {- float -}
  , softbody_colball :: Float {- float -}
  , softbody_balldamp :: Float {- float -}
  , softbody_ballstiff :: Float {- float -}
  , softbody_sbc_mode :: Int16 {- short -}
  , softbody_aeroedge :: Int16 {- short -}
  , softbody_minloops :: Int16 {- short -}
  , softbody_maxloops :: Int16 {- short -}
  , softbody_choke :: Int16 {- short -}
  , softbody_pad3 :: Int16 {- short -}
  , softbody_pad4 :: Int16 {- short -}
  , softbody_pad5 :: Int16 {- short -}
  , softbody_scratch :: Integer {- struct SBScratch /* undefined */ * -}
  }
  deriving Show

data FluidsimSettings = FluidsimSettings
  { fluidsimsettings_type :: Int16 {- short -}
  , fluidsimsettings_show_advancedoptions :: Int16 {- short -}
  , fluidsimsettings_resolutionxyz :: Int16 {- short -}
  , fluidsimsettings_previewresxyz :: Int16 {- short -}
  , fluidsimsettings_realsize :: Float {- float -}
  , fluidsimsettings_guiDisplayMode :: Int16 {- short -}
  , fluidsimsettings_renderDisplayMode :: Int16 {- short -}
  , fluidsimsettings_viscosityValue :: Float {- float -}
  , fluidsimsettings_viscosityMode :: Int16 {- short -}
  , fluidsimsettings_viscosityExponent :: Int16 {- short -}
  , fluidsimsettings_gravx :: Float {- float -}
  , fluidsimsettings_gravy :: Float {- float -}
  , fluidsimsettings_gravz :: Float {- float -}
  , fluidsimsettings_animStart :: Float {- float -}
  , fluidsimsettings_animEnd :: Float {- float -}
  , fluidsimsettings_gstar :: Float {- float -}
  , fluidsimsettings_maxRefine :: Int32 {- int -}
  , fluidsimsettings_iniVelx :: Float {- float -}
  , fluidsimsettings_iniVely :: Float {- float -}
  , fluidsimsettings_iniVelz :: Float {- float -}
  , fluidsimsettings_orgMesh :: Integer {- struct Mesh * -}
  , fluidsimsettings_meshSurface :: Integer {- struct Mesh * -}
  , fluidsimsettings_meshBB :: Integer {- struct Mesh * -}
  , fluidsimsettings_surfdataPath :: ByteString {- char[240] -}
  , fluidsimsettings_bbStart :: [Float {- float -}] {- float[3] -}
  , fluidsimsettings_bbSize :: [Float {- float -}] {- float[3] -}
  , fluidsimsettings_ipo :: Integer {- struct Ipo * -}
  , fluidsimsettings_typeFlags :: Int16 {- short -}
  , fluidsimsettings_domainNovecgen :: Int8 {- char -}
  , fluidsimsettings_volumeInitType :: Int8 {- char -}
  , fluidsimsettings_partSlipValue :: Float {- float -}
  , fluidsimsettings_generateTracers :: Int32 {- int -}
  , fluidsimsettings_generateParticles :: Float {- float -}
  , fluidsimsettings_surfaceSmoothing :: Float {- float -}
  , fluidsimsettings_surfaceSubdivs :: Int32 {- int -}
  , fluidsimsettings_unusedDNADummy :: Int32 {- int -}
  , fluidsimsettings_particleInfSize :: Float {- float -}
  , fluidsimsettings_particleInfAlpha :: Float {- float -}
  , fluidsimsettings_farFieldSize :: Float {- float -}
  , fluidsimsettings_meshSurfNormals :: Integer {- struct MVert * -}
  }
  deriving Show

data World = World
  { world_id :: ID {- struct ID -}
  , world_colormodel :: Int16 {- short -}
  , world_totex :: Int16 {- short -}
  , world_texact :: Int16 {- short -}
  , world_mistype :: Int16 {- short -}
  , world_horr :: Float {- float -}
  , world_horg :: Float {- float -}
  , world_horb :: Float {- float -}
  , world_hork :: Float {- float -}
  , world_zenr :: Float {- float -}
  , world_zeng :: Float {- float -}
  , world_zenb :: Float {- float -}
  , world_zenk :: Float {- float -}
  , world_ambr :: Float {- float -}
  , world_ambg :: Float {- float -}
  , world_ambb :: Float {- float -}
  , world_ambk :: Float {- float -}
  , world_fastcol :: Int32 {- int -}
  , world_exposure :: Float {- float -}
  , world_exp :: Float {- float -}
  , world_range :: Float {- float -}
  , world_linfac :: Float {- float -}
  , world_logfac :: Float {- float -}
  , world_gravity :: Float {- float -}
  , world_activityBoxRadius :: Float {- float -}
  , world_skytype :: Int16 {- short -}
  , world_mode :: Int16 {- short -}
  , world_physicsEngine :: Int32 {- int -}
  , world_misi :: Float {- float -}
  , world_miststa :: Float {- float -}
  , world_mistdist :: Float {- float -}
  , world_misthi :: Float {- float -}
  , world_starr :: Float {- float -}
  , world_starg :: Float {- float -}
  , world_starb :: Float {- float -}
  , world_stark :: Float {- float -}
  , world_starsize :: Float {- float -}
  , world_starmindist :: Float {- float -}
  , world_stardist :: Float {- float -}
  , world_starcolnoise :: Float {- float -}
  , world_dofsta :: Int16 {- short -}
  , world_dofend :: Int16 {- short -}
  , world_dofmin :: Int16 {- short -}
  , world_dofmax :: Int16 {- short -}
  , world_aodist :: Float {- float -}
  , world_aodistfac :: Float {- float -}
  , world_aoenergy :: Float {- float -}
  , world_aobias :: Float {- float -}
  , world_aomode :: Int16 {- short -}
  , world_aosamp :: Int16 {- short -}
  , world_aomix :: Int16 {- short -}
  , world_aocolor :: Int16 {- short -}
  , world_aosphere :: Integer {- float * -}
  , world_aotables :: Integer {- float * -}
  , world_ipo :: Integer {- struct Ipo * -}
  , world_mtex :: [Integer {- struct MTex * -}] {- struct MTex *[10] -}
  , world_scriptlink :: ScriptLink {- struct ScriptLink -}
  }
  deriving Show

data Radio = Radio
  { radio_hemires :: Int16 {- short -}
  , radio_maxiter :: Int16 {- short -}
  , radio_drawtype :: Int16 {- short -}
  , radio_flag :: Int16 {- short -}
  , radio_subshootp :: Int16 {- short -}
  , radio_subshoote :: Int16 {- short -}
  , radio_nodelim :: Int16 {- short -}
  , radio_maxsublamp :: Int16 {- short -}
  , radio_pama :: Int16 {- short -}
  , radio_pami :: Int16 {- short -}
  , radio_elma :: Int16 {- short -}
  , radio_elmi :: Int16 {- short -}
  , radio_maxnode :: Int32 {- int -}
  , radio_convergence :: Float {- float -}
  , radio_radfac :: Float {- float -}
  , radio_gamma :: Float {- float -}
  }
  deriving Show

data Base = Base
  { base_next :: Integer {- struct Base * -}
  , base_prev :: Integer {- struct Base * -}
  , base_lay :: Int32 {- int -}
  , base_selcol :: Int32 {- int -}
  , base_flag :: Int32 {- int -}
  , base_sx :: Int16 {- short -}
  , base_sy :: Int16 {- short -}
  , base_object :: Integer {- struct Object * -}
  }
  deriving Show

data AviCodecData = AviCodecData
  { avicodecdata_lpFormat :: Integer {- void * * -}
  , avicodecdata_lpParms :: Integer {- void * * -}
  , avicodecdata_cbFormat :: Int32 {- int -}
  , avicodecdata_cbParms :: Int32 {- int -}
  , avicodecdata_fccType :: Int32 {- int -}
  , avicodecdata_fccHandler :: Int32 {- int -}
  , avicodecdata_dwKeyFrameEvery :: Int32 {- int -}
  , avicodecdata_dwQuality :: Int32 {- int -}
  , avicodecdata_dwBytesPerSecond :: Int32 {- int -}
  , avicodecdata_dwFlags :: Int32 {- int -}
  , avicodecdata_dwInterleaveEvery :: Int32 {- int -}
  , avicodecdata_pad :: Int32 {- int -}
  , avicodecdata_avicodecname :: ByteString {- char[128] -}
  }
  deriving Show

data QuicktimeCodecData = QuicktimeCodecData
  { quicktimecodecdata_cdParms :: Integer {- void * * -}
  , quicktimecodecdata_pad :: Integer {- void * * -}
  , quicktimecodecdata_cdSize :: Int32 {- int -}
  , quicktimecodecdata_pad2 :: Int32 {- int -}
  , quicktimecodecdata_qtcodecname :: ByteString {- char[128] -}
  }
  deriving Show

data FFMpegCodecData = FFMpegCodecData
  { ffmpegcodecdata_type :: Int32 {- int -}
  , ffmpegcodecdata_codec :: Int32 {- int -}
  , ffmpegcodecdata_audio_codec :: Int32 {- int -}
  , ffmpegcodecdata_video_bitrate :: Int32 {- int -}
  , ffmpegcodecdata_audio_bitrate :: Int32 {- int -}
  , ffmpegcodecdata_gop_size :: Int32 {- int -}
  , ffmpegcodecdata_flags :: Int32 {- int -}
  , ffmpegcodecdata_rc_min_rate :: Int32 {- int -}
  , ffmpegcodecdata_rc_max_rate :: Int32 {- int -}
  , ffmpegcodecdata_rc_buffer_size :: Int32 {- int -}
  , ffmpegcodecdata_mux_packet_size :: Int32 {- int -}
  , ffmpegcodecdata_mux_rate :: Int32 {- int -}
  }
  deriving Show

data AudioData = AudioData
  { audiodata_mixrate :: Int32 {- int -}
  , audiodata_main :: Float {- float -}
  , audiodata_flag :: Int16 {- short -}
  , audiodata_pad :: [Int16 {- short -}] {- short[3] -}
  }
  deriving Show

data SceneRenderLayer = SceneRenderLayer
  { scenerenderlayer_next :: Integer {- struct SceneRenderLayer * -}
  , scenerenderlayer_prev :: Integer {- struct SceneRenderLayer * -}
  , scenerenderlayer_name :: ByteString {- char[32] -}
  , scenerenderlayer_mat_override :: Integer {- struct Material * -}
  , scenerenderlayer_light_override :: Integer {- struct Group * -}
  , scenerenderlayer_lay :: Int32 {- int -}
  , scenerenderlayer_layflag :: Int32 {- int -}
  , scenerenderlayer_passflag :: Int32 {- int -}
  , scenerenderlayer_pass_xor :: Int32 {- int -}
  }
  deriving Show

data RenderData = RenderData
  { renderdata_avicodecdata :: Integer {- struct AviCodecData * -}
  , renderdata_qtcodecdata :: Integer {- struct QuicktimeCodecData * -}
  , renderdata_ffcodecdata :: FFMpegCodecData {- struct FFMpegCodecData -}
  , renderdata_cfra :: Int32 {- int -}
  , renderdata_sfra :: Int32 {- int -}
  , renderdata_efra :: Int32 {- int -}
  , renderdata_psfra :: Int32 {- int -}
  , renderdata_pefra :: Int32 {- int -}
  , renderdata_images :: Int32 {- int -}
  , renderdata_framapto :: Int32 {- int -}
  , renderdata_flag :: Int16 {- short -}
  , renderdata_threads :: Int16 {- short -}
  , renderdata_ctime :: Float {- float -}
  , renderdata_framelen :: Float {- float -}
  , renderdata_blurfac :: Float {- float -}
  , renderdata_edgeR :: Float {- float -}
  , renderdata_edgeG :: Float {- float -}
  , renderdata_edgeB :: Float {- float -}
  , renderdata_fullscreen :: Int16 {- short -}
  , renderdata_xplay :: Int16 {- short -}
  , renderdata_yplay :: Int16 {- short -}
  , renderdata_freqplay :: Int16 {- short -}
  , renderdata_depth :: Int16 {- short -}
  , renderdata_attrib :: Int16 {- short -}
  , renderdata_rt1 :: Int16 {- short -}
  , renderdata_rt2 :: Int16 {- short -}
  , renderdata_stereomode :: Int16 {- short -}
  , renderdata_dimensionspreset :: Int16 {- short -}
  , renderdata_filtertype :: Int16 {- short -}
  , renderdata_size :: Int16 {- short -}
  , renderdata_maximsize :: Int16 {- short -}
  , renderdata_xsch :: Int16 {- short -}
  , renderdata_ysch :: Int16 {- short -}
  , renderdata_xasp :: Int16 {- short -}
  , renderdata_yasp :: Int16 {- short -}
  , renderdata_xparts :: Int16 {- short -}
  , renderdata_yparts :: Int16 {- short -}
  , renderdata_winpos :: Int16 {- short -}
  , renderdata_planes :: Int16 {- short -}
  , renderdata_imtype :: Int16 {- short -}
  , renderdata_subimtype :: Int16 {- short -}
  , renderdata_bufflag :: Int16 {- short -}
  , renderdata_quality :: Int16 {- short -}
  , renderdata_scemode :: Int16 {- short -}
  , renderdata_mode :: Int32 {- int -}
  , renderdata_renderer :: Int16 {- short -}
  , renderdata_ocres :: Int16 {- short -}
  , renderdata_rpad :: [Int16 {- short -}] {- short[2] -}
  , renderdata_alphamode :: Int16 {- short -}
  , renderdata_osa :: Int16 {- short -}
  , renderdata_frs_sec :: Int16 {- short -}
  , renderdata_edgeint :: Int16 {- short -}
  , renderdata_safety :: Rctf {- struct rctf -}
  , renderdata_border :: Rctf {- struct rctf -}
  , renderdata_disprect :: Rcti {- struct rcti -}
  , renderdata_layers :: ListBase {- struct ListBase -}
  , renderdata_actlay :: Int16 {- short -}
  , renderdata_pad :: Int16 {- short -}
  , renderdata_pad2 :: Int32 {- int -}
  , renderdata_gauss :: Float {- float -}
  , renderdata_postmul :: Float {- float -}
  , renderdata_postgamma :: Float {- float -}
  , renderdata_posthue :: Float {- float -}
  , renderdata_postsat :: Float {- float -}
  , renderdata_dither_intensity :: Float {- float -}
  , renderdata_bake_osa :: Int16 {- short -}
  , renderdata_bake_filter :: Int16 {- short -}
  , renderdata_bake_mode :: Int16 {- short -}
  , renderdata_bake_flag :: Int16 {- short -}
  , renderdata_GIquality :: Int16 {- short -}
  , renderdata_GIcache :: Int16 {- short -}
  , renderdata_GImethod :: Int16 {- short -}
  , renderdata_GIphotons :: Int16 {- short -}
  , renderdata_GIdirect :: Int16 {- short -}
  , renderdata_YF_AA :: Int16 {- short -}
  , renderdata_YFexportxml :: Int16 {- short -}
  , renderdata_YF_nobump :: Int16 {- short -}
  , renderdata_YF_clamprgb :: Int16 {- short -}
  , renderdata_yfpad1 :: Int16 {- short -}
  , renderdata_GIdepth :: Int32 {- int -}
  , renderdata_GIcausdepth :: Int32 {- int -}
  , renderdata_GIpixelspersample :: Int32 {- int -}
  , renderdata_GIphotoncount :: Int32 {- int -}
  , renderdata_GImixphotons :: Int32 {- int -}
  , renderdata_GIphotonradius :: Float {- float -}
  , renderdata_YF_numprocs :: Int32 {- int -}
  , renderdata_YF_raydepth :: Int32 {- int -}
  , renderdata_YF_AApasses :: Int32 {- int -}
  , renderdata_YF_AAsamples :: Int32 {- int -}
  , renderdata_GIshadowquality :: Float {- float -}
  , renderdata_GIrefinement :: Float {- float -}
  , renderdata_GIpower :: Float {- float -}
  , renderdata_GIindirpower :: Float {- float -}
  , renderdata_YF_gamma :: Float {- float -}
  , renderdata_YF_exposure :: Float {- float -}
  , renderdata_YF_raybias :: Float {- float -}
  , renderdata_YF_AApixelsize :: Float {- float -}
  , renderdata_YF_AAthreshold :: Float {- float -}
  , renderdata_backbuf :: ByteString {- char[160] -}
  , renderdata_pic :: ByteString {- char[160] -}
  , renderdata_ftype :: ByteString {- char[160] -}
  }
  deriving Show

data GameFraming = GameFraming
  { gameframing_col :: [Float {- float -}] {- float[3] -}
  , gameframing_type :: Int8 {- char -}
  , gameframing_pad1 :: Int8 {- char -}
  , gameframing_pad2 :: Int8 {- char -}
  , gameframing_pad3 :: Int8 {- char -}
  }
  deriving Show

data TimeMarker = TimeMarker
  { timemarker_next :: Integer {- struct TimeMarker * -}
  , timemarker_prev :: Integer {- struct TimeMarker * -}
  , timemarker_frame :: Int32 {- int -}
  , timemarker_name :: ByteString {- char[64] -}
  , timemarker_flag :: Int32 {- int -}
  }
  deriving Show

data ImagePaintSettings = ImagePaintSettings
  { imagepaintsettings_brush :: Integer {- struct Brush * -}
  , imagepaintsettings_flag :: Int16 {- short -}
  , imagepaintsettings_tool :: Int16 {- short -}
  , imagepaintsettings_pad3 :: Int32 {- int -}
  }
  deriving Show

data ToolSettings = ToolSettings
  { toolsettings_cornertype :: Int16 {- short -}
  , toolsettings_editbutflag :: Int16 {- short -}
  , toolsettings_jointrilimit :: Float {- float -}
  , toolsettings_degr :: Float {- float -}
  , toolsettings_step :: Int16 {- short -}
  , toolsettings_turn :: Int16 {- short -}
  , toolsettings_extr_offs :: Float {- float -}
  , toolsettings_doublimit :: Float {- float -}
  , toolsettings_segments :: Int16 {- short -}
  , toolsettings_rings :: Int16 {- short -}
  , toolsettings_vertices :: Int16 {- short -}
  , toolsettings_unwrapper :: Int16 {- short -}
  , toolsettings_uvcalc_radius :: Float {- float -}
  , toolsettings_uvcalc_cubesize :: Float {- float -}
  , toolsettings_uvcalc_mapdir :: Int16 {- short -}
  , toolsettings_uvcalc_mapalign :: Int16 {- short -}
  , toolsettings_uvcalc_flag :: Int16 {- short -}
  , toolsettings_pad2 :: Int16 {- short -}
  , toolsettings_imapaint :: ImagePaintSettings {- struct ImagePaintSettings -}
  , toolsettings_select_thresh :: Float {- float -}
  , toolsettings_clean_thresh :: Float {- float -}
  , toolsettings_retopo_mode :: Int8 {- char -}
  , toolsettings_retopo_paint_tool :: Int8 {- char -}
  , toolsettings_line_div :: Int8 {- char -}
  , toolsettings_ellipse_div :: Int8 {- char -}
  , toolsettings_retopo_hotspot :: Int8 {- char -}
  , toolsettings_multires_subdiv_type :: Int8 {- char -}
  , toolsettings_pad4 :: ByteString {- char[2] -}
  }
  deriving Show

data BrushData = BrushData
  { brushdata_size :: Int16 {- short -}
  , brushdata_strength :: Int8 {- char -}
  , brushdata_dir :: Int8 {- char -}
  , brushdata_airbrush :: Int8 {- char -}
  , brushdata_view :: Int8 {- char -}
  , brushdata_pad :: ByteString {- char[2] -}
  }
  deriving Show

data SculptData = SculptData
  { sculptdata_session :: Integer {- struct SculptSession /* undefined */ * -}
  , sculptdata_mtex :: [Integer {- struct MTex * -}] {- struct MTex *[10] -}
  , sculptdata_drawbrush :: BrushData {- struct BrushData -}
  , sculptdata_smoothbrush :: BrushData {- struct BrushData -}
  , sculptdata_pinchbrush :: BrushData {- struct BrushData -}
  , sculptdata_inflatebrush :: BrushData {- struct BrushData -}
  , sculptdata_grabbrush :: BrushData {- struct BrushData -}
  , sculptdata_layerbrush :: BrushData {- struct BrushData -}
  , sculptdata_flattenbrush :: BrushData {- struct BrushData -}
  , sculptdata_brush_type :: Int16 {- short -}
  , sculptdata_texact :: Int16 {- short -}
  , sculptdata_texnr :: Int16 {- short -}
  , sculptdata_spacing :: Int16 {- short -}
  , sculptdata_texrept :: Int8 {- char -}
  , sculptdata_texfade :: Int8 {- char -}
  , sculptdata_texsep :: Int8 {- char -}
  , sculptdata_averaging :: Int8 {- char -}
  , sculptdata_draw_flag :: Int8 {- char -}
  , sculptdata_tablet_size :: Int8 {- char -}
  , sculptdata_tablet_strength :: Int8 {- char -}
  , sculptdata_symm :: Int8 {- char -}
  }
  deriving Show

data Scene = Scene
  { scene_id :: ID {- struct ID -}
  , scene_camera :: Integer {- struct Object * -}
  , scene_world :: Integer {- struct World * -}
  , scene_set :: Integer {- struct Scene * -}
  , scene_ima :: Integer {- struct Image * -}
  , scene_base :: ListBase {- struct ListBase -}
  , scene_basact :: Integer {- struct Base * -}
  , scene_cursor :: [Float {- float -}] {- float[3] -}
  , scene_twcent :: [Float {- float -}] {- float[3] -}
  , scene_twmin :: [Float {- float -}] {- float[3] -}
  , scene_twmax :: [Float {- float -}] {- float[3] -}
  , scene_lay :: Int32 {- int -}
  , scene_editbutsize :: Float {- float -}
  , scene_selectmode :: Int16 {- short -}
  , scene_proportional :: Int16 {- short -}
  , scene_prop_mode :: Int16 {- short -}
  , scene_use_nodes :: Int16 {- short -}
  , scene_nodetree :: Integer {- struct bNodeTree * -}
  , scene_ed :: Integer {- void * * -}
  , scene_radio :: Integer {- struct Radio * -}
  , scene_sumohandle :: Integer {- void * * -}
  , scene_framing :: GameFraming {- struct GameFraming -}
  , scene_toolsettings :: Integer {- struct ToolSettings * -}
  , scene_r :: RenderData {- struct RenderData -}
  , scene_audio :: AudioData {- struct AudioData -}
  , scene_scriptlink :: ScriptLink {- struct ScriptLink -}
  , scene_markers :: ListBase {- struct ListBase -}
  , scene_jumpframe :: Int16 {- short -}
  , scene_pad1 :: Int16 {- short -}
  , scene_pad2 :: Int16 {- short -}
  , scene_pad3 :: Int16 {- short -}
  , scene_theDag :: Integer {- struct DagForest /* undefined */ * -}
  , scene_dagisvalid :: Int16 {- short -}
  , scene_dagflags :: Int16 {- short -}
  , scene_pad4 :: Int16 {- short -}
  , scene_recalc :: Int16 {- short -}
  , scene_sculptdata :: SculptData {- struct SculptData -}
  }
  deriving Show

data BGpic = BGpic
  { bgpic_ima :: Integer {- struct Image * -}
  , bgpic_iuser :: ImageUser {- struct ImageUser -}
  , bgpic_xof :: Float {- float -}
  , bgpic_yof :: Float {- float -}
  , bgpic_size :: Float {- float -}
  , bgpic_zoom :: Float {- float -}
  , bgpic_blend :: Float {- float -}
  , bgpic_xim :: Int16 {- short -}
  , bgpic_yim :: Int16 {- short -}
  }
  deriving Show

data View3D = View3D
  { view3d_next :: Integer {- struct SpaceLink * -}
  , view3d_prev :: Integer {- struct SpaceLink * -}
  , view3d_spacetype :: Int32 {- int -}
  , view3d_blockscale :: Float {- float -}
  , view3d_area :: Integer {- struct ScrArea * -}
  , view3d_blockhandler :: [Int16 {- short -}] {- short[8] -}
  , view3d_viewmat :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , view3d_viewinv :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , view3d_persmat :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , view3d_persinv :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , view3d_winmat1 :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , view3d_viewmat1 :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , view3d_viewquat :: [Float {- float -}] {- float[4] -}
  , view3d_dist :: Float {- float -}
  , view3d_zfac :: Float {- float -}
  , view3d_pad0 :: Float {- float -}
  , view3d_persp :: Int16 {- short -}
  , view3d_view :: Int16 {- short -}
  , view3d_camera :: Integer {- struct Object * -}
  , view3d_ob_centre :: Integer {- struct Object * -}
  , view3d_bgpic :: Integer {- struct BGpic * -}
  , view3d_localvd :: Integer {- struct View3D * -}
  , view3d_ri :: Integer {- struct RenderInfo /* undefined */ * -}
  , view3d_retopo_view_data :: Integer {- struct RetopoViewData /* undefined */ * -}
  , view3d_depths :: Integer {- struct ViewDepths /* undefined */ * -}
  , view3d_ob_centre_bone :: ByteString {- char[32] -}
  , view3d_drawtype :: Int16 {- short -}
  , view3d_localview :: Int16 {- short -}
  , view3d_lay :: Int32 {- int -}
  , view3d_layact :: Int32 {- int -}
  , view3d_scenelock :: Int16 {- short -}
  , view3d_around :: Int16 {- short -}
  , view3d_camzoom :: Int16 {- short -}
  , view3d_pivot_last :: Int8 {- char -}
  , view3d_pad1 :: Int8 {- char -}
  , view3d_lens :: Float {- float -}
  , view3d_grid :: Float {- float -}
  , view3d_gridview :: Float {- float -}
  , view3d_pixsize :: Float {- float -}
  , view3d_near :: Float {- float -}
  , view3d_far :: Float {- float -}
  , view3d_camdx :: Float {- float -}
  , view3d_camdy :: Float {- float -}
  , view3d_ofs :: [Float {- float -}] {- float[3] -}
  , view3d_cursor :: [Float {- float -}] {- float[3] -}
  , view3d_gridlines :: Int16 {- short -}
  , view3d_viewbut :: Int16 {- short -}
  , view3d_gridflag :: Int16 {- short -}
  , view3d_modeselect :: Int16 {- short -}
  , view3d_menunr :: Int16 {- short -}
  , view3d_texnr :: Int16 {- short -}
  , view3d_twtype :: Int16 {- short -}
  , view3d_twmode :: Int16 {- short -}
  , view3d_twflag :: Int16 {- short -}
  , view3d_twdrawflag :: Int16 {- short -}
  , view3d_twmat :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , view3d_clip :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , view3d_clipbb :: Integer {- struct BoundBox * -}
  , view3d_afterdraw :: ListBase {- struct ListBase -}
  , view3d_zbuf :: Int16 {- short -}
  , view3d_transp :: Int16 {- short -}
  , view3d_xray :: Int16 {- short -}
  , view3d_flag :: Int16 {- short -}
  , view3d_flag2 :: Int16 {- short -}
  , view3d_gridsubdiv :: Int16 {- short -}
  , view3d_snap_target :: Int16 {- short -}
  , view3d_pad2 :: Int16 {- short -}
  , view3d_properties_storage :: Integer {- void * * -}
  }
  deriving Show

data View2D = View2D
  { view2d_tot :: Rctf {- struct rctf -}
  , view2d_cur :: Rctf {- struct rctf -}
  , view2d_vert :: Rcti {- struct rcti -}
  , view2d_hor :: Rcti {- struct rcti -}
  , view2d_mask :: Rcti {- struct rcti -}
  , view2d_min :: [Float {- float -}] {- float[2] -}
  , view2d_max :: [Float {- float -}] {- float[2] -}
  , view2d_minzoom :: Float {- float -}
  , view2d_maxzoom :: Float {- float -}
  , view2d_scroll :: Int16 {- short -}
  , view2d_keeptot :: Int16 {- short -}
  , view2d_keepaspect :: Int16 {- short -}
  , view2d_keepzoom :: Int16 {- short -}
  , view2d_oldwinx :: Int16 {- short -}
  , view2d_oldwiny :: Int16 {- short -}
  , view2d_flag :: Int32 {- int -}
  }
  deriving Show

data SpaceLink = SpaceLink
  { spacelink_next :: Integer {- struct SpaceLink * -}
  , spacelink_prev :: Integer {- struct SpaceLink * -}
  , spacelink_spacetype :: Int32 {- int -}
  , spacelink_blockscale :: Float {- float -}
  , spacelink_area :: Integer {- struct ScrArea * -}
  , spacelink_blockhandler :: [Int16 {- short -}] {- short[8] -}
  }
  deriving Show

data SpaceInfo = SpaceInfo
  { spaceinfo_next :: Integer {- struct SpaceLink * -}
  , spaceinfo_prev :: Integer {- struct SpaceLink * -}
  , spaceinfo_spacetype :: Int32 {- int -}
  , spaceinfo_blockscale :: Float {- float -}
  , spaceinfo_area :: Integer {- struct ScrArea * -}
  , spaceinfo_blockhandler :: [Int16 {- short -}] {- short[8] -}
  }
  deriving Show

data SpaceIpo = SpaceIpo
  { spaceipo_next :: Integer {- struct SpaceLink * -}
  , spaceipo_prev :: Integer {- struct SpaceLink * -}
  , spaceipo_spacetype :: Int32 {- int -}
  , spaceipo_blockscale :: Float {- float -}
  , spaceipo_area :: Integer {- struct ScrArea * -}
  , spaceipo_blockhandler :: [Int16 {- short -}] {- short[8] -}
  , spaceipo_rowbut :: Int32 {- int -}
  , spaceipo_pad2 :: Int32 {- int -}
  , spaceipo_v2d :: View2D {- struct View2D -}
  , spaceipo_editipo :: Integer {- void * * -}
  , spaceipo_ipokey :: ListBase {- struct ListBase -}
  , spaceipo_ipo :: Integer {- struct Ipo * -}
  , spaceipo_from :: Integer {- struct ID * -}
  , spaceipo_actname :: ByteString {- char[32] -}
  , spaceipo_constname :: ByteString {- char[32] -}
  , spaceipo_totipo :: Int16 {- short -}
  , spaceipo_pin :: Int16 {- short -}
  , spaceipo_butofs :: Int16 {- short -}
  , spaceipo_channel :: Int16 {- short -}
  , spaceipo_showkey :: Int16 {- short -}
  , spaceipo_blocktype :: Int16 {- short -}
  , spaceipo_menunr :: Int16 {- short -}
  , spaceipo_lock :: Int16 {- short -}
  , spaceipo_flag :: Int32 {- int -}
  , spaceipo_median :: [Float {- float -}] {- float[3] -}
  , spaceipo_tot :: Rctf {- struct rctf -}
  }
  deriving Show

data SpaceButs = SpaceButs
  { spacebuts_next :: Integer {- struct SpaceLink * -}
  , spacebuts_prev :: Integer {- struct SpaceLink * -}
  , spacebuts_spacetype :: Int32 {- int -}
  , spacebuts_blockscale :: Float {- float -}
  , spacebuts_area :: Integer {- struct ScrArea * -}
  , spacebuts_ri :: Integer {- struct RenderInfo /* undefined */ * -}
  , spacebuts_blockhandler :: [Int16 {- short -}] {- short[8] -}
  , spacebuts_cursens :: Int16 {- short -}
  , spacebuts_curact :: Int16 {- short -}
  , spacebuts_align :: Int16 {- short -}
  , spacebuts_tabo :: Int16 {- short -}
  , spacebuts_v2d :: View2D {- struct View2D -}
  , spacebuts_mainb :: Int16 {- short -}
  , spacebuts_menunr :: Int16 {- short -}
  , spacebuts_pin :: Int16 {- short -}
  , spacebuts_mainbo :: Int16 {- short -}
  , spacebuts_lockpoin :: Integer {- void * * -}
  , spacebuts_texnr :: Int16 {- short -}
  , spacebuts_texfrom :: Int8 {- char -}
  , spacebuts_showgroup :: Int8 {- char -}
  , spacebuts_modeltype :: Int16 {- short -}
  , spacebuts_scriptblock :: Int16 {- short -}
  , spacebuts_scaflag :: Int16 {- short -}
  , spacebuts_re_align :: Int16 {- short -}
  , spacebuts_oldkeypress :: Int16 {- short -}
  , spacebuts_pad :: Int8 {- char -}
  , spacebuts_flag :: Int8 {- char -}
  , spacebuts_texact :: Int8 {- char -}
  , spacebuts_tab :: ByteString {- char[7] -}
  }
  deriving Show

data SpaceSeq = SpaceSeq
  { spaceseq_next :: Integer {- struct SpaceLink * -}
  , spaceseq_prev :: Integer {- struct SpaceLink * -}
  , spaceseq_spacetype :: Int32 {- int -}
  , spaceseq_blockscale :: Float {- float -}
  , spaceseq_area :: Integer {- struct ScrArea * -}
  , spaceseq_blockhandler :: [Int16 {- short -}] {- short[8] -}
  , spaceseq_v2d :: View2D {- struct View2D -}
  , spaceseq_xof :: Float {- float -}
  , spaceseq_yof :: Float {- float -}
  , spaceseq_mainb :: Int16 {- short -}
  , spaceseq_zoom :: Int16 {- short -}
  , spaceseq_chanshown :: Int16 {- short -}
  , spaceseq_pad2 :: Int16 {- short -}
  , spaceseq_flag :: Int32 {- int -}
  , spaceseq_pad :: Int32 {- int -}
  }
  deriving Show

data SpaceFile = SpaceFile
  { spacefile_next :: Integer {- struct SpaceLink * -}
  , spacefile_prev :: Integer {- struct SpaceLink * -}
  , spacefile_spacetype :: Int32 {- int -}
  , spacefile_blockscale :: Float {- float -}
  , spacefile_area :: Integer {- struct ScrArea * -}
  , spacefile_blockhandler :: [Int16 {- short -}] {- short[8] -}
  , spacefile_filelist :: Integer {- struct direntry /* undefined */ * -}
  , spacefile_totfile :: Int32 {- int -}
  , spacefile_title :: ByteString {- char[24] -}
  , spacefile_dir :: ByteString {- char[160] -}
  , spacefile_file :: ByteString {- char[80] -}
  , spacefile_type :: Int16 {- short -}
  , spacefile_ofs :: Int16 {- short -}
  , spacefile_flag :: Int16 {- short -}
  , spacefile_sort :: Int16 {- short -}
  , spacefile_maxnamelen :: Int16 {- short -}
  , spacefile_collums :: Int16 {- short -}
  , spacefile_libfiledata :: Integer {- struct BlendHandle /* undefined */ * -}
  , spacefile_retval :: Int16 {- short -}
  , spacefile_menu :: Int16 {- short -}
  , spacefile_act :: Int16 {- short -}
  , spacefile_ipotype :: Int16 {- short -}
  , spacefile_returnfunc :: Integer {- void * (*xxx)() -}
  , spacefile_returnfunc_event :: Integer {- void * (*xxx)() -}
  , spacefile_returnfunc_args :: Integer {- void * (*xxx)() -}
  , spacefile_arg1 :: Integer {- void * * -}
  , spacefile_arg2 :: Integer {- void * * -}
  , spacefile_menup :: Integer {- short * -}
  , spacefile_pupmenu :: Integer {- char * -}
  }
  deriving Show

data SpaceOops = SpaceOops
  { spaceoops_next :: Integer {- struct SpaceLink * -}
  , spaceoops_prev :: Integer {- struct SpaceLink * -}
  , spaceoops_spacetype :: Int32 {- int -}
  , spaceoops_blockscale :: Float {- float -}
  , spaceoops_area :: Integer {- struct ScrArea * -}
  , spaceoops_blockhandler :: [Int16 {- short -}] {- short[8] -}
  , spaceoops_v2d :: View2D {- struct View2D -}
  , spaceoops_oops :: ListBase {- struct ListBase -}
  , spaceoops_pin :: Int16 {- short -}
  , spaceoops_visiflag :: Int16 {- short -}
  , spaceoops_flag :: Int16 {- short -}
  , spaceoops_rt :: Int16 {- short -}
  , spaceoops_lockpoin :: Integer {- void * * -}
  , spaceoops_tree :: ListBase {- struct ListBase -}
  , spaceoops_treestore :: Integer {- struct TreeStore * -}
  , spaceoops_search_string :: ByteString {- char[32] -}
  , spaceoops_search_tse :: TreeStoreElem {- struct TreeStoreElem -}
  , spaceoops_search_flags :: Int32 {- int -}
  , spaceoops_do_ :: Int32 {- int -}
  , spaceoops_type :: Int16 {- short -}
  , spaceoops_outlinevis :: Int16 {- short -}
  , spaceoops_storeflag :: Int16 {- short -}
  , spaceoops_deps_flags :: Int16 {- short -}
  }
  deriving Show

data SpaceImage = SpaceImage
  { spaceimage_next :: Integer {- struct SpaceLink * -}
  , spaceimage_prev :: Integer {- struct SpaceLink * -}
  , spaceimage_spacetype :: Int32 {- int -}
  , spaceimage_blockscale :: Float {- float -}
  , spaceimage_area :: Integer {- struct ScrArea * -}
  , spaceimage_blockhandler :: [Int16 {- short -}] {- short[8] -}
  , spaceimage_v2d :: View2D {- struct View2D -}
  , spaceimage_image :: Integer {- struct Image * -}
  , spaceimage_iuser :: ImageUser {- struct ImageUser -}
  , spaceimage_cumap :: Integer {- struct CurveMapping * -}
  , spaceimage_mode :: Int16 {- short -}
  , spaceimage_menunr :: Int16 {- short -}
  , spaceimage_imanr :: Int16 {- short -}
  , spaceimage_curtile :: Int16 {- short -}
  , spaceimage_flag :: Int32 {- int -}
  , spaceimage_imtypenr :: Int16 {- short -}
  , spaceimage_lock :: Int16 {- short -}
  , spaceimage_showspare :: Int16 {- short -}
  , spaceimage_pad2 :: Int16 {- short -}
  , spaceimage_zoom :: Float {- float -}
  , spaceimage_xof :: Float {- float -}
  , spaceimage_yof :: Float {- float -}
  , spaceimage_centx :: Float {- float -}
  , spaceimage_centy :: Float {- float -}
  , spaceimage_info_str :: Integer {- char * -}
  , spaceimage_info_spare :: Integer {- char * -}
  , spaceimage_spare :: Integer {- struct ImBuf /* undefined */ * -}
  }
  deriving Show

data SpaceNla = SpaceNla
  { spacenla_next :: Integer {- struct SpaceLink * -}
  , spacenla_prev :: Integer {- struct SpaceLink * -}
  , spacenla_spacetype :: Int32 {- int -}
  , spacenla_blockscale :: Float {- float -}
  , spacenla_area :: Integer {- struct ScrArea * -}
  , spacenla_blockhandler :: [Int16 {- short -}] {- short[8] -}
  , spacenla_menunr :: Int16 {- short -}
  , spacenla_lock :: Int16 {- short -}
  , spacenla_flag :: Int32 {- int -}
  , spacenla_v2d :: View2D {- struct View2D -}
  }
  deriving Show

data SpaceText = SpaceText
  { spacetext_next :: Integer {- struct SpaceLink * -}
  , spacetext_prev :: Integer {- struct SpaceLink * -}
  , spacetext_spacetype :: Int32 {- int -}
  , spacetext_blockscale :: Float {- float -}
  , spacetext_area :: Integer {- struct ScrArea * -}
  , spacetext_blockhandler :: [Int16 {- short -}] {- short[8] -}
  , spacetext_text :: Integer {- struct Text * -}
  , spacetext_top :: Int32 {- int -}
  , spacetext_viewlines :: Int32 {- int -}
  , spacetext_flags :: Int16 {- short -}
  , spacetext_menunr :: Int16 {- short -}
  , spacetext_font_id :: Int32 {- int -}
  , spacetext_lheight :: Int32 {- int -}
  , spacetext_left :: Int32 {- int -}
  , spacetext_showlinenrs :: Int32 {- int -}
  , spacetext_tabnumber :: Int32 {- int -}
  , spacetext_currtab_set :: Int32 {- int -}
  , spacetext_showsyntax :: Int32 {- int -}
  , spacetext_unused_padd :: Int32 {- int -}
  , spacetext_pix_per_line :: Float {- float -}
  , spacetext_txtscroll :: Rcti {- struct rcti -}
  , spacetext_txtbar :: Rcti {- struct rcti -}
  }
  deriving Show

data SpaceScript = SpaceScript
  { spacescript_next :: Integer {- struct SpaceLink * -}
  , spacescript_prev :: Integer {- struct SpaceLink * -}
  , spacescript_spacetype :: Int32 {- int -}
  , spacescript_blockscale :: Float {- float -}
  , spacescript_area :: Integer {- struct ScrArea * -}
  , spacescript_script :: Integer {- struct Script /* undefined */ * -}
  , spacescript_flags :: Int16 {- short -}
  , spacescript_menunr :: Int16 {- short -}
  , spacescript_pad1 :: Int32 {- int -}
  , spacescript_but_refs :: Integer {- void * * -}
  }
  deriving Show

data SpaceTime = SpaceTime
  { spacetime_next :: Integer {- struct SpaceLink * -}
  , spacetime_prev :: Integer {- struct SpaceLink * -}
  , spacetime_spacetype :: Int32 {- int -}
  , spacetime_blockscale :: Float {- float -}
  , spacetime_area :: Integer {- struct ScrArea * -}
  , spacetime_v2d :: View2D {- struct View2D -}
  , spacetime_flag :: Int32 {- int -}
  , spacetime_redraws :: Int32 {- int -}
  }
  deriving Show

data SpaceNode = SpaceNode
  { spacenode_next :: Integer {- struct SpaceLink * -}
  , spacenode_prev :: Integer {- struct SpaceLink * -}
  , spacenode_spacetype :: Int32 {- int -}
  , spacenode_blockscale :: Float {- float -}
  , spacenode_area :: Integer {- struct ScrArea * -}
  , spacenode_v2d :: View2D {- struct View2D -}
  , spacenode_id :: Integer {- struct ID * -}
  , spacenode_from :: Integer {- struct ID * -}
  , spacenode_flag :: Int16 {- short -}
  , spacenode_menunr :: Int16 {- short -}
  , spacenode_aspect :: Float {- float -}
  , spacenode_curfont :: Integer {- void * * -}
  , spacenode_xof :: Float {- float -}
  , spacenode_yof :: Float {- float -}
  , spacenode_nodetree :: Integer {- struct bNodeTree * -}
  , spacenode_edittree :: Integer {- struct bNodeTree * -}
  , spacenode_treetype :: Int32 {- int -}
  , spacenode_pad :: Int32 {- int -}
  }
  deriving Show

data SpaceImaSel = SpaceImaSel
  { spaceimasel_next :: Integer {- struct SpaceLink * -}
  , spaceimasel_prev :: Integer {- struct SpaceLink * -}
  , spaceimasel_spacetype :: Int32 {- int -}
  , spaceimasel_blockscale :: Float {- float -}
  , spaceimasel_area :: Integer {- struct ScrArea * -}
  , spaceimasel_title :: ByteString {- char[28] -}
  , spaceimasel_fase :: Int32 {- int -}
  , spaceimasel_mode :: Int16 {- short -}
  , spaceimasel_subfase :: Int16 {- short -}
  , spaceimasel_mouse_move_redraw :: Int16 {- short -}
  , spaceimasel_imafase :: Int16 {- short -}
  , spaceimasel_mx :: Int16 {- short -}
  , spaceimasel_my :: Int16 {- short -}
  , spaceimasel_dirsli :: Int16 {- short -}
  , spaceimasel_dirsli_lines :: Int16 {- short -}
  , spaceimasel_dirsli_sx :: Int16 {- short -}
  , spaceimasel_dirsli_ey :: Int16 {- short -}
  , spaceimasel_dirsli_ex :: Int16 {- short -}
  , spaceimasel_dirsli_h :: Int16 {- short -}
  , spaceimasel_imasli :: Int16 {- short -}
  , spaceimasel_fileselmenuitem :: Int16 {- short -}
  , spaceimasel_imasli_sx :: Int16 {- short -}
  , spaceimasel_imasli_ey :: Int16 {- short -}
  , spaceimasel_imasli_ex :: Int16 {- short -}
  , spaceimasel_imasli_h :: Int16 {- short -}
  , spaceimasel_dssx :: Int16 {- short -}
  , spaceimasel_dssy :: Int16 {- short -}
  , spaceimasel_dsex :: Int16 {- short -}
  , spaceimasel_dsey :: Int16 {- short -}
  , spaceimasel_desx :: Int16 {- short -}
  , spaceimasel_desy :: Int16 {- short -}
  , spaceimasel_deex :: Int16 {- short -}
  , spaceimasel_deey :: Int16 {- short -}
  , spaceimasel_fssx :: Int16 {- short -}
  , spaceimasel_fssy :: Int16 {- short -}
  , spaceimasel_fsex :: Int16 {- short -}
  , spaceimasel_fsey :: Int16 {- short -}
  , spaceimasel_dsdh :: Int16 {- short -}
  , spaceimasel_fsdh :: Int16 {- short -}
  , spaceimasel_fesx :: Int16 {- short -}
  , spaceimasel_fesy :: Int16 {- short -}
  , spaceimasel_feex :: Int16 {- short -}
  , spaceimasel_feey :: Int16 {- short -}
  , spaceimasel_infsx :: Int16 {- short -}
  , spaceimasel_infsy :: Int16 {- short -}
  , spaceimasel_infex :: Int16 {- short -}
  , spaceimasel_infey :: Int16 {- short -}
  , spaceimasel_dnsx :: Int16 {- short -}
  , spaceimasel_dnsy :: Int16 {- short -}
  , spaceimasel_dnw :: Int16 {- short -}
  , spaceimasel_dnh :: Int16 {- short -}
  , spaceimasel_fnsx :: Int16 {- short -}
  , spaceimasel_fnsy :: Int16 {- short -}
  , spaceimasel_fnw :: Int16 {- short -}
  , spaceimasel_fnh :: Int16 {- short -}
  , spaceimasel_fole :: ByteString {- char[128] -}
  , spaceimasel_dor :: ByteString {- char[128] -}
  , spaceimasel_file :: ByteString {- char[128] -}
  , spaceimasel_dir :: ByteString {- char[128] -}
  , spaceimasel_firstdir :: Integer {- struct ImaDir /* undefined */ * -}
  , spaceimasel_firstfile :: Integer {- struct ImaDir /* undefined */ * -}
  , spaceimasel_topdir :: Int32 {- int -}
  , spaceimasel_totaldirs :: Int32 {- int -}
  , spaceimasel_hilite :: Int32 {- int -}
  , spaceimasel_topfile :: Int32 {- int -}
  , spaceimasel_totalfiles :: Int32 {- int -}
  , spaceimasel_image_slider :: Float {- float -}
  , spaceimasel_slider_height :: Float {- float -}
  , spaceimasel_slider_space :: Float {- float -}
  , spaceimasel_topima :: Int16 {- short -}
  , spaceimasel_totalima :: Int16 {- short -}
  , spaceimasel_curimax :: Int16 {- short -}
  , spaceimasel_curimay :: Int16 {- short -}
  , spaceimasel_first_sel_ima :: Integer {- struct OneSelectableIma /* undefined */ * -}
  , spaceimasel_hilite_ima :: Integer {- struct OneSelectableIma /* undefined */ * -}
  , spaceimasel_total_selected :: Int16 {- short -}
  , spaceimasel_ima_redraw :: Int16 {- short -}
  , spaceimasel_pad2 :: Int32 {- int -}
  , spaceimasel_cmap :: Integer {- struct ImBuf /* undefined */ * -}
  , spaceimasel_returnfunc :: Integer {- void * (*xxx)() -}
  , spaceimasel_arg1 :: Integer {- void * * -}
  }
  deriving Show

data ThemeUI = ThemeUI
  { themeui_outline :: ByteString {- char[4] -}
  , themeui_neutral :: ByteString {- char[4] -}
  , themeui_action :: ByteString {- char[4] -}
  , themeui_setting :: ByteString {- char[4] -}
  , themeui_setting1 :: ByteString {- char[4] -}
  , themeui_setting2 :: ByteString {- char[4] -}
  , themeui_num :: ByteString {- char[4] -}
  , themeui_textfield :: ByteString {- char[4] -}
  , themeui_textfield_hi :: ByteString {- char[4] -}
  , themeui_popup :: ByteString {- char[4] -}
  , themeui_text :: ByteString {- char[4] -}
  , themeui_text_hi :: ByteString {- char[4] -}
  , themeui_menu_back :: ByteString {- char[4] -}
  , themeui_menu_item :: ByteString {- char[4] -}
  , themeui_menu_hilite :: ByteString {- char[4] -}
  , themeui_menu_text :: ByteString {- char[4] -}
  , themeui_menu_text_hi :: ByteString {- char[4] -}
  , themeui_but_drawtype :: Int8 {- char -}
  , themeui_pad :: ByteString {- char[3] -}
  , themeui_iconfile :: ByteString {- char[80] -}
  }
  deriving Show

data ThemeSpace = ThemeSpace
  { themespace_back :: ByteString {- char[4] -}
  , themespace_text :: ByteString {- char[4] -}
  , themespace_text_hi :: ByteString {- char[4] -}
  , themespace_header :: ByteString {- char[4] -}
  , themespace_panel :: ByteString {- char[4] -}
  , themespace_shade1 :: ByteString {- char[4] -}
  , themespace_shade2 :: ByteString {- char[4] -}
  , themespace_hilite :: ByteString {- char[4] -}
  , themespace_grid :: ByteString {- char[4] -}
  , themespace_wire :: ByteString {- char[4] -}
  , themespace_select :: ByteString {- char[4] -}
  , themespace_lamp :: ByteString {- char[4] -}
  , themespace_active :: ByteString {- char[4] -}
  , themespace_group :: ByteString {- char[4] -}
  , themespace_group_active :: ByteString {- char[4] -}
  , themespace_transform :: ByteString {- char[4] -}
  , themespace_vertex :: ByteString {- char[4] -}
  , themespace_vertex_select :: ByteString {- char[4] -}
  , themespace_edge :: ByteString {- char[4] -}
  , themespace_edge_select :: ByteString {- char[4] -}
  , themespace_edge_seam :: ByteString {- char[4] -}
  , themespace_edge_sharp :: ByteString {- char[4] -}
  , themespace_edge_facesel :: ByteString {- char[4] -}
  , themespace_face :: ByteString {- char[4] -}
  , themespace_face_select :: ByteString {- char[4] -}
  , themespace_face_dot :: ByteString {- char[4] -}
  , themespace_normal :: ByteString {- char[4] -}
  , themespace_bone_solid :: ByteString {- char[4] -}
  , themespace_bone_pose :: ByteString {- char[4] -}
  , themespace_strip :: ByteString {- char[4] -}
  , themespace_strip_select :: ByteString {- char[4] -}
  , themespace_vertex_size :: Int8 {- char -}
  , themespace_facedot_size :: Int8 {- char -}
  , themespace_bpad :: ByteString {- char[2] -}
  , themespace_syntaxl :: ByteString {- char[4] -}
  , themespace_syntaxn :: ByteString {- char[4] -}
  , themespace_syntaxb :: ByteString {- char[4] -}
  , themespace_syntaxv :: ByteString {- char[4] -}
  , themespace_syntaxc :: ByteString {- char[4] -}
  , themespace_movie :: ByteString {- char[4] -}
  , themespace_image :: ByteString {- char[4] -}
  , themespace_scene :: ByteString {- char[4] -}
  , themespace_audio :: ByteString {- char[4] -}
  , themespace_effect :: ByteString {- char[4] -}
  , themespace_plugin :: ByteString {- char[4] -}
  , themespace_transition :: ByteString {- char[4] -}
  , themespace_meta :: ByteString {- char[4] -}
  , themespace_bpad1 :: ByteString {- char[4] -}
  }
  deriving Show

data BTheme = BTheme
  { btheme_next :: Integer {- struct bTheme * -}
  , btheme_prev :: Integer {- struct bTheme * -}
  , btheme_name :: ByteString {- char[32] -}
  , btheme_tui :: ThemeUI {- struct ThemeUI -}
  , btheme_tbuts :: ThemeSpace {- struct ThemeSpace -}
  , btheme_tv3d :: ThemeSpace {- struct ThemeSpace -}
  , btheme_tfile :: ThemeSpace {- struct ThemeSpace -}
  , btheme_tipo :: ThemeSpace {- struct ThemeSpace -}
  , btheme_tinfo :: ThemeSpace {- struct ThemeSpace -}
  , btheme_tsnd :: ThemeSpace {- struct ThemeSpace -}
  , btheme_tact :: ThemeSpace {- struct ThemeSpace -}
  , btheme_tnla :: ThemeSpace {- struct ThemeSpace -}
  , btheme_tseq :: ThemeSpace {- struct ThemeSpace -}
  , btheme_tima :: ThemeSpace {- struct ThemeSpace -}
  , btheme_timasel :: ThemeSpace {- struct ThemeSpace -}
  , btheme_text :: ThemeSpace {- struct ThemeSpace -}
  , btheme_toops :: ThemeSpace {- struct ThemeSpace -}
  , btheme_ttime :: ThemeSpace {- struct ThemeSpace -}
  , btheme_tnode :: ThemeSpace {- struct ThemeSpace -}
  , btheme_bpad :: ByteString {- char[4] -}
  , btheme_bpad1 :: ByteString {- char[4] -}
  }
  deriving Show

data SolidLight = SolidLight
  { solidlight_flag :: Int32 {- int -}
  , solidlight_pad :: Int32 {- int -}
  , solidlight_col :: [Float {- float -}] {- float[4] -}
  , solidlight_spec :: [Float {- float -}] {- float[4] -}
  , solidlight_vec :: [Float {- float -}] {- float[4] -}
  }
  deriving Show

data UserDef = UserDef
  { userdef_flag :: Int32 {- int -}
  , userdef_dupflag :: Int32 {- int -}
  , userdef_savetime :: Int32 {- int -}
  , userdef_tempdir :: ByteString {- char[160] -}
  , userdef_fontdir :: ByteString {- char[160] -}
  , userdef_renderdir :: ByteString {- char[160] -}
  , userdef_textudir :: ByteString {- char[160] -}
  , userdef_plugtexdir :: ByteString {- char[160] -}
  , userdef_plugseqdir :: ByteString {- char[160] -}
  , userdef_pythondir :: ByteString {- char[160] -}
  , userdef_sounddir :: ByteString {- char[160] -}
  , userdef_yfexportdir :: ByteString {- char[160] -}
  , userdef_versions :: Int16 {- short -}
  , userdef_vrmlflag :: Int16 {- short -}
  , userdef_gameflags :: Int32 {- int -}
  , userdef_wheellinescroll :: Int32 {- int -}
  , userdef_uiflag :: Int32 {- int -}
  , userdef_language :: Int32 {- int -}
  , userdef_userpref :: Int16 {- short -}
  , userdef_viewzoom :: Int16 {- short -}
  , userdef_console_buffer :: Int16 {- short -}
  , userdef_console_out :: Int16 {- short -}
  , userdef_mixbufsize :: Int32 {- int -}
  , userdef_fontsize :: Int32 {- int -}
  , userdef_encoding :: Int16 {- short -}
  , userdef_transopts :: Int16 {- short -}
  , userdef_menuthreshold1 :: Int16 {- short -}
  , userdef_menuthreshold2 :: Int16 {- short -}
  , userdef_fontname :: ByteString {- char[256] -}
  , userdef_themes :: ListBase {- struct ListBase -}
  , userdef_undosteps :: Int16 {- short -}
  , userdef_curssize :: Int16 {- short -}
  , userdef_tb_leftmouse :: Int16 {- short -}
  , userdef_tb_rightmouse :: Int16 {- short -}
  , userdef_light :: [SolidLight {- struct SolidLight -}] {- struct SolidLight[3] -}
  , userdef_tw_hotspot :: Int16 {- short -}
  , userdef_tw_flag :: Int16 {- short -}
  , userdef_tw_handlesize :: Int16 {- short -}
  , userdef_tw_size :: Int16 {- short -}
  , userdef_textimeout :: Int32 {- int -}
  , userdef_texcollectrate :: Int32 {- int -}
  , userdef_memcachelimit :: Int32 {- int -}
  , userdef_frameserverport :: Int16 {- short -}
  , userdef_pad_rot_angle :: Int16 {- short -}
  , userdef_obcenter_dia :: Int16 {- short -}
  , userdef_rvisize :: Int16 {- short -}
  , userdef_rvibright :: Int16 {- short -}
  , userdef_versemaster :: ByteString {- char[160] -}
  , userdef_verseuser :: ByteString {- char[160] -}
  , userdef_recent_files :: Int16 {- short -}
  , userdef_smooth_viewtx :: Int16 {- short -}
  , userdef_pad :: ByteString {- char[6] -}
  }
  deriving Show

data BScreen = BScreen
  { bscreen_id :: ID {- struct ID -}
  , bscreen_vertbase :: ListBase {- struct ListBase -}
  , bscreen_edgebase :: ListBase {- struct ListBase -}
  , bscreen_areabase :: ListBase {- struct ListBase -}
  , bscreen_scene :: Integer {- struct Scene * -}
  , bscreen_startx :: Int16 {- short -}
  , bscreen_endx :: Int16 {- short -}
  , bscreen_starty :: Int16 {- short -}
  , bscreen_endy :: Int16 {- short -}
  , bscreen_sizex :: Int16 {- short -}
  , bscreen_sizey :: Int16 {- short -}
  , bscreen_scenenr :: Int16 {- short -}
  , bscreen_screennr :: Int16 {- short -}
  , bscreen_full :: Int16 {- short -}
  , bscreen_pad :: Int16 {- short -}
  , bscreen_mainwin :: Int16 {- short -}
  , bscreen_winakt :: Int16 {- short -}
  , bscreen_handler :: [Int16 {- short -}] {- short[8] -}
  }
  deriving Show

data ScrVert = ScrVert
  { scrvert_next :: Integer {- struct ScrVert * -}
  , scrvert_prev :: Integer {- struct ScrVert * -}
  , scrvert_newv :: Integer {- struct ScrVert * -}
  , scrvert_vec :: Vec2s {- struct vec2s -}
  , scrvert_flag :: Int32 {- int -}
  }
  deriving Show

data ScrEdge = ScrEdge
  { scredge_next :: Integer {- struct ScrEdge * -}
  , scredge_prev :: Integer {- struct ScrEdge * -}
  , scredge_v1 :: Integer {- struct ScrVert * -}
  , scredge_v2 :: Integer {- struct ScrVert * -}
  , scredge_border :: Int16 {- short -}
  , scredge_flag :: Int16 {- short -}
  , scredge_pad :: Int32 {- int -}
  }
  deriving Show

data Panel = Panel
  { panel_next :: Integer {- struct Panel * -}
  , panel_prev :: Integer {- struct Panel * -}
  , panel_panelname :: ByteString {- char[64] -}
  , panel_tabname :: ByteString {- char[64] -}
  , panel_drawname :: ByteString {- char[64] -}
  , panel_ofsx :: Int16 {- short -}
  , panel_ofsy :: Int16 {- short -}
  , panel_sizex :: Int16 {- short -}
  , panel_sizey :: Int16 {- short -}
  , panel_flag :: Int16 {- short -}
  , panel_active :: Int16 {- short -}
  , panel_control :: Int16 {- short -}
  , panel_snap :: Int16 {- short -}
  , panel_old_ofsx :: Int16 {- short -}
  , panel_old_ofsy :: Int16 {- short -}
  , panel_sortcounter :: Int32 {- int -}
  , panel_paneltab :: Integer {- struct Panel * -}
  }
  deriving Show

data ScrArea = ScrArea
  { scrarea_next :: Integer {- struct ScrArea * -}
  , scrarea_prev :: Integer {- struct ScrArea * -}
  , scrarea_v1 :: Integer {- struct ScrVert * -}
  , scrarea_v2 :: Integer {- struct ScrVert * -}
  , scrarea_v3 :: Integer {- struct ScrVert * -}
  , scrarea_v4 :: Integer {- struct ScrVert * -}
  , scrarea_full :: Integer {- struct bScreen * -}
  , scrarea_winmat :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , scrarea_totrct :: Rcti {- struct rcti -}
  , scrarea_headrct :: Rcti {- struct rcti -}
  , scrarea_winrct :: Rcti {- struct rcti -}
  , scrarea_headwin :: Int16 {- short -}
  , scrarea_win :: Int16 {- short -}
  , scrarea_headertype :: Int16 {- short -}
  , scrarea_spacetype :: Int8 {- char -}
  , scrarea_butspacetype :: Int8 {- char -}
  , scrarea_winx :: Int16 {- short -}
  , scrarea_winy :: Int16 {- short -}
  , scrarea_head_swap :: Int8 {- char -}
  , scrarea_head_equal :: Int8 {- char -}
  , scrarea_win_swap :: Int8 {- char -}
  , scrarea_win_equal :: Int8 {- char -}
  , scrarea_headbutlen :: Int16 {- short -}
  , scrarea_headbutofs :: Int16 {- short -}
  , scrarea_cursor :: Int16 {- short -}
  , scrarea_flag :: Int16 {- short -}
  , scrarea_scriptlink :: ScriptLink {- struct ScriptLink -}
  , scrarea_spacedata :: ListBase {- struct ListBase -}
  , scrarea_uiblocks :: ListBase {- struct ListBase -}
  , scrarea_panels :: ListBase {- struct ListBase -}
  }
  deriving Show

data FileGlobal = FileGlobal
  { fileglobal_subvstr :: ByteString {- char[4] -}
  , fileglobal_subversion :: Int16 {- short -}
  , fileglobal_pads :: Int16 {- short -}
  , fileglobal_minversion :: Int16 {- short -}
  , fileglobal_minsubversion :: Int16 {- short -}
  , fileglobal_displaymode :: Int16 {- short -}
  , fileglobal_winpos :: Int16 {- short -}
  , fileglobal_curscreen :: Integer {- void * * -}
  , fileglobal_curscene :: Integer {- void * * -}
  , fileglobal_fileflags :: Int32 {- int -}
  , fileglobal_globalf :: Int32 {- int -}
  }
  deriving Show

data StripElem = StripElem
  { stripelem_name :: ByteString {- char[80] -}
  , stripelem_ibuf :: Integer {- struct ImBuf /* undefined */ * -}
  , stripelem_se1 :: Integer {- struct StripElem * -}
  , stripelem_se2 :: Integer {- struct StripElem * -}
  , stripelem_se3 :: Integer {- struct StripElem * -}
  , stripelem_ok :: Int16 {- short -}
  , stripelem_pad :: Int16 {- short -}
  , stripelem_nr :: Int32 {- int -}
  }
  deriving Show

data Strip = Strip
  { strip_next :: Integer {- struct Strip * -}
  , strip_prev :: Integer {- struct Strip * -}
  , strip_rt :: Int32 {- int -}
  , strip_len :: Int32 {- int -}
  , strip_us :: Int32 {- int -}
  , strip_done :: Int32 {- int -}
  , strip_stripdata :: Integer {- struct StripElem * -}
  , strip_dir :: ByteString {- char[160] -}
  , strip_orx :: Int32 {- int -}
  , strip_ory :: Int32 {- int -}
  }
  deriving Show

data PluginSeq = PluginSeq
  { pluginseq_name :: ByteString {- char[256] -}
  , pluginseq_handle :: Integer {- void * * -}
  , pluginseq_pname :: Integer {- char * -}
  , pluginseq_vars :: Int32 {- int -}
  , pluginseq_version :: Int32 {- int -}
  , pluginseq_varstr :: Integer {- void * * -}
  , pluginseq_cfra :: Integer {- float * -}
  , pluginseq_data :: [Float {- float -}] {- float[32] -}
  , pluginseq_instance_private_data :: Integer {- void * * -}
  , pluginseq_current_private_data :: Integer {- void * * * -}
  , pluginseq_doit :: Integer {- void * (*xxx)() -}
  , pluginseq_callback :: Integer {- void * (*xxx)() -}
  }
  deriving Show

data Sequence = Sequence
  { sequence_next :: Integer {- struct Sequence * -}
  , sequence_prev :: Integer {- struct Sequence * -}
  , sequence_newseq :: Integer {- struct Sequence * -}
  , sequence_lib :: Integer {- void * * -}
  , sequence_name :: ByteString {- char[24] -}
  , sequence_flag :: Int16 {- short -}
  , sequence_type :: Int16 {- short -}
  , sequence_len :: Int32 {- int -}
  , sequence_start :: Int32 {- int -}
  , sequence_startofs :: Int32 {- int -}
  , sequence_endofs :: Int32 {- int -}
  , sequence_startstill :: Int32 {- int -}
  , sequence_endstill :: Int32 {- int -}
  , sequence_machine :: Int32 {- int -}
  , sequence_depth :: Int32 {- int -}
  , sequence_startdisp :: Int32 {- int -}
  , sequence_enddisp :: Int32 {- int -}
  , sequence_mul :: Float {- float -}
  , sequence_handsize :: Float {- float -}
  , sequence_sfra :: Int32 {- int -}
  , sequence_strip :: Integer {- struct Strip * -}
  , sequence_curelem :: Integer {- struct StripElem * -}
  , sequence_ipo :: Integer {- struct Ipo * -}
  , sequence_scene :: Integer {- struct Scene * -}
  , sequence_anim :: Integer {- struct anim /* undefined */ * -}
  , sequence_facf0 :: Float {- float -}
  , sequence_facf1 :: Float {- float -}
  , sequence_plugin :: Integer {- struct PluginSeq * -}
  , sequence_seq1 :: Integer {- struct Sequence * -}
  , sequence_seq2 :: Integer {- struct Sequence * -}
  , sequence_seq3 :: Integer {- struct Sequence * -}
  , sequence_seqbase :: ListBase {- struct ListBase -}
  , sequence_sound :: Integer {- struct bSound * -}
  , sequence_hdaudio :: Integer {- struct hdaudio /* undefined */ * -}
  , sequence_level :: Float {- float -}
  , sequence_pan :: Float {- float -}
  , sequence_curpos :: Int32 {- int -}
  , sequence_strobe :: Float {- float -}
  , sequence_effectdata :: Integer {- void * * -}
  , sequence_anim_preseek :: Int32 {- int -}
  , sequence_pad :: Int32 {- int -}
  }
  deriving Show

data MetaStack = MetaStack
  { metastack_next :: Integer {- struct MetaStack * -}
  , metastack_prev :: Integer {- struct MetaStack * -}
  , metastack_oldbasep :: Integer {- struct ListBase * -}
  , metastack_parseq :: Integer {- struct Sequence * -}
  }
  deriving Show

data Editing = Editing
  { editing_seqbasep :: Integer {- struct ListBase * -}
  , editing_seqbase :: ListBase {- struct ListBase -}
  , editing_metastack :: ListBase {- struct ListBase -}
  , editing_flag :: Int16 {- short -}
  , editing_pad :: Int16 {- short -}
  , editing_rt :: Int32 {- int -}
  }
  deriving Show

data WipeVars = WipeVars
  { wipevars_edgeWidth :: Float {- float -}
  , wipevars_angle :: Float {- float -}
  , wipevars_forward :: Int16 {- short -}
  , wipevars_wipetype :: Int16 {- short -}
  }
  deriving Show

data GlowVars = GlowVars
  { glowvars_fMini :: Float {- float -}
  , glowvars_fClamp :: Float {- float -}
  , glowvars_fBoost :: Float {- float -}
  , glowvars_dDist :: Float {- float -}
  , glowvars_dQuality :: Int32 {- int -}
  , glowvars_bNoComp :: Int32 {- int -}
  }
  deriving Show

data TransformVars = TransformVars
  { transformvars_ScalexIni :: Float {- float -}
  , transformvars_ScaleyIni :: Float {- float -}
  , transformvars_ScalexFin :: Float {- float -}
  , transformvars_ScaleyFin :: Float {- float -}
  , transformvars_xIni :: Float {- float -}
  , transformvars_xFin :: Float {- float -}
  , transformvars_yIni :: Float {- float -}
  , transformvars_yFin :: Float {- float -}
  , transformvars_rotIni :: Float {- float -}
  , transformvars_rotFin :: Float {- float -}
  }
  deriving Show

data SolidColorVars = SolidColorVars
  { solidcolorvars_col :: [Float {- float -}] {- float[3] -}
  , solidcolorvars_pad :: Float {- float -}
  }
  deriving Show

data SpeedControlVars = SpeedControlVars
  { speedcontrolvars_frameMap :: Integer {- float * -}
  , speedcontrolvars_globalSpeed :: Float {- float -}
  , speedcontrolvars_flags :: Int32 {- int -}
  , speedcontrolvars_length :: Int32 {- int -}
  , speedcontrolvars_pad :: Int32 {- int -}
  }
  deriving Show

data Effect = Effect
  { effect_next :: Integer {- struct Effect * -}
  , effect_prev :: Integer {- struct Effect * -}
  , effect_type :: Int16 {- short -}
  , effect_flag :: Int16 {- short -}
  , effect_buttype :: Int16 {- short -}
  , effect_rt :: Int16 {- short -}
  }
  deriving Show

data BuildEff = BuildEff
  { buildeff_next :: Integer {- struct BuildEff * -}
  , buildeff_prev :: Integer {- struct BuildEff * -}
  , buildeff_type :: Int16 {- short -}
  , buildeff_flag :: Int16 {- short -}
  , buildeff_buttype :: Int16 {- short -}
  , buildeff_rt :: Int16 {- short -}
  , buildeff_len :: Float {- float -}
  , buildeff_sfra :: Float {- float -}
  }
  deriving Show

data PartEff = PartEff
  { parteff_next :: Integer {- struct PartEff * -}
  , parteff_prev :: Integer {- struct PartEff * -}
  , parteff_type :: Int16 {- short -}
  , parteff_flag :: Int16 {- short -}
  , parteff_buttype :: Int16 {- short -}
  , parteff_stype :: Int16 {- short -}
  , parteff_vertgroup :: Int16 {- short -}
  , parteff_userjit :: Int16 {- short -}
  , parteff_sta :: Float {- float -}
  , parteff_end :: Float {- float -}
  , parteff_lifetime :: Float {- float -}
  , parteff_totpart :: Int32 {- int -}
  , parteff_totkey :: Int32 {- int -}
  , parteff_seed :: Int32 {- int -}
  , parteff_normfac :: Float {- float -}
  , parteff_obfac :: Float {- float -}
  , parteff_randfac :: Float {- float -}
  , parteff_texfac :: Float {- float -}
  , parteff_randlife :: Float {- float -}
  , parteff_force :: [Float {- float -}] {- float[3] -}
  , parteff_damp :: Float {- float -}
  , parteff_nabla :: Float {- float -}
  , parteff_vectsize :: Float {- float -}
  , parteff_maxlen :: Float {- float -}
  , parteff_pad :: Float {- float -}
  , parteff_defvec :: [Float {- float -}] {- float[3] -}
  , parteff_mult :: [Float {- float -}] {- float[4] -}
  , parteff_life :: [Float {- float -}] {- float[4] -}
  , parteff_child :: [Int16 {- short -}] {- short[4] -}
  , parteff_mat :: [Int16 {- short -}] {- short[4] -}
  , parteff_texmap :: Int16 {- short -}
  , parteff_curmult :: Int16 {- short -}
  , parteff_staticstep :: Int16 {- short -}
  , parteff_omat :: Int16 {- short -}
  , parteff_timetex :: Int16 {- short -}
  , parteff_speedtex :: Int16 {- short -}
  , parteff_flag2 :: Int16 {- short -}
  , parteff_flag2neg :: Int16 {- short -}
  , parteff_disp :: Int16 {- short -}
  , parteff_vertgroup_v :: Int16 {- short -}
  , parteff_vgroupname :: ByteString {- char[32] -}
  , parteff_vgroupname_v :: ByteString {- char[32] -}
  , parteff_imat :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , parteff_keys :: Integer {- struct Particle /* undefined */ * -}
  , parteff_group :: Integer {- struct Group * -}
  }
  deriving Show

data WaveEff = WaveEff
  { waveeff_next :: Integer {- struct WaveEff * -}
  , waveeff_prev :: Integer {- struct WaveEff * -}
  , waveeff_type :: Int16 {- short -}
  , waveeff_flag :: Int16 {- short -}
  , waveeff_buttype :: Int16 {- short -}
  , waveeff_stype :: Int16 {- short -}
  , waveeff_startx :: Float {- float -}
  , waveeff_starty :: Float {- float -}
  , waveeff_height :: Float {- float -}
  , waveeff_width :: Float {- float -}
  , waveeff_narrow :: Float {- float -}
  , waveeff_speed :: Float {- float -}
  , waveeff_minfac :: Float {- float -}
  , waveeff_damp :: Float {- float -}
  , waveeff_timeoffs :: Float {- float -}
  , waveeff_lifetime :: Float {- float -}
  }
  deriving Show

data TreeStoreElem = TreeStoreElem
  { treestoreelem_type :: Int16 {- short -}
  , treestoreelem_nr :: Int16 {- short -}
  , treestoreelem_flag :: Int16 {- short -}
  , treestoreelem_used :: Int16 {- short -}
  , treestoreelem_id :: Integer {- struct ID * -}
  }
  deriving Show

data TreeStore = TreeStore
  { treestore_totelem :: Int32 {- int -}
  , treestore_usedelem :: Int32 {- int -}
  , treestore_data :: Integer {- struct TreeStoreElem * -}
  }
  deriving Show

data Oops = Oops
  { oops_next :: Integer {- struct Oops * -}
  , oops_prev :: Integer {- struct Oops * -}
  , oops_type :: Int16 {- short -}
  , oops_flag :: Int16 {- short -}
  , oops_dt :: Int16 {- short -}
  , oops_hide :: Int16 {- short -}
  , oops_x :: Float {- float -}
  , oops_y :: Float {- float -}
  , oops_dx :: Float {- float -}
  , oops_dy :: Float {- float -}
  , oops_id :: Integer {- struct ID * -}
  , oops_link :: ListBase {- struct ListBase -}
  }
  deriving Show

data BProperty = BProperty
  { bproperty_next :: Integer {- struct bProperty * -}
  , bproperty_prev :: Integer {- struct bProperty * -}
  , bproperty_name :: ByteString {- char[32] -}
  , bproperty_type :: Int16 {- short -}
  , bproperty_otype :: Int16 {- short -}
  , bproperty_data :: Int32 {- int -}
  , bproperty_old :: Int32 {- int -}
  , bproperty_flag :: Int16 {- short -}
  , bproperty_pad :: Int16 {- short -}
  , bproperty_poin :: Integer {- void * * -}
  , bproperty_oldpoin :: Integer {- void * * -}
  }
  deriving Show

data BNearSensor = BNearSensor
  { bnearsensor_name :: ByteString {- char[32] -}
  , bnearsensor_dist :: Float {- float -}
  , bnearsensor_resetdist :: Float {- float -}
  , bnearsensor_lastval :: Int32 {- int -}
  , bnearsensor_pad :: Int32 {- int -}
  }
  deriving Show

data BMouseSensor = BMouseSensor
  { bmousesensor_type :: Int16 {- short -}
  , bmousesensor_flag :: Int16 {- short -}
  , bmousesensor_pad1 :: Int16 {- short -}
  , bmousesensor_pad2 :: Int16 {- short -}
  }
  deriving Show

data BTouchSensor = BTouchSensor
  { btouchsensor_name :: ByteString {- char[32] -}
  , btouchsensor_ma :: Integer {- struct Material * -}
  , btouchsensor_dist :: Float {- float -}
  , btouchsensor_pad :: Float {- float -}
  }
  deriving Show

data BKeyboardSensor = BKeyboardSensor
  { bkeyboardsensor_key :: Int16 {- short -}
  , bkeyboardsensor_qual :: Int16 {- short -}
  , bkeyboardsensor_type :: Int16 {- short -}
  , bkeyboardsensor_qual2 :: Int16 {- short -}
  , bkeyboardsensor_targetName :: ByteString {- char[32] -}
  , bkeyboardsensor_toggleName :: ByteString {- char[32] -}
  }
  deriving Show

data BPropertySensor = BPropertySensor
  { bpropertysensor_type :: Int32 {- int -}
  , bpropertysensor_pad :: Int32 {- int -}
  , bpropertysensor_name :: ByteString {- char[32] -}
  , bpropertysensor_value :: ByteString {- char[32] -}
  , bpropertysensor_maxvalue :: ByteString {- char[32] -}
  }
  deriving Show

data BCollisionSensor = BCollisionSensor
  { bcollisionsensor_name :: ByteString {- char[32] -}
  , bcollisionsensor_materialName :: ByteString {- char[32] -}
  , bcollisionsensor_damptimer :: Int16 {- short -}
  , bcollisionsensor_damp :: Int16 {- short -}
  , bcollisionsensor_mode :: Int16 {- short -}
  , bcollisionsensor_pad2 :: Int16 {- short -}
  }
  deriving Show

data BRadarSensor = BRadarSensor
  { bradarsensor_name :: ByteString {- char[32] -}
  , bradarsensor_angle :: Float {- float -}
  , bradarsensor_range :: Float {- float -}
  , bradarsensor_flag :: Int16 {- short -}
  , bradarsensor_axis :: Int16 {- short -}
  }
  deriving Show

data BRandomSensor = BRandomSensor
  { brandomsensor_name :: ByteString {- char[32] -}
  , brandomsensor_seed :: Int32 {- int -}
  , brandomsensor_delay :: Int32 {- int -}
  }
  deriving Show

data BRaySensor = BRaySensor
  { braysensor_name :: ByteString {- char[32] -}
  , braysensor_range :: Float {- float -}
  , braysensor_propname :: ByteString {- char[32] -}
  , braysensor_matname :: ByteString {- char[32] -}
  , braysensor_mode :: Int16 {- short -}
  , braysensor_pad1 :: Int16 {- short -}
  , braysensor_axisflag :: Int32 {- int -}
  }
  deriving Show

data BMessageSensor = BMessageSensor
  { bmessagesensor_fromObject :: Integer {- struct Object * -}
  , bmessagesensor_subject :: ByteString {- char[32] -}
  , bmessagesensor_body :: ByteString {- char[32] -}
  }
  deriving Show

data BSensor = BSensor
  { bsensor_next :: Integer {- struct bSensor * -}
  , bsensor_prev :: Integer {- struct bSensor * -}
  , bsensor_type :: Int16 {- short -}
  , bsensor_otype :: Int16 {- short -}
  , bsensor_flag :: Int16 {- short -}
  , bsensor_pulse :: Int16 {- short -}
  , bsensor_freq :: Int16 {- short -}
  , bsensor_totlinks :: Int16 {- short -}
  , bsensor_pad1 :: Int16 {- short -}
  , bsensor_pad2 :: Int16 {- short -}
  , bsensor_name :: ByteString {- char[32] -}
  , bsensor_data :: Integer {- void * * -}
  , bsensor_links :: Integer {- struct bController * * -}
  , bsensor_ob :: Integer {- struct Object * -}
  , bsensor_invert :: Int16 {- short -}
  , bsensor_freq2 :: Int16 {- short -}
  , bsensor_pad :: Int32 {- int -}
  }
  deriving Show

data BJoystickSensor = BJoystickSensor
  { bjoysticksensor_name :: ByteString {- char[32] -}
  , bjoysticksensor_type :: Int16 {- short -}
  , bjoysticksensor_pad :: Int16 {- short -}
  , bjoysticksensor_axis :: Int32 {- int -}
  , bjoysticksensor_axisf :: Int32 {- int -}
  , bjoysticksensor_button :: Int32 {- int -}
  , bjoysticksensor_buttonf :: Int32 {- int -}
  , bjoysticksensor_hat :: Int32 {- int -}
  , bjoysticksensor_hatf :: Int32 {- int -}
  , bjoysticksensor_precision :: Int32 {- int -}
  }
  deriving Show

data BExpressionCont = BExpressionCont
  { bexpressioncont_str :: ByteString {- char[128] -}
  }
  deriving Show

data BPythonCont = BPythonCont
  { bpythoncont_text :: Integer {- struct Text * -}
  }
  deriving Show

data BController = BController
  { bcontroller_next :: Integer {- struct bController * -}
  , bcontroller_prev :: Integer {- struct bController * -}
  , bcontroller_mynew :: Integer {- struct bController * -}
  , bcontroller_type :: Int16 {- short -}
  , bcontroller_flag :: Int16 {- short -}
  , bcontroller_inputs :: Int16 {- short -}
  , bcontroller_totlinks :: Int16 {- short -}
  , bcontroller_otype :: Int16 {- short -}
  , bcontroller_totslinks :: Int16 {- short -}
  , bcontroller_pad2 :: Int16 {- short -}
  , bcontroller_pad3 :: Int16 {- short -}
  , bcontroller_name :: ByteString {- char[32] -}
  , bcontroller_data :: Integer {- void * * -}
  , bcontroller_links :: Integer {- struct bActuator * * -}
  , bcontroller_slinks :: Integer {- struct bSensor * * -}
  , bcontroller_val :: Int16 {- short -}
  , bcontroller_valo :: Int16 {- short -}
  , bcontroller_pad5 :: Int32 {- int -}
  }
  deriving Show

data BAddObjectActuator = BAddObjectActuator
  { baddobjectactuator_time :: Int32 {- int -}
  , baddobjectactuator_pad :: Int32 {- int -}
  , baddobjectactuator_ob :: Integer {- struct Object * -}
  }
  deriving Show

data BActionActuator = BActionActuator
  { bactionactuator_act :: Integer {- struct bAction * -}
  , bactionactuator_type :: Int16 {- short -}
  , bactionactuator_flag :: Int16 {- short -}
  , bactionactuator_sta :: Int32 {- int -}
  , bactionactuator_end :: Int32 {- int -}
  , bactionactuator_name :: ByteString {- char[32] -}
  , bactionactuator_blendin :: Int32 {- int -}
  , bactionactuator_priority :: Int16 {- short -}
  , bactionactuator_strideaxis :: Int16 {- short -}
  , bactionactuator_stridelength :: Float {- float -}
  }
  deriving Show

data BSoundActuator = BSoundActuator
  { bsoundactuator_flag :: Int16 {- short -}
  , bsoundactuator_sndnr :: Int16 {- short -}
  , bsoundactuator_sta :: Int32 {- int -}
  , bsoundactuator_end :: Int32 {- int -}
  , bsoundactuator_pad1 :: [Int16 {- short -}] {- short[2] -}
  , bsoundactuator_sound :: Integer {- struct bSound * -}
  , bsoundactuator_type :: Int16 {- short -}
  , bsoundactuator_makecopy :: Int16 {- short -}
  , bsoundactuator_copymade :: Int16 {- short -}
  , bsoundactuator_pad2 :: [Int16 {- short -}] {- short[1] -}
  }
  deriving Show

data BCDActuator = BCDActuator
  { bcdactuator_flag :: Int16 {- short -}
  , bcdactuator_sndnr :: Int16 {- short -}
  , bcdactuator_sta :: Int32 {- int -}
  , bcdactuator_end :: Int32 {- int -}
  , bcdactuator_type :: Int16 {- short -}
  , bcdactuator_track :: Int16 {- short -}
  , bcdactuator_volume :: Float {- float -}
  }
  deriving Show

data BEditObjectActuator = BEditObjectActuator
  { beditobjectactuator_time :: Int32 {- int -}
  , beditobjectactuator_type :: Int16 {- short -}
  , beditobjectactuator_flag :: Int16 {- short -}
  , beditobjectactuator_ob :: Integer {- struct Object * -}
  , beditobjectactuator_me :: Integer {- struct Mesh * -}
  , beditobjectactuator_name :: ByteString {- char[32] -}
  , beditobjectactuator_linVelocity :: [Float {- float -}] {- float[3] -}
  , beditobjectactuator_localflag :: Int16 {- short -}
  , beditobjectactuator_pad :: Int16 {- short -}
  }
  deriving Show

data BSceneActuator = BSceneActuator
  { bsceneactuator_type :: Int16 {- short -}
  , bsceneactuator_flag :: Int16 {- short -}
  , bsceneactuator_pad :: Int32 {- int -}
  , bsceneactuator_scene :: Integer {- struct Scene * -}
  , bsceneactuator_camera :: Integer {- struct Object * -}
  }
  deriving Show

data BPropertyActuator = BPropertyActuator
  { bpropertyactuator_flag :: Int32 {- int -}
  , bpropertyactuator_type :: Int32 {- int -}
  , bpropertyactuator_name :: ByteString {- char[32] -}
  , bpropertyactuator_value :: ByteString {- char[32] -}
  , bpropertyactuator_ob :: Integer {- struct Object * -}
  }
  deriving Show

data BObjectActuator = BObjectActuator
  { bobjectactuator_flag :: Int32 {- int -}
  , bobjectactuator_type :: Int32 {- int -}
  , bobjectactuator_forceloc :: [Float {- float -}] {- float[3] -}
  , bobjectactuator_forcerot :: [Float {- float -}] {- float[3] -}
  , bobjectactuator_loc :: [Float {- float -}] {- float[3] -}
  , bobjectactuator_rot :: [Float {- float -}] {- float[3] -}
  , bobjectactuator_dloc :: [Float {- float -}] {- float[3] -}
  , bobjectactuator_drot :: [Float {- float -}] {- float[3] -}
  , bobjectactuator_linearvelocity :: [Float {- float -}] {- float[3] -}
  , bobjectactuator_angularvelocity :: [Float {- float -}] {- float[3] -}
  }
  deriving Show

data BIpoActuator = BIpoActuator
  { bipoactuator_flag :: Int16 {- short -}
  , bipoactuator_type :: Int16 {- short -}
  , bipoactuator_sta :: Int32 {- int -}
  , bipoactuator_end :: Int32 {- int -}
  , bipoactuator_name :: ByteString {- char[32] -}
  , bipoactuator_pad1 :: Int16 {- short -}
  , bipoactuator_cur :: Int16 {- short -}
  , bipoactuator_butsta :: Int16 {- short -}
  , bipoactuator_butend :: Int16 {- short -}
  }
  deriving Show

data BCameraActuator = BCameraActuator
  { bcameraactuator_ob :: Integer {- struct Object * -}
  , bcameraactuator_height :: Float {- float -}
  , bcameraactuator_min :: Float {- float -}
  , bcameraactuator_max :: Float {- float -}
  , bcameraactuator_fac :: Float {- float -}
  , bcameraactuator_flag :: Int16 {- short -}
  , bcameraactuator_axis :: Int16 {- short -}
  , bcameraactuator_visifac :: Float {- float -}
  }
  deriving Show

data BConstraintActuator = BConstraintActuator
  { bconstraintactuator_flag :: Int16 {- short -}
  , bconstraintactuator_damp :: Int16 {- short -}
  , bconstraintactuator_slow :: Float {- float -}
  , bconstraintactuator_minloc :: [Float {- float -}] {- float[3] -}
  , bconstraintactuator_maxloc :: [Float {- float -}] {- float[3] -}
  , bconstraintactuator_minrot :: [Float {- float -}] {- float[3] -}
  , bconstraintactuator_maxrot :: [Float {- float -}] {- float[3] -}
  }
  deriving Show

data BGroupActuator = BGroupActuator
  { bgroupactuator_flag :: Int16 {- short -}
  , bgroupactuator_type :: Int16 {- short -}
  , bgroupactuator_sta :: Int32 {- int -}
  , bgroupactuator_end :: Int32 {- int -}
  , bgroupactuator_name :: ByteString {- char[32] -}
  , bgroupactuator_pad :: [Int16 {- short -}] {- short[3] -}
  , bgroupactuator_cur :: Int16 {- short -}
  , bgroupactuator_butsta :: Int16 {- short -}
  , bgroupactuator_butend :: Int16 {- short -}
  , bgroupactuator_group :: Integer {- struct Group * -}
  }
  deriving Show

data BRandomActuator = BRandomActuator
  { brandomactuator_seed :: Int32 {- int -}
  , brandomactuator_distribution :: Int32 {- int -}
  , brandomactuator_int_arg_1 :: Int32 {- int -}
  , brandomactuator_int_arg_2 :: Int32 {- int -}
  , brandomactuator_float_arg_1 :: Float {- float -}
  , brandomactuator_float_arg_2 :: Float {- float -}
  , brandomactuator_propname :: ByteString {- char[32] -}
  }
  deriving Show

data BMessageActuator = BMessageActuator
  { bmessageactuator_toPropName :: ByteString {- char[32] -}
  , bmessageactuator_toObject :: Integer {- struct Object * -}
  , bmessageactuator_subject :: ByteString {- char[32] -}
  , bmessageactuator_bodyType :: Int16 {- short -}
  , bmessageactuator_pad1 :: Int16 {- short -}
  , bmessageactuator_pad2 :: Int32 {- int -}
  , bmessageactuator_body :: ByteString {- char[32] -}
  }
  deriving Show

data BGameActuator = BGameActuator
  { bgameactuator_flag :: Int16 {- short -}
  , bgameactuator_type :: Int16 {- short -}
  , bgameactuator_sta :: Int32 {- int -}
  , bgameactuator_end :: Int32 {- int -}
  , bgameactuator_filename :: ByteString {- char[64] -}
  , bgameactuator_loadaniname :: ByteString {- char[64] -}
  }
  deriving Show

data BVisibilityActuator = BVisibilityActuator
  { bvisibilityactuator_flag :: Int32 {- int -}
  }
  deriving Show

data BActuator = BActuator
  { bactuator_next :: Integer {- struct bActuator * -}
  , bactuator_prev :: Integer {- struct bActuator * -}
  , bactuator_mynew :: Integer {- struct bActuator * -}
  , bactuator_type :: Int16 {- short -}
  , bactuator_flag :: Int16 {- short -}
  , bactuator_otype :: Int16 {- short -}
  , bactuator_go :: Int16 {- short -}
  , bactuator_name :: ByteString {- char[32] -}
  , bactuator_data :: Integer {- void * * -}
  , bactuator_ob :: Integer {- struct Object * -}
  }
  deriving Show

data FreeCamera = FreeCamera
  { freecamera_mass :: Float {- float -}
  , freecamera_accelleration :: Float {- float -}
  , freecamera_maxspeed :: Float {- float -}
  , freecamera_maxrotspeed :: Float {- float -}
  , freecamera_maxtiltspeed :: Float {- float -}
  , freecamera_flag :: Int32 {- int -}
  , freecamera_rotdamp :: Float {- float -}
  , freecamera_tiltdamp :: Float {- float -}
  , freecamera_speeddamp :: Float {- float -}
  , freecamera_pad :: Float {- float -}
  }
  deriving Show

data BSound = BSound
  { bsound_id :: ID {- struct ID -}
  , bsound_name :: ByteString {- char[160] -}
  , bsound_sample :: Integer {- struct bSample /* undefined */ * -}
  , bsound_stream :: Integer {- void * * -}
  , bsound_packedfile :: Integer {- struct PackedFile * -}
  , bsound_newpackedfile :: Integer {- struct PackedFile * -}
  , bsound_snd_sound :: Integer {- void * * -}
  , bsound_ipo :: Integer {- struct Ipo * -}
  , bsound_volume :: Float {- float -}
  , bsound_panning :: Float {- float -}
  , bsound_attenuation :: Float {- float -}
  , bsound_pitch :: Float {- float -}
  , bsound_min_gain :: Float {- float -}
  , bsound_max_gain :: Float {- float -}
  , bsound_distance :: Float {- float -}
  , bsound_flags :: Int32 {- int -}
  , bsound_streamlen :: Int32 {- int -}
  , bsound_channels :: Int8 {- char -}
  , bsound_highprio :: Int8 {- char -}
  , bsound_pad :: ByteString {- char[10] -}
  }
  deriving Show

data BSoundListener = BSoundListener
  { bsoundlistener_id :: ID {- struct ID -}
  , bsoundlistener_gain :: Float {- float -}
  , bsoundlistener_dopplerfactor :: Float {- float -}
  , bsoundlistener_dopplervelocity :: Float {- float -}
  , bsoundlistener_numsoundsblender :: Int16 {- short -}
  , bsoundlistener_numsoundsgameengine :: Int16 {- short -}
  }
  deriving Show

data SpaceSound = SpaceSound
  { spacesound_next :: Integer {- struct SpaceLink * -}
  , spacesound_prev :: Integer {- struct SpaceLink * -}
  , spacesound_spacetype :: Int32 {- int -}
  , spacesound_blockscale :: Float {- float -}
  , spacesound_area :: Integer {- struct ScrArea * -}
  , spacesound_v2d :: View2D {- struct View2D -}
  , spacesound_sound :: Integer {- struct bSound * -}
  , spacesound_mode :: Int16 {- short -}
  , spacesound_sndnr :: Int16 {- short -}
  , spacesound_xof :: Int16 {- short -}
  , spacesound_yof :: Int16 {- short -}
  , spacesound_flag :: Int16 {- short -}
  , spacesound_lock :: Int16 {- short -}
  , spacesound_pad2 :: Int32 {- int -}
  }
  deriving Show

data GroupObject = GroupObject
  { groupobject_next :: Integer {- struct GroupObject * -}
  , groupobject_prev :: Integer {- struct GroupObject * -}
  , groupobject_ob :: Integer {- struct Object * -}
  , groupobject_lampren :: Integer {- void * * -}
  , groupobject_recalc :: Int32 {- int -}
  , groupobject_pad :: Int32 {- int -}
  }
  deriving Show

data Group = Group
  { group_id :: ID {- struct ID -}
  , group_gobject :: ListBase {- struct ListBase -}
  , group_layer :: Int32 {- int -}
  , group_pad :: Int32 {- int -}
  }
  deriving Show

data Bone = Bone
  { bone_next :: Integer {- struct Bone * -}
  , bone_prev :: Integer {- struct Bone * -}
  , bone_parent :: Integer {- struct Bone * -}
  , bone_childbase :: ListBase {- struct ListBase -}
  , bone_name :: ByteString {- char[32] -}
  , bone_roll :: Float {- float -}
  , bone_head :: [Float {- float -}] {- float[3] -}
  , bone_tail :: [Float {- float -}] {- float[3] -}
  , bone_bone_mat :: [[Float {- float -}] {- float[3] -}] {- float [3][3] -}
  , bone_flag :: Int32 {- int -}
  , bone_arm_head :: [Float {- float -}] {- float[3] -}
  , bone_arm_tail :: [Float {- float -}] {- float[3] -}
  , bone_arm_mat :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , bone_dist :: Float {- float -}
  , bone_weight :: Float {- float -}
  , bone_xwidth :: Float {- float -}
  , bone_length :: Float {- float -}
  , bone_zwidth :: Float {- float -}
  , bone_ease1 :: Float {- float -}
  , bone_ease2 :: Float {- float -}
  , bone_rad_head :: Float {- float -}
  , bone_rad_tail :: Float {- float -}
  , bone_size :: [Float {- float -}] {- float[3] -}
  , bone_layer :: Int16 {- short -}
  , bone_segments :: Int16 {- short -}
  }
  deriving Show

data BArmature = BArmature
  { barmature_id :: ID {- struct ID -}
  , barmature_bonebase :: ListBase {- struct ListBase -}
  , barmature_chainbase :: ListBase {- struct ListBase -}
  , barmature_flag :: Int32 {- int -}
  , barmature_drawtype :: Int32 {- int -}
  , barmature_deformflag :: Int16 {- short -}
  , barmature_pathflag :: Int16 {- short -}
  , barmature_layer :: Int16 {- short -}
  , barmature_layer_protected :: Int16 {- short -}
  , barmature_ghostep :: Int16 {- short -}
  , barmature_ghostsize :: Int16 {- short -}
  , barmature_ghosttype :: Int16 {- short -}
  , barmature_pathsize :: Int16 {- short -}
  , barmature_ghostsf :: Int32 {- int -}
  , barmature_ghostef :: Int32 {- int -}
  , barmature_pathsf :: Int32 {- int -}
  , barmature_pathef :: Int32 {- int -}
  }
  deriving Show

data BPoseChannel = BPoseChannel
  { bposechannel_next :: Integer {- struct bPoseChannel * -}
  , bposechannel_prev :: Integer {- struct bPoseChannel * -}
  , bposechannel_constraints :: ListBase {- struct ListBase -}
  , bposechannel_name :: ByteString {- char[32] -}
  , bposechannel_flag :: Int16 {- short -}
  , bposechannel_constflag :: Int16 {- short -}
  , bposechannel_ikflag :: Int16 {- short -}
  , bposechannel_selectflag :: Int16 {- short -}
  , bposechannel_protectflag :: Int16 {- short -}
  , bposechannel_pad2 :: Int16 {- short -}
  , bposechannel_pathlen :: Int32 {- int -}
  , bposechannel_pathsf :: Int32 {- int -}
  , bposechannel_pathef :: Int32 {- int -}
  , bposechannel_bone :: Integer {- struct Bone * -}
  , bposechannel_parent :: Integer {- struct bPoseChannel * -}
  , bposechannel_child :: Integer {- struct bPoseChannel * -}
  , bposechannel_iktree :: ListBase {- struct ListBase -}
  , bposechannel_b_bone_mats :: Integer {- void * * -}
  , bposechannel_loc :: [Float {- float -}] {- float[3] -}
  , bposechannel_size :: [Float {- float -}] {- float[3] -}
  , bposechannel_quat :: [Float {- float -}] {- float[4] -}
  , bposechannel_chan_mat :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , bposechannel_pose_mat :: [[Float {- float -}] {- float[4] -}] {- float [4][4] -}
  , bposechannel_pose_head :: [Float {- float -}] {- float[3] -}
  , bposechannel_pose_tail :: [Float {- float -}] {- float[3] -}
  , bposechannel_limitmin :: [Float {- float -}] {- float[3] -}
  , bposechannel_limitmax :: [Float {- float -}] {- float[3] -}
  , bposechannel_stiffness :: [Float {- float -}] {- float[3] -}
  , bposechannel_ikstretch :: Float {- float -}
  , bposechannel_path :: Integer {- float * -}
  , bposechannel_custom :: Integer {- struct Object * -}
  }
  deriving Show

data BPose = BPose
  { bpose_chanbase :: ListBase {- struct ListBase -}
  , bpose_flag :: Int16 {- short -}
  , bpose_proxy_layer :: Int16 {- short -}
  , bpose_ctime :: Float {- float -}
  , bpose_stride_offset :: [Float {- float -}] {- float[3] -}
  , bpose_cyclic_offset :: [Float {- float -}] {- float[3] -}
  }
  deriving Show

data BActionChannel = BActionChannel
  { bactionchannel_next :: Integer {- struct bActionChannel * -}
  , bactionchannel_prev :: Integer {- struct bActionChannel * -}
  , bactionchannel_ipo :: Integer {- struct Ipo * -}
  , bactionchannel_constraintChannels :: ListBase {- struct ListBase -}
  , bactionchannel_flag :: Int32 {- int -}
  , bactionchannel_name :: ByteString {- char[32] -}
  , bactionchannel_reserved1 :: Int32 {- int -}
  }
  deriving Show

data BAction = BAction
  { baction_id :: ID {- struct ID -}
  , baction_chanbase :: ListBase {- struct ListBase -}
  }
  deriving Show

data SpaceAction = SpaceAction
  { spaceaction_next :: Integer {- struct SpaceLink * -}
  , spaceaction_prev :: Integer {- struct SpaceLink * -}
  , spaceaction_spacetype :: Int32 {- int -}
  , spaceaction_blockscale :: Float {- float -}
  , spaceaction_area :: Integer {- struct ScrArea * -}
  , spaceaction_blockhandler :: [Int16 {- short -}] {- short[8] -}
  , spaceaction_v2d :: View2D {- struct View2D -}
  , spaceaction_action :: Integer {- struct bAction * -}
  , spaceaction_flag :: Int16 {- short -}
  , spaceaction_autosnap :: Int16 {- short -}
  , spaceaction_pin :: Int16 {- short -}
  , spaceaction_actnr :: Int16 {- short -}
  , spaceaction_lock :: Int16 {- short -}
  , spaceaction_actwidth :: Int16 {- short -}
  , spaceaction_timeslide :: Float {- float -}
  }
  deriving Show

data BConstraintChannel = BConstraintChannel
  { bconstraintchannel_next :: Integer {- struct bConstraintChannel * -}
  , bconstraintchannel_prev :: Integer {- struct bConstraintChannel * -}
  , bconstraintchannel_ipo :: Integer {- struct Ipo * -}
  , bconstraintchannel_flag :: Int16 {- short -}
  , bconstraintchannel_name :: ByteString {- char[30] -}
  }
  deriving Show

data BConstraint = BConstraint
  { bconstraint_next :: Integer {- struct bConstraint * -}
  , bconstraint_prev :: Integer {- struct bConstraint * -}
  , bconstraint_data :: Integer {- void * * -}
  , bconstraint_type :: Int16 {- short -}
  , bconstraint_flag :: Int16 {- short -}
  , bconstraint_reserved1 :: Int16 {- short -}
  , bconstraint_name :: ByteString {- char[30] -}
  , bconstraint_enforce :: Float {- float -}
  }
  deriving Show

data BKinematicConstraint = BKinematicConstraint
  { bkinematicconstraint_tar :: Integer {- struct Object * -}
  , bkinematicconstraint_iterations :: Int16 {- short -}
  , bkinematicconstraint_flag :: Int16 {- short -}
  , bkinematicconstraint_rootbone :: Int32 {- int -}
  , bkinematicconstraint_subtarget :: ByteString {- char[32] -}
  , bkinematicconstraint_weight :: Float {- float -}
  , bkinematicconstraint_orientweight :: Float {- float -}
  , bkinematicconstraint_grabtarget :: [Float {- float -}] {- float[3] -}
  , bkinematicconstraint_pad :: Int32 {- int -}
  }
  deriving Show

data BTrackToConstraint = BTrackToConstraint
  { btracktoconstraint_tar :: Integer {- struct Object * -}
  , btracktoconstraint_reserved1 :: Int32 {- int -}
  , btracktoconstraint_reserved2 :: Int32 {- int -}
  , btracktoconstraint_flags :: Int32 {- int -}
  , btracktoconstraint_pad :: Int32 {- int -}
  , btracktoconstraint_subtarget :: ByteString {- char[32] -}
  }
  deriving Show

data BRotateLikeConstraint = BRotateLikeConstraint
  { brotatelikeconstraint_tar :: Integer {- struct Object * -}
  , brotatelikeconstraint_flag :: Int32 {- int -}
  , brotatelikeconstraint_reserved1 :: Int32 {- int -}
  , brotatelikeconstraint_subtarget :: ByteString {- char[32] -}
  }
  deriving Show

data BLocateLikeConstraint = BLocateLikeConstraint
  { blocatelikeconstraint_tar :: Integer {- struct Object * -}
  , blocatelikeconstraint_flag :: Int32 {- int -}
  , blocatelikeconstraint_reserved1 :: Int32 {- int -}
  , blocatelikeconstraint_subtarget :: ByteString {- char[32] -}
  }
  deriving Show

data BMinMaxConstraint = BMinMaxConstraint
  { bminmaxconstraint_tar :: Integer {- struct Object * -}
  , bminmaxconstraint_minmaxflag :: Int32 {- int -}
  , bminmaxconstraint_offset :: Float {- float -}
  , bminmaxconstraint_flag :: Int32 {- int -}
  , bminmaxconstraint_sticky :: Int16 {- short -}
  , bminmaxconstraint_stuck :: Int16 {- short -}
  , bminmaxconstraint_pad1 :: Int16 {- short -}
  , bminmaxconstraint_pad2 :: Int16 {- short -}
  , bminmaxconstraint_cache :: [Float {- float -}] {- float[3] -}
  , bminmaxconstraint_subtarget :: ByteString {- char[32] -}
  }
  deriving Show

data BSizeLikeConstraint = BSizeLikeConstraint
  { bsizelikeconstraint_tar :: Integer {- struct Object * -}
  , bsizelikeconstraint_flag :: Int32 {- int -}
  , bsizelikeconstraint_reserved1 :: Int32 {- int -}
  , bsizelikeconstraint_subtarget :: ByteString {- char[32] -}
  }
  deriving Show

data BActionConstraint = BActionConstraint
  { bactionconstraint_tar :: Integer {- struct Object * -}
  , bactionconstraint_type :: Int16 {- short -}
  , bactionconstraint_local :: Int16 {- short -}
  , bactionconstraint_start :: Int32 {- int -}
  , bactionconstraint_end :: Int32 {- int -}
  , bactionconstraint_min :: Float {- float -}
  , bactionconstraint_max :: Float {- float -}
  , bactionconstraint_pad :: Int32 {- int -}
  , bactionconstraint_act :: Integer {- struct bAction * -}
  , bactionconstraint_subtarget :: ByteString {- char[32] -}
  }
  deriving Show

data BLockTrackConstraint = BLockTrackConstraint
  { blocktrackconstraint_tar :: Integer {- struct Object * -}
  , blocktrackconstraint_trackflag :: Int32 {- int -}
  , blocktrackconstraint_lockflag :: Int32 {- int -}
  , blocktrackconstraint_subtarget :: ByteString {- char[32] -}
  }
  deriving Show

data BFollowPathConstraint = BFollowPathConstraint
  { bfollowpathconstraint_tar :: Integer {- struct Object * -}
  , bfollowpathconstraint_offset :: Float {- float -}
  , bfollowpathconstraint_followflag :: Int32 {- int -}
  , bfollowpathconstraint_trackflag :: Int32 {- int -}
  , bfollowpathconstraint_upflag :: Int32 {- int -}
  }
  deriving Show

data BDistanceLimitConstraint = BDistanceLimitConstraint
  { bdistancelimitconstraint_tar :: Integer {- struct Object * -}
  , bdistancelimitconstraint_subtarget :: ByteString {- char[32] -}
  , bdistancelimitconstraint_pad1 :: Float {- float -}
  , bdistancelimitconstraint_pad2 :: Float {- float -}
  , bdistancelimitconstraint_distance :: Float {- float -}
  , bdistancelimitconstraint_offset :: [Float {- float -}] {- float[3] -}
  }
  deriving Show

data BRotationConstraint = BRotationConstraint
  { brotationconstraint_xmin :: Float {- float -}
  , brotationconstraint_xmax :: Float {- float -}
  , brotationconstraint_ymin :: Float {- float -}
  , brotationconstraint_ymax :: Float {- float -}
  , brotationconstraint_zmin :: Float {- float -}
  , brotationconstraint_zmax :: Float {- float -}
  }
  deriving Show

data BStretchToConstraint = BStretchToConstraint
  { bstretchtoconstraint_tar :: Integer {- struct Object * -}
  , bstretchtoconstraint_volmode :: Int32 {- int -}
  , bstretchtoconstraint_plane :: Int32 {- int -}
  , bstretchtoconstraint_orglength :: Float {- float -}
  , bstretchtoconstraint_bulge :: Float {- float -}
  , bstretchtoconstraint_subtarget :: ByteString {- char[32] -}
  }
  deriving Show

data BLocLimitConstraint = BLocLimitConstraint
  { bloclimitconstraint_xmin :: Float {- float -}
  , bloclimitconstraint_xmax :: Float {- float -}
  , bloclimitconstraint_ymin :: Float {- float -}
  , bloclimitconstraint_ymax :: Float {- float -}
  , bloclimitconstraint_zmin :: Float {- float -}
  , bloclimitconstraint_zmax :: Float {- float -}
  , bloclimitconstraint_flag :: Int16 {- short -}
  , bloclimitconstraint_flag2 :: Int16 {- short -}
  }
  deriving Show

data BRotLimitConstraint = BRotLimitConstraint
  { brotlimitconstraint_xmin :: Float {- float -}
  , brotlimitconstraint_xmax :: Float {- float -}
  , brotlimitconstraint_ymin :: Float {- float -}
  , brotlimitconstraint_ymax :: Float {- float -}
  , brotlimitconstraint_zmin :: Float {- float -}
  , brotlimitconstraint_zmax :: Float {- float -}
  , brotlimitconstraint_flag :: Int16 {- short -}
  , brotlimitconstraint_pad1 :: Int16 {- short -}
  }
  deriving Show

data BSizeLimitConstraint = BSizeLimitConstraint
  { bsizelimitconstraint_xmin :: Float {- float -}
  , bsizelimitconstraint_xmax :: Float {- float -}
  , bsizelimitconstraint_ymin :: Float {- float -}
  , bsizelimitconstraint_ymax :: Float {- float -}
  , bsizelimitconstraint_zmin :: Float {- float -}
  , bsizelimitconstraint_zmax :: Float {- float -}
  , bsizelimitconstraint_flag :: Int16 {- short -}
  , bsizelimitconstraint_pad1 :: Int16 {- short -}
  }
  deriving Show

data BRigidBodyJointConstraint = BRigidBodyJointConstraint
  { brigidbodyjointconstraint_tar :: Integer {- struct Object * -}
  , brigidbodyjointconstraint_child :: Integer {- struct Object * -}
  , brigidbodyjointconstraint_type :: Int32 {- int -}
  , brigidbodyjointconstraint_pivX :: Float {- float -}
  , brigidbodyjointconstraint_pivY :: Float {- float -}
  , brigidbodyjointconstraint_pivZ :: Float {- float -}
  , brigidbodyjointconstraint_axX :: Float {- float -}
  , brigidbodyjointconstraint_axY :: Float {- float -}
  , brigidbodyjointconstraint_axZ :: Float {- float -}
  , brigidbodyjointconstraint_minLimit :: [Float {- float -}] {- float[6] -}
  , brigidbodyjointconstraint_maxLimit :: [Float {- float -}] {- float[6] -}
  , brigidbodyjointconstraint_extraFz :: Float {- float -}
  , brigidbodyjointconstraint_flag :: Int16 {- short -}
  , brigidbodyjointconstraint_pad :: Int16 {- short -}
  , brigidbodyjointconstraint_pad1 :: Int16 {- short -}
  , brigidbodyjointconstraint_pad2 :: Int16 {- short -}
  }
  deriving Show

data BClampToConstraint = BClampToConstraint
  { bclamptoconstraint_tar :: Integer {- struct Object * -}
  , bclamptoconstraint_flag :: Int32 {- int -}
  , bclamptoconstraint_pad :: Int32 {- int -}
  }
  deriving Show

data BActionModifier = BActionModifier
  { bactionmodifier_next :: Integer {- struct bActionModifier * -}
  , bactionmodifier_prev :: Integer {- struct bActionModifier * -}
  , bactionmodifier_type :: Int16 {- short -}
  , bactionmodifier_flag :: Int16 {- short -}
  , bactionmodifier_channel :: ByteString {- char[32] -}
  , bactionmodifier_noisesize :: Float {- float -}
  , bactionmodifier_turbul :: Float {- float -}
  , bactionmodifier_channels :: Int16 {- short -}
  , bactionmodifier_no_rot_axis :: Int16 {- short -}
  , bactionmodifier_ob :: Integer {- struct Object * -}
  }
  deriving Show

data BActionStrip = BActionStrip
  { bactionstrip_next :: Integer {- struct bActionStrip * -}
  , bactionstrip_prev :: Integer {- struct bActionStrip * -}
  , bactionstrip_flag :: Int16 {- short -}
  , bactionstrip_mode :: Int16 {- short -}
  , bactionstrip_stride_axis :: Int16 {- short -}
  , bactionstrip_curmod :: Int16 {- short -}
  , bactionstrip_ipo :: Integer {- struct Ipo * -}
  , bactionstrip_act :: Integer {- struct bAction * -}
  , bactionstrip_object :: Integer {- struct Object * -}
  , bactionstrip_start :: Float {- float -}
  , bactionstrip_end :: Float {- float -}
  , bactionstrip_actstart :: Float {- float -}
  , bactionstrip_actend :: Float {- float -}
  , bactionstrip_actoffs :: Float {- float -}
  , bactionstrip_padf :: Float {- float -}
  , bactionstrip_stridelen :: Float {- float -}
  , bactionstrip_repeat :: Float {- float -}
  , bactionstrip_blendin :: Float {- float -}
  , bactionstrip_blendout :: Float {- float -}
  , bactionstrip_stridechannel :: ByteString {- char[32] -}
  , bactionstrip_offs_bone :: ByteString {- char[32] -}
  , bactionstrip_modifiers :: ListBase {- struct ListBase -}
  }
  deriving Show

data BNodeStack = BNodeStack
  { bnodestack_vec :: [Float {- float -}] {- float[4] -}
  , bnodestack_min :: Float {- float -}
  , bnodestack_max :: Float {- float -}
  , bnodestack_data :: Integer {- void * * -}
  , bnodestack_hasinput :: Int16 {- short -}
  , bnodestack_hasoutput :: Int16 {- short -}
  , bnodestack_datatype :: Int16 {- short -}
  , bnodestack_sockettype :: Int16 {- short -}
  }
  deriving Show

data BNodeSocket = BNodeSocket
  { bnodesocket_next :: Integer {- struct bNodeSocket * -}
  , bnodesocket_prev :: Integer {- struct bNodeSocket * -}
  , bnodesocket_name :: ByteString {- char[32] -}
  , bnodesocket_ns :: BNodeStack {- struct bNodeStack -}
  , bnodesocket_type :: Int16 {- short -}
  , bnodesocket_flag :: Int16 {- short -}
  , bnodesocket_limit :: Int16 {- short -}
  , bnodesocket_stack_index :: Int16 {- short -}
  , bnodesocket_intern :: Int16 {- short -}
  , bnodesocket_stack_index_ext :: Int16 {- short -}
  , bnodesocket_pad1 :: Int32 {- int -}
  , bnodesocket_locx :: Float {- float -}
  , bnodesocket_locy :: Float {- float -}
  , bnodesocket_own_index :: Int32 {- int -}
  , bnodesocket_to_index :: Int32 {- int -}
  , bnodesocket_tosock :: Integer {- struct bNodeSocket * -}
  , bnodesocket_link :: Integer {- struct bNodeLink * -}
  }
  deriving Show

data BNode = BNode
  { bnode_next :: Integer {- struct bNode * -}
  , bnode_prev :: Integer {- struct bNode * -}
  , bnode_new_node :: Integer {- struct bNode * -}
  , bnode_name :: ByteString {- char[32] -}
  , bnode_type :: Int16 {- short -}
  , bnode_flag :: Int16 {- short -}
  , bnode_done :: Int16 {- short -}
  , bnode_level :: Int16 {- short -}
  , bnode_lasty :: Int16 {- short -}
  , bnode_menunr :: Int16 {- short -}
  , bnode_stack_index :: Int16 {- short -}
  , bnode_nr :: Int16 {- short -}
  , bnode_inputs :: ListBase {- struct ListBase -}
  , bnode_outputs :: ListBase {- struct ListBase -}
  , bnode_id :: Integer {- struct ID * -}
  , bnode_storage :: Integer {- void * * -}
  , bnode_locx :: Float {- float -}
  , bnode_locy :: Float {- float -}
  , bnode_width :: Float {- float -}
  , bnode_miniwidth :: Float {- float -}
  , bnode_custom1 :: Int16 {- short -}
  , bnode_custom2 :: Int16 {- short -}
  , bnode_need_exec :: Int16 {- short -}
  , bnode_exec :: Int16 {- short -}
  , bnode_totr :: Rctf {- struct rctf -}
  , bnode_butr :: Rctf {- struct rctf -}
  , bnode_prvr :: Rctf {- struct rctf -}
  , bnode_preview :: Integer {- struct bNodePreview /* undefined */ * -}
  , bnode_typeinfo :: Integer {- struct bNodeType /* undefined */ * -}
  }
  deriving Show

data BNodeLink = BNodeLink
  { bnodelink_next :: Integer {- struct bNodeLink * -}
  , bnodelink_prev :: Integer {- struct bNodeLink * -}
  , bnodelink_fromnode :: Integer {- struct bNode * -}
  , bnodelink_tonode :: Integer {- struct bNode * -}
  , bnodelink_fromsock :: Integer {- struct bNodeSocket * -}
  , bnodelink_tosock :: Integer {- struct bNodeSocket * -}
  }
  deriving Show

data BNodeTree = BNodeTree
  { bnodetree_id :: ID {- struct ID -}
  , bnodetree_nodes :: ListBase {- struct ListBase -}
  , bnodetree_links :: ListBase {- struct ListBase -}
  , bnodetree_stack :: Integer {- struct bNodeStack * * -}
  , bnodetree_type :: Int32 {- int -}
  , bnodetree_init :: Int32 {- int -}
  , bnodetree_stacksize :: Int32 {- int -}
  , bnodetree_cur_index :: Int32 {- int -}
  , bnodetree_alltypes :: ListBase {- struct ListBase -}
  , bnodetree_owntype :: Integer {- struct bNodeType /* undefined */ * -}
  , bnodetree_timecursor :: Integer {- void * (*xxx)() -}
  , bnodetree_stats_draw :: Integer {- void * (*xxx)() -}
  , bnodetree_test_break :: Integer {- int (*xxx)() -}
  }
  deriving Show

data NodeImageAnim = NodeImageAnim
  { nodeimageanim_frames :: Int32 {- int -}
  , nodeimageanim_sfra :: Int32 {- int -}
  , nodeimageanim_nr :: Int32 {- int -}
  , nodeimageanim_cyclic :: Int8 {- char -}
  , nodeimageanim_movie :: Int8 {- char -}
  , nodeimageanim_pad :: Int16 {- short -}
  }
  deriving Show

data NodeBlurData = NodeBlurData
  { nodeblurdata_sizex :: Int16 {- short -}
  , nodeblurdata_sizey :: Int16 {- short -}
  , nodeblurdata_samples :: Int16 {- short -}
  , nodeblurdata_maxspeed :: Int16 {- short -}
  , nodeblurdata_minspeed :: Int16 {- short -}
  , nodeblurdata_pad1 :: Int16 {- short -}
  , nodeblurdata_fac :: Float {- float -}
  , nodeblurdata_filtertype :: Int16 {- short -}
  , nodeblurdata_bokeh :: Int8 {- char -}
  , nodeblurdata_gamma :: Int8 {- char -}
  , nodeblurdata_pad2 :: Int32 {- int -}
  }
  deriving Show

data NodeHueSat = NodeHueSat
  { nodehuesat_hue :: Float {- float -}
  , nodehuesat_sat :: Float {- float -}
  , nodehuesat_val :: Float {- float -}
  }
  deriving Show

data NodeImageFile = NodeImageFile
  { nodeimagefile_name :: ByteString {- char[256] -}
  , nodeimagefile_imtype :: Int16 {- short -}
  , nodeimagefile_subimtype :: Int16 {- short -}
  , nodeimagefile_quality :: Int16 {- short -}
  , nodeimagefile_codec :: Int16 {- short -}
  , nodeimagefile_sfra :: Int32 {- int -}
  , nodeimagefile_efra :: Int32 {- int -}
  }
  deriving Show

data NodeChroma = NodeChroma
  { nodechroma_t1 :: Float {- float -}
  , nodechroma_t2 :: Float {- float -}
  , nodechroma_t3 :: Float {- float -}
  , nodechroma_fsize :: Float {- float -}
  , nodechroma_fstrength :: Float {- float -}
  , nodechroma_falpha :: Float {- float -}
  , nodechroma_key :: [Float {- float -}] {- float[4] -}
  }
  deriving Show

data NodeGeometry = NodeGeometry
  { nodegeometry_uvname :: ByteString {- char[32] -}
  , nodegeometry_colname :: ByteString {- char[32] -}
  }
  deriving Show

data NodeVertexCol = NodeVertexCol
  { nodevertexcol_name :: ByteString {- char[32] -}
  }
  deriving Show

data NodeDefocus = NodeDefocus
  { nodedefocus_bktype :: Int8 {- char -}
  , nodedefocus_rotation :: Int8 {- char -}
  , nodedefocus_preview :: Int8 {- char -}
  , nodedefocus_gamco :: Int8 {- char -}
  , nodedefocus_samples :: Int16 {- short -}
  , nodedefocus_no_zbuf :: Int16 {- short -}
  , nodedefocus_fstop :: Float {- float -}
  , nodedefocus_maxblur :: Float {- float -}
  , nodedefocus_bthresh :: Float {- float -}
  , nodedefocus_scale :: Float {- float -}
  }
  deriving Show

data CurveMapPoint = CurveMapPoint
  { curvemappoint_x :: Float {- float -}
  , curvemappoint_y :: Float {- float -}
  , curvemappoint_flag :: Int16 {- short -}
  , curvemappoint_shorty :: Int16 {- short -}
  }
  deriving Show

data CurveMap = CurveMap
  { curvemap_totpoint :: Int16 {- short -}
  , curvemap_flag :: Int16 {- short -}
  , curvemap_range :: Float {- float -}
  , curvemap_mintable :: Float {- float -}
  , curvemap_maxtable :: Float {- float -}
  , curvemap_ext_in :: [Float {- float -}] {- float[2] -}
  , curvemap_ext_out :: [Float {- float -}] {- float[2] -}
  , curvemap_curve :: Integer {- struct CurveMapPoint * -}
  , curvemap_table :: Integer {- struct CurveMapPoint * -}
  , curvemap_premultable :: Integer {- struct CurveMapPoint * -}
  }
  deriving Show

data CurveMapping = CurveMapping
  { curvemapping_flag :: Int32 {- int -}
  , curvemapping_cur :: Int32 {- int -}
  , curvemapping_curr :: Rctf {- struct rctf -}
  , curvemapping_clipr :: Rctf {- struct rctf -}
  , curvemapping_cm :: [CurveMap {- struct CurveMap -}] {- struct CurveMap[4] -}
  , curvemapping_black :: [Float {- float -}] {- float[3] -}
  , curvemapping_white :: [Float {- float -}] {- float[3] -}
  , curvemapping_bwmul :: [Float {- float -}] {- float[3] -}
  , curvemapping_padf :: Float {- float -}
  }
  deriving Show

data BrushClone = BrushClone
  { brushclone_image :: Integer {- struct Image * -}
  , brushclone_offset :: [Float {- float -}] {- float[2] -}
  , brushclone_alpha :: Float {- float -}
  , brushclone_pad :: Float {- float -}
  }
  deriving Show

data Brush = Brush
  { brush_id :: ID {- struct ID -}
  , brush_flag :: Int16 {- short -}
  , brush_blend :: Int16 {- short -}
  , brush_size :: Int32 {- int -}
  , brush_innerradius :: Float {- float -}
  , brush_spacing :: Float {- float -}
  , brush_rate :: Float {- float -}
  , brush_rgb :: [Float {- float -}] {- float[3] -}
  , brush_alpha :: Float {- float -}
  , brush_texact :: Int16 {- short -}
  , brush_pad :: Int16 {- short -}
  , brush_mtex :: [Integer {- struct MTex * -}] {- struct MTex *[10] -}
  , brush_clone :: BrushClone {- struct BrushClone -}
  }
  deriving Show

data CustomDataLayer = CustomDataLayer
  { customdatalayer_type :: Int32 {- int -}
  , customdatalayer_offset :: Int32 {- int -}
  , customdatalayer_flag :: Int32 {- int -}
  , customdatalayer_active :: Int32 {- int -}
  , customdatalayer_active_rnd :: Int32 {- int -}
  , customdatalayer_pad :: ByteString {- char[4] -}
  , customdatalayer_name :: ByteString {- char[32] -}
  , customdatalayer_data :: Integer {- void * * -}
  }
  deriving Show

data CustomData = CustomData
  { customdata_layers :: Integer {- struct CustomDataLayer * -}
  , customdata_totlayer :: Int32 {- int -}
  , customdata_maxlayer :: Int32 {- int -}
  , customdata_totsize :: Int32 {- int -}
  , customdata_pad :: Int32 {- int -}
  }
  deriving Show

getLink :: BHeader -> Get Link
getLink h = do
  _1 <- getPointer h {- struct Link * -}
  _2 <- getPointer h {- struct Link * -}
  return $ Link _1 _2
getListBase :: BHeader -> Get ListBase
getListBase h = do
  _1 <- getPointer h {- void * * -}
  _2 <- getPointer h {- void * * -}
  return $ ListBase _1 _2
getVec2s :: BHeader -> Get Vec2s
getVec2s h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  return $ Vec2s _1 _2
getVec2i :: BHeader -> Get Vec2i
getVec2i h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  return $ Vec2i _1 _2
getVec2f :: BHeader -> Get Vec2f
getVec2f h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  return $ Vec2f _1 _2
getVec2d :: BHeader -> Get Vec2d
getVec2d h = do
  _1 <- getDouble h {- double -}
  _2 <- getDouble h {- double -}
  return $ Vec2d _1 _2
getVec3i :: BHeader -> Get Vec3i
getVec3i h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  return $ Vec3i _1 _2 _3
getVec3f :: BHeader -> Get Vec3f
getVec3f h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  return $ Vec3f _1 _2 _3
getVec3d :: BHeader -> Get Vec3d
getVec3d h = do
  _1 <- getDouble h {- double -}
  _2 <- getDouble h {- double -}
  _3 <- getDouble h {- double -}
  return $ Vec3d _1 _2 _3
getVec4i :: BHeader -> Get Vec4i
getVec4i h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  return $ Vec4i _1 _2 _3 _4
getVec4f :: BHeader -> Get Vec4f
getVec4f h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  return $ Vec4f _1 _2 _3 _4
getVec4d :: BHeader -> Get Vec4d
getVec4d h = do
  _1 <- getDouble h {- double -}
  _2 <- getDouble h {- double -}
  _3 <- getDouble h {- double -}
  _4 <- getDouble h {- double -}
  return $ Vec4d _1 _2 _3 _4
getRcti :: BHeader -> Get Rcti
getRcti h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  return $ Rcti _1 _2 _3 _4
getRctf :: BHeader -> Get Rctf
getRctf h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  return $ Rctf _1 _2 _3 _4
getIDPropertyData :: BHeader -> Get IDPropertyData
getIDPropertyData h = do
  _1 <- getPointer h {- void * * -}
  _2 <- getListBase h {- struct ListBase -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  return $ IDPropertyData _1 _2 _3 _4
getIDProperty :: BHeader -> Get IDProperty
getIDProperty h = do
  _1 <- getPointer h {- struct IDProperty * -}
  _2 <- getPointer h {- struct IDProperty * -}
  _3 <- getByteString 32 {- char[32] -}
  _4 <- get {- char -}
  _5 <- get {- char -}
  _6 <- getShort h {- short -}
  _7 <- getInt h {- int -}
  _8 <- getIDPropertyData h {- struct IDPropertyData -}
  _9 <- getInt h {- int -}
  _10 <- getInt h {- int -}
  return $ IDProperty _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getID :: BHeader -> Get ID
getID h = do
  _1 <- getPointer h {- void * * -}
  _2 <- getPointer h {- void * * -}
  _3 <- getPointer h {- struct ID * -}
  _4 <- getPointer h {- struct Library * -}
  _5 <- getByteString 24 {- char[24] -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getInt h {- int -}
  _9 <- getPointer h {- struct IDProperty * -}
  return $ ID _1 _2 _3 _4 _5 _6 _7 _8 _9
getLibrary :: BHeader -> Get Library
getLibrary h = do
  _1 <- getID h {- struct ID -}
  _2 <- getPointer h {- struct ID * -}
  _3 <- getPointer h {- UnknownCompound FileData  -}
  _4 <- getByteString 240 {- char[240] -}
  _5 <- getByteString 240 {- char[240] -}
  _6 <- getInt h {- int -}
  _7 <- getInt h {- int -}
  _8 <- getPointer h {- struct Library * -}
  return $ Library _1 _2 _3 _4 _5 _6 _7 _8
getIpo :: BHeader -> Get Ipo
getIpo h = do
  _1 <- getID h {- struct ID -}
  _2 <- getListBase h {- struct ListBase -}
  _3 <- getRctf h {- struct rctf -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getInt h {- int -}
  return $ Ipo _1 _2 _3 _4 _5 _6
getKeyBlock :: BHeader -> Get KeyBlock
getKeyBlock h = do
  _1 <- getPointer h {- struct KeyBlock * -}
  _2 <- getPointer h {- struct KeyBlock * -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getInt h {- int -}
  _8 <- getPointer h {- void * * -}
  _9 <- getPointer h {- float * -}
  _10 <- getByteString 32 {- char[32] -}
  _11 <- getByteString 32 {- char[32] -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  return $ KeyBlock _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13
getKey :: BHeader -> Get Key
getKey h = do
  _1 <- getID h {- struct ID -}
  _2 <- getPointer h {- struct KeyBlock * -}
  _3 <- getByteString 32 {- char[32] -}
  _4 <- getInt h {- int -}
  _5 <- getFloat h {- float -}
  _6 <- getListBase h {- struct ListBase -}
  _7 <- getPointer h {- struct Ipo * -}
  _8 <- getPointer h {- struct ID * -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  return $ Key _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12
getScriptLink :: BHeader -> Get ScriptLink
getScriptLink h = do
  _1 <- getPointer h {- struct ID * * -}
  _2 <- getPointer h {- short * -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getInt h {- int -}
  return $ ScriptLink _1 _2 _3 _4 _5
getTextLine :: BHeader -> Get TextLine
getTextLine h = do
  _1 <- getPointer h {- struct TextLine * -}
  _2 <- getPointer h {- struct TextLine * -}
  _3 <- getPointer h {- char * -}
  _4 <- getPointer h {- char * -}
  _5 <- getInt h {- int -}
  _6 <- getInt h {- int -}
  return $ TextLine _1 _2 _3 _4 _5 _6
getText :: BHeader -> Get Text
getText h = do
  _1 <- getID h {- struct ID -}
  _2 <- getPointer h {- char * -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getListBase h {- struct ListBase -}
  _6 <- getPointer h {- struct TextLine * -}
  _7 <- getPointer h {- struct TextLine * -}
  _8 <- getInt h {- int -}
  _9 <- getInt h {- int -}
  _10 <- getPointer h {- char * -}
  _11 <- getInt h {- int -}
  _12 <- getInt h {- int -}
  _13 <- getPointer h {- void * * -}
  return $ Text _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13
getPackedFile :: BHeader -> Get PackedFile
getPackedFile h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getPointer h {- void * * -}
  return $ PackedFile _1 _2 _3 _4 _5
getCamera :: BHeader -> Get Camera
getCamera h = do
  _1 <- getID h {- struct ID -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  _11 <- getFloat h {- float -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getShort h {- short -}
  _16 <- getShort h {- short -}
  _17 <- getFloat h {- float -}
  _18 <- getPointer h {- struct Ipo * -}
  _19 <- getScriptLink h {- struct ScriptLink -}
  return $ Camera _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19
getPreviewImage :: BHeader -> Get PreviewImage
getPreviewImage h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getPointer h {- int * -}
  return $ PreviewImage _1 _2 _3
getImageUser :: BHeader -> Get ImageUser
getImageUser h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  return $ ImageUser _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12
getImage :: BHeader -> Get Image
getImage h = do
  _1 <- getID h {- struct ID -}
  _2 <- getByteString 240 {- char[240] -}
  _3 <- getListBase h {- struct ListBase -}
  _4 <- getPointer h {- UnknownCompound anim  -}
  _5 <- getPointer h {- UnknownCompound RenderResult  -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getInt h {- int -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- getShort h {- short -}
  _16 <- getShort h {- short -}
  _17 <- getShort h {- short -}
  _18 <- getShort h {- short -}
  _19 <- getInt h {- int -}
  _20 <- getPointer h {- int * -}
  _21 <- getPointer h {- struct PackedFile * -}
  _22 <- getPointer h {- struct PreviewImage * -}
  _23 <- getFloat h {- float -}
  _24 <- getInt h {- int -}
  _25 <- getShort h {- short -}
  _26 <- getShort h {- short -}
  _27 <- getShort h {- short -}
  _28 <- getShort h {- short -}
  _29 <- getPointer h {- void * * -}
  return $ Image _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29
getMTex :: BHeader -> Get MTex
getMTex h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getPointer h {- struct Object * -}
  _6 <- getPointer h {- struct Tex * -}
  _7 <- getByteString 32 {- char[32] -}
  _8 <- get {- char -}
  _9 <- get {- char -}
  _10 <- get {- char -}
  _11 <- get {- char -}
  _12 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _13 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _14 <- getShort h {- short -}
  _15 <- getShort h {- short -}
  _16 <- getFloat h {- float -}
  _17 <- getFloat h {- float -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- getFloat h {- float -}
  _21 <- getFloat h {- float -}
  _22 <- getFloat h {- float -}
  _23 <- getFloat h {- float -}
  _24 <- getFloat h {- float -}
  _25 <- getFloat h {- float -}
  return $ MTex _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25
getPluginTex :: BHeader -> Get PluginTex
getPluginTex h = do
  _1 <- getByteString 160 {- char[160] -}
  _2 <- getPointer h {- void * * -}
  _3 <- getPointer h {- char * -}
  _4 <- getPointer h {- char * -}
  _5 <- getInt h {- int -}
  _6 <- getInt h {- int -}
  _7 <- getPointer h {- void * * -}
  _8 <- getPointer h {- float * -}
  _9 <- getPointer h {- float * -}
  _10 <- replicateM 32 (getFloat h {- float -}) {- float[32] -}
  _11 <- getPointer h {- int (*xxx)() -}
  _12 <- getPointer h {- void * (*xxx)() -}
  _13 <- getPointer h {- void * (*xxx)() -}
  _14 <- getInt h {- int -}
  _15 <- getInt h {- int -}
  return $ PluginTex _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15
getCBData :: BHeader -> Get CBData
getCBData h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getInt h {- int -}
  return $ CBData _1 _2 _3 _4 _5 _6
getColorBand :: BHeader -> Get ColorBand
getColorBand h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- replicateM 32 (getCBData h {- struct CBData -}) {- struct CBData[32] -}
  return $ ColorBand _1 _2 _3 _4 _5
getEnvMap :: BHeader -> Get EnvMap
getEnvMap h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getPointer h {- struct Image * -}
  _3 <- replicateM 6 (getPointer h {- UnknownCompound ImBuf  -}) {- struct ImBuf /* undefined */ *[6] -}
  _4 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _5 <- replicateM 3 (replicateM 3 (getFloat h {- float -}) {- float[3] -}) {- float [3][3] -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  _11 <- getInt h {- int -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getInt h {- int -}
  _15 <- getInt h {- int -}
  _16 <- getShort h {- short -}
  _17 <- getShort h {- short -}
  return $ EnvMap _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17
getTex :: BHeader -> Get Tex
getTex h = do
  _1 <- getID h {- struct ID -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  _11 <- getFloat h {- float -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  _17 <- getFloat h {- float -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- getFloat h {- float -}
  _21 <- getFloat h {- float -}
  _22 <- getShort h {- short -}
  _23 <- getShort h {- short -}
  _24 <- getShort h {- short -}
  _25 <- getShort h {- short -}
  _26 <- getShort h {- short -}
  _27 <- getShort h {- short -}
  _28 <- getShort h {- short -}
  _29 <- getShort h {- short -}
  _30 <- getShort h {- short -}
  _31 <- getShort h {- short -}
  _32 <- getFloat h {- float -}
  _33 <- getFloat h {- float -}
  _34 <- getFloat h {- float -}
  _35 <- getFloat h {- float -}
  _36 <- getShort h {- short -}
  _37 <- getShort h {- short -}
  _38 <- getShort h {- short -}
  _39 <- getShort h {- short -}
  _40 <- getInt h {- int -}
  _41 <- getInt h {- int -}
  _42 <- getInt h {- int -}
  _43 <- getInt h {- int -}
  _44 <- getFloat h {- float -}
  _45 <- getFloat h {- float -}
  _46 <- getFloat h {- float -}
  _47 <- getImageUser h {- struct ImageUser -}
  _48 <- getPointer h {- struct Ipo * -}
  _49 <- getPointer h {- struct Image * -}
  _50 <- getPointer h {- struct PluginTex * -}
  _51 <- getPointer h {- struct ColorBand * -}
  _52 <- getPointer h {- struct EnvMap * -}
  return $ Tex _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52
getTexMapping :: BHeader -> Get TexMapping
getTexMapping h = do
  _1 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _2 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _3 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _4 <- getInt h {- int -}
  _5 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _6 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _7 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _8 <- getPointer h {- struct Object * -}
  return $ TexMapping _1 _2 _3 _4 _5 _6 _7 _8
getLamp :: BHeader -> Get Lamp
getLamp h = do
  _1 <- getID h {- struct ID -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  _11 <- getFloat h {- float -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  _17 <- getFloat h {- float -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- getFloat h {- float -}
  _21 <- getFloat h {- float -}
  _22 <- getShort h {- short -}
  _23 <- getShort h {- short -}
  _24 <- getShort h {- short -}
  _25 <- getShort h {- short -}
  _26 <- get {- char -}
  _27 <- get {- char -}
  _28 <- getShort h {- short -}
  _29 <- getShort h {- short -}
  _30 <- getShort h {- short -}
  _31 <- getShort h {- short -}
  _32 <- getShort h {- short -}
  _33 <- getFloat h {- float -}
  _34 <- getFloat h {- float -}
  _35 <- getFloat h {- float -}
  _36 <- getShort h {- short -}
  _37 <- getShort h {- short -}
  _38 <- getInt h {- int -}
  _39 <- getInt h {- int -}
  _40 <- getShort h {- short -}
  _41 <- getShort h {- short -}
  _42 <- getShort h {- short -}
  _43 <- getShort h {- short -}
  _44 <- getFloat h {- float -}
  _45 <- getFloat h {- float -}
  _46 <- getFloat h {- float -}
  _47 <- getFloat h {- float -}
  _48 <- getShort h {- short -}
  _49 <- getShort h {- short -}
  _50 <- replicateM 10 (getPointer h {- struct MTex * -}) {- struct MTex *[10] -}
  _51 <- getPointer h {- struct Ipo * -}
  _52 <- getScriptLink h {- struct ScriptLink -}
  return $ Lamp _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52
getWave :: BHeader -> Get Wave
getWave h = do
  _1 <- getID h {- struct ID -}
  _2 <- getPointer h {- struct Ipo * -}
  return $ Wave _1 _2
getMaterial :: BHeader -> Get Material
getMaterial h = do
  _1 <- getID h {- struct ID -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  _11 <- getFloat h {- float -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  _17 <- getFloat h {- float -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- getFloat h {- float -}
  _21 <- getFloat h {- float -}
  _22 <- getFloat h {- float -}
  _23 <- getFloat h {- float -}
  _24 <- getFloat h {- float -}
  _25 <- getFloat h {- float -}
  _26 <- getFloat h {- float -}
  _27 <- getFloat h {- float -}
  _28 <- getFloat h {- float -}
  _29 <- getFloat h {- float -}
  _30 <- getFloat h {- float -}
  _31 <- getFloat h {- float -}
  _32 <- getFloat h {- float -}
  _33 <- getFloat h {- float -}
  _34 <- getShort h {- short -}
  _35 <- getShort h {- short -}
  _36 <- getShort h {- short -}
  _37 <- get {- char -}
  _38 <- get {- char -}
  _39 <- getInt h {- int -}
  _40 <- getInt h {- int -}
  _41 <- getShort h {- short -}
  _42 <- getShort h {- short -}
  _43 <- getShort h {- short -}
  _44 <- getShort h {- short -}
  _45 <- getFloat h {- float -}
  _46 <- getFloat h {- float -}
  _47 <- getFloat h {- float -}
  _48 <- getFloat h {- float -}
  _49 <- getFloat h {- float -}
  _50 <- getFloat h {- float -}
  _51 <- getFloat h {- float -}
  _52 <- getFloat h {- float -}
  _53 <- getFloat h {- float -}
  _54 <- getFloat h {- float -}
  _55 <- get {- char -}
  _56 <- get {- char -}
  _57 <- get {- char -}
  _58 <- get {- char -}
  _59 <- getShort h {- short -}
  _60 <- getShort h {- short -}
  _61 <- getShort h {- short -}
  _62 <- getShort h {- short -}
  _63 <- getShort h {- short -}
  _64 <- getShort h {- short -}
  _65 <- getFloat h {- float -}
  _66 <- getFloat h {- float -}
  _67 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  _68 <- getFloat h {- float -}
  _69 <- getFloat h {- float -}
  _70 <- getShort h {- short -}
  _71 <- getShort h {- short -}
  _72 <- getPointer h {- struct ColorBand * -}
  _73 <- getPointer h {- struct ColorBand * -}
  _74 <- get {- char -}
  _75 <- get {- char -}
  _76 <- get {- char -}
  _77 <- get {- char -}
  _78 <- getShort h {- short -}
  _79 <- getShort h {- short -}
  _80 <- getFloat h {- float -}
  _81 <- getFloat h {- float -}
  _82 <- replicateM 10 (getPointer h {- struct MTex * -}) {- struct MTex *[10] -}
  _83 <- getPointer h {- struct bNodeTree * -}
  _84 <- getPointer h {- struct Ipo * -}
  _85 <- getPointer h {- struct Group * -}
  _86 <- getFloat h {- float -}
  _87 <- getFloat h {- float -}
  _88 <- getFloat h {- float -}
  _89 <- getFloat h {- float -}
  _90 <- getFloat h {- float -}
  _91 <- getShort h {- short -}
  _92 <- getShort h {- short -}
  _93 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _94 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _95 <- getFloat h {- float -}
  _96 <- getFloat h {- float -}
  _97 <- getFloat h {- float -}
  _98 <- getFloat h {- float -}
  _99 <- getFloat h {- float -}
  _100 <- getFloat h {- float -}
  _101 <- getFloat h {- float -}
  _102 <- getShort h {- short -}
  _103 <- getShort h {- short -}
  _104 <- getFloat h {- float -}
  _105 <- getFloat h {- float -}
  _106 <- getFloat h {- float -}
  _107 <- getFloat h {- float -}
  _108 <- getFloat h {- float -}
  _109 <- getInt h {- int -}
  _110 <- getInt h {- int -}
  _111 <- getInt h {- int -}
  _112 <- getScriptLink h {- struct ScriptLink -}
  return $ Material _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112
getVFont :: BHeader -> Get VFont
getVFont h = do
  _1 <- getID h {- struct ID -}
  _2 <- getByteString 256 {- char[256] -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- UnknownCompound VFontData  -}
  _6 <- getPointer h {- struct PackedFile * -}
  return $ VFont _1 _2 _3 _4 _5 _6
getMetaElem :: BHeader -> Get MetaElem
getMetaElem h = do
  _1 <- getPointer h {- struct MetaElem * -}
  _2 <- getPointer h {- struct MetaElem * -}
  _3 <- getPointer h {- struct BoundBox * -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getInt h {- int -}
  _7 <- getInt h {- int -}
  _8 <- getInt h {- int -}
  _9 <- getInt h {- int -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  _17 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- getFloat h {- float -}
  _21 <- getFloat h {- float -}
  _22 <- getFloat h {- float -}
  _23 <- getFloat h {- float -}
  _24 <- getFloat h {- float -}
  _25 <- getPointer h {- float * -}
  _26 <- getPointer h {- float * -}
  return $ MetaElem _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26
getMetaBall :: BHeader -> Get MetaBall
getMetaBall h = do
  _1 <- getID h {- struct ID -}
  _2 <- getPointer h {- struct BoundBox * -}
  _3 <- getListBase h {- struct ListBase -}
  _4 <- getListBase h {- struct ListBase -}
  _5 <- getPointer h {- struct Ipo * -}
  _6 <- getPointer h {- struct Material * * -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getInt h {- int -}
  _10 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _11 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _12 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  return $ MetaBall _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15
getBezTriple :: BHeader -> Get BezTriple
getBezTriple h = do
  _1 <- replicateM 3 (replicateM 3 (getFloat h {- float -}) {- float[3] -}) {- float [3][3] -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- get {- char -}
  _8 <- get {- char -}
  _9 <- get {- char -}
  _10 <- get {- char -}
  return $ BezTriple _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getBPoint :: BHeader -> Get BPoint
getBPoint h = do
  _1 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  return $ BPoint _1 _2 _3 _4 _5 _6 _7
getNurb :: BHeader -> Get Nurb
getNurb h = do
  _1 <- getPointer h {- struct Nurb * -}
  _2 <- getPointer h {- struct Nurb * -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- getPointer h {- float * -}
  _16 <- getPointer h {- float * -}
  _17 <- getPointer h {- struct BPoint * -}
  _18 <- getPointer h {- struct BezTriple * -}
  _19 <- getInt h {- int -}
  _20 <- getInt h {- int -}
  return $ Nurb _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20
getCharInfo :: BHeader -> Get CharInfo
getCharInfo h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- get {- char -}
  _4 <- get {- char -}
  _5 <- getShort h {- short -}
  return $ CharInfo _1 _2 _3 _4 _5
getTextBox :: BHeader -> Get TextBox
getTextBox h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  return $ TextBox _1 _2 _3 _4
getCurve :: BHeader -> Get Curve
getCurve h = do
  _1 <- getID h {- struct ID -}
  _2 <- getPointer h {- struct BoundBox * -}
  _3 <- getListBase h {- struct ListBase -}
  _4 <- getListBase h {- struct ListBase -}
  _5 <- getPointer h {- struct Object * -}
  _6 <- getPointer h {- struct Object * -}
  _7 <- getPointer h {- struct Object * -}
  _8 <- getPointer h {- struct Ipo * -}
  _9 <- getPointer h {- UnknownCompound Path  -}
  _10 <- getPointer h {- struct Key * -}
  _11 <- getPointer h {- struct Material * * -}
  _12 <- getListBase h {- struct ListBase -}
  _13 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _14 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _15 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _16 <- getInt h {- int -}
  _17 <- getShort h {- short -}
  _18 <- getShort h {- short -}
  _19 <- getShort h {- short -}
  _20 <- getShort h {- short -}
  _21 <- getFloat h {- float -}
  _22 <- getFloat h {- float -}
  _23 <- getFloat h {- float -}
  _24 <- getShort h {- short -}
  _25 <- getShort h {- short -}
  _26 <- getShort h {- short -}
  _27 <- getShort h {- short -}
  _28 <- getInt h {- int -}
  _29 <- getShort h {- short -}
  _30 <- getShort h {- short -}
  _31 <- getShort h {- short -}
  _32 <- getShort h {- short -}
  _33 <- getFloat h {- float -}
  _34 <- getFloat h {- float -}
  _35 <- getFloat h {- float -}
  _36 <- getFloat h {- float -}
  _37 <- getFloat h {- float -}
  _38 <- getFloat h {- float -}
  _39 <- getFloat h {- float -}
  _40 <- getFloat h {- float -}
  _41 <- getFloat h {- float -}
  _42 <- getFloat h {- float -}
  _43 <- getPointer h {- char * -}
  _44 <- getByteString 24 {- char[24] -}
  _45 <- getPointer h {- struct VFont * -}
  _46 <- getPointer h {- struct VFont * -}
  _47 <- getPointer h {- struct VFont * -}
  _48 <- getPointer h {- struct VFont * -}
  _49 <- getInt h {- int -}
  _50 <- getInt h {- int -}
  _51 <- getInt h {- int -}
  _52 <- getInt h {- int -}
  _53 <- getPointer h {- struct TextBox * -}
  _54 <- getInt h {- int -}
  _55 <- getInt h {- int -}
  _56 <- getPointer h {- struct CharInfo * -}
  _57 <- getCharInfo h {- struct CharInfo -}
  return $ Curve _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57
getIpoDriver :: BHeader -> Get IpoDriver
getIpoDriver h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getByteString 128 {- char[128] -}
  return $ IpoDriver _1 _2 _3 _4 _5 _6
getIpoCurve :: BHeader -> Get IpoCurve
getIpoCurve h = do
  _1 <- getPointer h {- struct IpoCurve * -}
  _2 <- getPointer h {- struct IpoCurve * -}
  _3 <- getPointer h {- struct BPoint * -}
  _4 <- getPointer h {- struct BezTriple * -}
  _5 <- getRctf h {- struct rctf -}
  _6 <- getRctf h {- struct rctf -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  _17 <- getInt h {- int -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- getFloat h {- float -}
  _21 <- getPointer h {- struct IpoDriver * -}
  return $ IpoCurve _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21
getMesh :: BHeader -> Get Mesh
getMesh h = do
  _1 <- getID h {- struct ID -}
  _2 <- getPointer h {- struct BoundBox * -}
  _3 <- getListBase h {- struct ListBase -}
  _4 <- getPointer h {- struct Ipo * -}
  _5 <- getPointer h {- struct Key * -}
  _6 <- getPointer h {- struct Material * * -}
  _7 <- getPointer h {- struct MFace * -}
  _8 <- getPointer h {- struct MTFace * -}
  _9 <- getPointer h {- struct TFace * -}
  _10 <- getPointer h {- struct MVert * -}
  _11 <- getPointer h {- struct MEdge * -}
  _12 <- getPointer h {- struct MDeformVert * -}
  _13 <- getPointer h {- struct MCol * -}
  _14 <- getPointer h {- struct MSticky * -}
  _15 <- getPointer h {- struct Mesh * -}
  _16 <- getPointer h {- struct MSelect * -}
  _17 <- getPointer h {- struct OcInfo * -}
  _18 <- getPointer h {- void * * -}
  _19 <- getCustomData h {- struct CustomData -}
  _20 <- getCustomData h {- struct CustomData -}
  _21 <- getCustomData h {- struct CustomData -}
  _22 <- getInt h {- int -}
  _23 <- getInt h {- int -}
  _24 <- getInt h {- int -}
  _25 <- getInt h {- int -}
  _26 <- getInt h {- int -}
  _27 <- getInt h {- int -}
  _28 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _29 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _30 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _31 <- getFloat h {- float -}
  _32 <- getFloat h {- float -}
  _33 <- getShort h {- short -}
  _34 <- getShort h {- short -}
  _35 <- getShort h {- short -}
  _36 <- getShort h {- short -}
  _37 <- getShort h {- short -}
  _38 <- getShort h {- short -}
  _39 <- getPointer h {- struct Multires * -}
  _40 <- getPointer h {- struct PartialVisibility * -}
  _41 <- getPointer h {- void * * -}
  return $ Mesh _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41
getTFace :: BHeader -> Get TFace
getTFace h = do
  _1 <- getPointer h {- void * * -}
  _2 <- replicateM 2 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][2] -}
  _3 <- replicateM 4 (getInt h {- int -}) {- int[4] -}
  _4 <- get {- char -}
  _5 <- get {- char -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  return $ TFace _1 _2 _3 _4 _5 _6 _7 _8
getMFace :: BHeader -> Get MFace
getMFace h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- get {- char -}
  _6 <- get {- char -}
  _7 <- get {- char -}
  _8 <- get {- char -}
  return $ MFace _1 _2 _3 _4 _5 _6 _7 _8
getMEdge :: BHeader -> Get MEdge
getMEdge h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- get {- char -}
  _4 <- get {- char -}
  _5 <- getShort h {- short -}
  return $ MEdge _1 _2 _3 _4 _5
getMDeformWeight :: BHeader -> Get MDeformWeight
getMDeformWeight h = do
  _1 <- getInt h {- int -}
  _2 <- getFloat h {- float -}
  return $ MDeformWeight _1 _2
getMDeformVert :: BHeader -> Get MDeformVert
getMDeformVert h = do
  _1 <- getPointer h {- struct MDeformWeight * -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  return $ MDeformVert _1 _2 _3
getMVert :: BHeader -> Get MVert
getMVert h = do
  _1 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _2 <- replicateM 3 (getShort h {- short -}) {- short[3] -}
  _3 <- get {- char -}
  _4 <- get {- char -}
  return $ MVert _1 _2 _3 _4
getMCol :: BHeader -> Get MCol
getMCol h = do
  _1 <- get {- char -}
  _2 <- get {- char -}
  _3 <- get {- char -}
  _4 <- get {- char -}
  return $ MCol _1 _2 _3 _4
getMSticky :: BHeader -> Get MSticky
getMSticky h = do
  _1 <- replicateM 2 (getFloat h {- float -}) {- float[2] -}
  return $ MSticky _1
getMSelect :: BHeader -> Get MSelect
getMSelect h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  return $ MSelect _1 _2
getMTFace :: BHeader -> Get MTFace
getMTFace h = do
  _1 <- replicateM 2 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][2] -}
  _2 <- getPointer h {- struct Image * -}
  _3 <- get {- char -}
  _4 <- get {- char -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  return $ MTFace _1 _2 _3 _4 _5 _6 _7
getMultiresCol :: BHeader -> Get MultiresCol
getMultiresCol h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  return $ MultiresCol _1 _2 _3 _4
getMultiresColFace :: BHeader -> Get MultiresColFace
getMultiresColFace h = do
  _1 <- replicateM 4 (getMultiresCol h {- struct MultiresCol -}) {- struct MultiresCol[4] -}
  return $ MultiresColFace _1
getMultiresFace :: BHeader -> Get MultiresFace
getMultiresFace h = do
  _1 <- replicateM 4 (getInt h {- int -}) {- int[4] -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- get {- char -}
  _5 <- get {- char -}
  _6 <- getByteString 2 {- char[2] -}
  return $ MultiresFace _1 _2 _3 _4 _5 _6
getMultiresEdge :: BHeader -> Get MultiresEdge
getMultiresEdge h = do
  _1 <- replicateM 2 (getInt h {- int -}) {- int[2] -}
  _2 <- getInt h {- int -}
  return $ MultiresEdge _1 _2
getMultiresLevel :: BHeader -> Get MultiresLevel
getMultiresLevel h = do
  _1 <- getPointer h {- struct MultiresLevel * -}
  _2 <- getPointer h {- struct MultiresLevel * -}
  _3 <- getPointer h {- struct MVert * -}
  _4 <- getPointer h {- struct MultiresFace * -}
  _5 <- getPointer h {- struct MultiresColFace * -}
  _6 <- getPointer h {- struct MultiresEdge * -}
  _7 <- getPointer h {- struct ListBase * -}
  _8 <- getPointer h {- struct ListBase * -}
  _9 <- getPointer h {- UnknownCompound MultiresMapNode  -}
  _10 <- getInt h {- int -}
  _11 <- getInt h {- int -}
  _12 <- getInt h {- int -}
  _13 <- getInt h {- int -}
  return $ MultiresLevel _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13
getMultires :: BHeader -> Get Multires
getMultires h = do
  _1 <- getListBase h {- struct ListBase -}
  _2 <- get {- char -}
  _3 <- get {- char -}
  _4 <- get {- char -}
  _5 <- get {- char -}
  _6 <- get {- char -}
  _7 <- get {- char -}
  _8 <- get {- char -}
  _9 <- get {- char -}
  _10 <- getCustomData h {- struct CustomData -}
  _11 <- getCustomData h {- struct CustomData -}
  _12 <- getPointer h {- short * -}
  _13 <- getPointer h {- char * -}
  return $ Multires _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13
getPartialVisibility :: BHeader -> Get PartialVisibility
getPartialVisibility h = do
  _1 <- getPointer h {- int * -}
  _2 <- getPointer h {- int * -}
  _3 <- getPointer h {- struct MFace * -}
  _4 <- getPointer h {- struct MEdge * -}
  _5 <- getInt h {- int -}
  _6 <- getInt h {- int -}
  _7 <- getInt h {- int -}
  _8 <- getInt h {- int -}
  return $ PartialVisibility _1 _2 _3 _4 _5 _6 _7 _8
getModifierData :: BHeader -> Get ModifierData
getModifierData h = do
  _1 <- getPointer h {- struct ModifierData * -}
  _2 <- getPointer h {- struct ModifierData * -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getByteString 32 {- char[32] -}
  _6 <- getPointer h {- char * -}
  return $ ModifierData _1 _2 _3 _4 _5 _6
getSubsurfModifierData :: BHeader -> Get SubsurfModifierData
getSubsurfModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getPointer h {- void * * -}
  _7 <- getPointer h {- void * * -}
  return $ SubsurfModifierData _1 _2 _3 _4 _5 _6 _7
getLatticeModifierData :: BHeader -> Get LatticeModifierData
getLatticeModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getPointer h {- struct Object * -}
  _3 <- getByteString 32 {- char[32] -}
  return $ LatticeModifierData _1 _2 _3
getCurveModifierData :: BHeader -> Get CurveModifierData
getCurveModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getPointer h {- struct Object * -}
  _3 <- getByteString 32 {- char[32] -}
  _4 <- getShort h {- short -}
  _5 <- getByteString 6 {- char[6] -}
  return $ CurveModifierData _1 _2 _3 _4 _5
getBuildModifierData :: BHeader -> Get BuildModifierData
getBuildModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  return $ BuildModifierData _1 _2 _3 _4 _5
getArrayModifierData :: BHeader -> Get ArrayModifierData
getArrayModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getPointer h {- struct Object * -}
  _3 <- getPointer h {- struct Object * -}
  _4 <- getPointer h {- struct Object * -}
  _5 <- getPointer h {- struct Object * -}
  _6 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _7 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getInt h {- int -}
  _11 <- getInt h {- int -}
  _12 <- getInt h {- int -}
  _13 <- getInt h {- int -}
  return $ ArrayModifierData _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13
getMirrorModifierData :: BHeader -> Get MirrorModifierData
getMirrorModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getFloat h {- float -}
  return $ MirrorModifierData _1 _2 _3 _4
getEdgeSplitModifierData :: BHeader -> Get EdgeSplitModifierData
getEdgeSplitModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getFloat h {- float -}
  _3 <- getInt h {- int -}
  return $ EdgeSplitModifierData _1 _2 _3
getDisplaceModifierData :: BHeader -> Get DisplaceModifierData
getDisplaceModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getPointer h {- struct Tex * -}
  _3 <- getFloat h {- float -}
  _4 <- getInt h {- int -}
  _5 <- getByteString 32 {- char[32] -}
  _6 <- getFloat h {- float -}
  _7 <- getInt h {- int -}
  _8 <- getPointer h {- struct Object * -}
  _9 <- getByteString 32 {- char[32] -}
  _10 <- getInt h {- int -}
  _11 <- getInt h {- int -}
  return $ DisplaceModifierData _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11
getUVProjectModifierData :: BHeader -> Get UVProjectModifierData
getUVProjectModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- replicateM 10 (getPointer h {- struct Object * -}) {- struct Object *[10] -}
  _3 <- getPointer h {- struct Image * -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- getByteString 32 {- char[32] -}
  _9 <- getInt h {- int -}
  _10 <- getInt h {- int -}
  return $ UVProjectModifierData _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getDecimateModifierData :: BHeader -> Get DecimateModifierData
getDecimateModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getFloat h {- float -}
  _3 <- getInt h {- int -}
  return $ DecimateModifierData _1 _2 _3
getSmoothModifierData :: BHeader -> Get SmoothModifierData
getSmoothModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getFloat h {- float -}
  _3 <- getByteString 32 {- char[32] -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  return $ SmoothModifierData _1 _2 _3 _4 _5
getCastModifierData :: BHeader -> Get CastModifierData
getCastModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getPointer h {- struct Object * -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getByteString 32 {- char[32] -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  return $ CastModifierData _1 _2 _3 _4 _5 _6 _7 _8
getWaveModifierData :: BHeader -> Get WaveModifierData
getWaveModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getPointer h {- struct Object * -}
  _3 <- getByteString 32 {- char[32] -}
  _4 <- getPointer h {- struct Tex * -}
  _5 <- getPointer h {- struct Object * -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  _11 <- getFloat h {- float -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getInt h {- int -}
  _16 <- getInt h {- int -}
  _17 <- getByteString 32 {- char[32] -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  return $ WaveModifierData _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19
getArmatureModifierData :: BHeader -> Get ArmatureModifierData
getArmatureModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getInt h {- int -}
  _5 <- getPointer h {- struct Object * -}
  _6 <- getByteString 32 {- char[32] -}
  return $ ArmatureModifierData _1 _2 _3 _4 _5 _6
getHookModifierData :: BHeader -> Get HookModifierData
getHookModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getPointer h {- struct Object * -}
  _3 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _4 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _5 <- getFloat h {- float -}
  _6 <- getPointer h {- int * -}
  _7 <- getInt h {- int -}
  _8 <- getFloat h {- float -}
  _9 <- getByteString 32 {- char[32] -}
  return $ HookModifierData _1 _2 _3 _4 _5 _6 _7 _8 _9
getSoftbodyModifierData :: BHeader -> Get SoftbodyModifierData
getSoftbodyModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  return $ SoftbodyModifierData _1
getBooleanModifierData :: BHeader -> Get BooleanModifierData
getBooleanModifierData h = do
  _1 <- getModifierData h {- struct ModifierData -}
  _2 <- getPointer h {- struct Object * -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  return $ BooleanModifierData _1 _2 _3 _4
getLattice :: BHeader -> Get Lattice
getLattice h = do
  _1 <- getID h {- struct ID -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- get {- char -}
  _11 <- get {- char -}
  _12 <- get {- char -}
  _13 <- get {- char -}
  _14 <- getInt h {- int -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  _17 <- getFloat h {- float -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- getFloat h {- float -}
  _21 <- getPointer h {- struct BPoint * -}
  _22 <- getPointer h {- struct Ipo * -}
  _23 <- getPointer h {- struct Key * -}
  _24 <- getPointer h {- struct MDeformVert * -}
  return $ Lattice _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24
getBDeformGroup :: BHeader -> Get BDeformGroup
getBDeformGroup h = do
  _1 <- getPointer h {- struct bDeformGroup * -}
  _2 <- getPointer h {- struct bDeformGroup * -}
  _3 <- getByteString 32 {- char[32] -}
  return $ BDeformGroup _1 _2 _3
getBoundBox :: BHeader -> Get BoundBox
getBoundBox h = do
  _1 <- replicateM 3 (replicateM 8 (getFloat h {- float -}) {- float[8] -}) {- float [8][3] -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  return $ BoundBox _1 _2 _3
getOcInfo :: BHeader -> Get OcInfo
getOcInfo h = do
  _1 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _2 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  return $ OcInfo _1 _2
getLBuf :: BHeader -> Get LBuf
getLBuf h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getInt h {- int -}
  _4 <- getPointer h {- struct Object * * -}
  return $ LBuf _1 _2 _3 _4
getObject :: BHeader -> Get Object
getObject h = do
  _1 <- getID h {- struct ID -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getInt h {- int -}
  _7 <- getByteString 32 {- char[32] -}
  _8 <- getPointer h {- struct Object * -}
  _9 <- getPointer h {- struct Object * -}
  _10 <- getPointer h {- struct Object * -}
  _11 <- getPointer h {- struct Object * -}
  _12 <- getPointer h {- struct Object * -}
  _13 <- getPointer h {- struct Ipo * -}
  _14 <- getPointer h {- UnknownCompound Path  -}
  _15 <- getPointer h {- struct BoundBox * -}
  _16 <- getPointer h {- struct bAction * -}
  _17 <- getPointer h {- struct bPose * -}
  _18 <- getPointer h {- void * * -}
  _19 <- getListBase h {- struct ListBase -}
  _20 <- getListBase h {- struct ListBase -}
  _21 <- getListBase h {- struct ListBase -}
  _22 <- getListBase h {- struct ListBase -}
  _23 <- getListBase h {- struct ListBase -}
  _24 <- getListBase h {- struct ListBase -}
  _25 <- getPointer h {- struct Material * * -}
  _26 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _27 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _28 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _29 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _30 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _31 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _32 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _33 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  _34 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  _35 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _36 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _37 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _38 <- getInt h {- int -}
  _39 <- getShort h {- short -}
  _40 <- getShort h {- short -}
  _41 <- getShort h {- short -}
  _42 <- getShort h {- short -}
  _43 <- getShort h {- short -}
  _44 <- getShort h {- short -}
  _45 <- getShort h {- short -}
  _46 <- getShort h {- short -}
  _47 <- getShort h {- short -}
  _48 <- getShort h {- short -}
  _49 <- getShort h {- short -}
  _50 <- getShort h {- short -}
  _51 <- getInt h {- int -}
  _52 <- getInt h {- int -}
  _53 <- getInt h {- int -}
  _54 <- getInt h {- int -}
  _55 <- getFloat h {- float -}
  _56 <- getFloat h {- float -}
  _57 <- getFloat h {- float -}
  _58 <- getFloat h {- float -}
  _59 <- getFloat h {- float -}
  _60 <- getFloat h {- float -}
  _61 <- getFloat h {- float -}
  _62 <- getFloat h {- float -}
  _63 <- get {- char -}
  _64 <- get {- char -}
  _65 <- get {- char -}
  _66 <- get {- char -}
  _67 <- get {- char -}
  _68 <- getByteString 7 {- char[7] -}
  _69 <- getFloat h {- float -}
  _70 <- getScriptLink h {- struct ScriptLink -}
  _71 <- getListBase h {- struct ListBase -}
  _72 <- getListBase h {- struct ListBase -}
  _73 <- getListBase h {- struct ListBase -}
  _74 <- getListBase h {- struct ListBase -}
  _75 <- getPointer h {- void * * -}
  _76 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _77 <- getShort h {- short -}
  _78 <- getShort h {- short -}
  _79 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  _80 <- getInt h {- int -}
  _81 <- getInt h {- int -}
  _82 <- getShort h {- short -}
  _83 <- getShort h {- short -}
  _84 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _85 <- getListBase h {- struct ListBase -}
  _86 <- getListBase h {- struct ListBase -}
  _87 <- getListBase h {- struct ListBase -}
  _88 <- getPointer h {- struct PartDeflect * -}
  _89 <- getPointer h {- struct SoftBody * -}
  _90 <- getPointer h {- struct Group * -}
  _91 <- getShort h {- short -}
  _92 <- getShort h {- short -}
  _93 <- getShort h {- short -}
  _94 <- getShort h {- short -}
  _95 <- getFloat h {- float -}
  _96 <- getShort h {- short -}
  _97 <- getShort h {- short -}
  _98 <- getPointer h {- struct FluidsimSettings * -}
  _99 <- getPointer h {- UnknownCompound DerivedMesh  -}
  _100 <- getPointer h {- UnknownCompound DerivedMesh  -}
  _101 <- getInt h {- int -}
  _102 <- getInt h {- int -}
  _103 <- getPointer h {- void * * -}
  return $ Object _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103
getObHook :: BHeader -> Get ObHook
getObHook h = do
  _1 <- getPointer h {- struct ObHook * -}
  _2 <- getPointer h {- struct ObHook * -}
  _3 <- getPointer h {- struct Object * -}
  _4 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _5 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _6 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _7 <- getFloat h {- float -}
  _8 <- getByteString 32 {- char[32] -}
  _9 <- getPointer h {- int * -}
  _10 <- getInt h {- int -}
  _11 <- getInt h {- int -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getFloat h {- float -}
  return $ ObHook _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14
getPartDeflect :: BHeader -> Get PartDeflect
getPartDeflect h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  _11 <- getFloat h {- float -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  return $ PartDeflect _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13
getSBVertex :: BHeader -> Get SBVertex
getSBVertex h = do
  _1 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  return $ SBVertex _1
getSoftBody :: BHeader -> Get SoftBody
getSoftBody h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getPointer h {- UnknownCompound BodyPoint  -}
  _4 <- getPointer h {- UnknownCompound BodySpring  -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  _11 <- getFloat h {- float -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getShort h {- short -}
  _17 <- getShort h {- short -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- getInt h {- int -}
  _21 <- getInt h {- int -}
  _22 <- getInt h {- int -}
  _23 <- getShort h {- short -}
  _24 <- getShort h {- short -}
  _25 <- getPointer h {- struct SBVertex * * -}
  _26 <- getInt h {- int -}
  _27 <- getInt h {- int -}
  _28 <- getFloat h {- float -}
  _29 <- getFloat h {- float -}
  _30 <- getFloat h {- float -}
  _31 <- getFloat h {- float -}
  _32 <- getShort h {- short -}
  _33 <- getShort h {- short -}
  _34 <- getShort h {- short -}
  _35 <- getShort h {- short -}
  _36 <- getShort h {- short -}
  _37 <- getShort h {- short -}
  _38 <- getShort h {- short -}
  _39 <- getShort h {- short -}
  _40 <- getPointer h {- UnknownCompound SBScratch  -}
  return $ SoftBody _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40
getFluidsimSettings :: BHeader -> Get FluidsimSettings
getFluidsimSettings h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getFloat h {- float -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getFloat h {- float -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getFloat h {- float -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  _17 <- getInt h {- int -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- getFloat h {- float -}
  _21 <- getPointer h {- struct Mesh * -}
  _22 <- getPointer h {- struct Mesh * -}
  _23 <- getPointer h {- struct Mesh * -}
  _24 <- getByteString 240 {- char[240] -}
  _25 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _26 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _27 <- getPointer h {- struct Ipo * -}
  _28 <- getShort h {- short -}
  _29 <- get {- char -}
  _30 <- get {- char -}
  _31 <- getFloat h {- float -}
  _32 <- getInt h {- int -}
  _33 <- getFloat h {- float -}
  _34 <- getFloat h {- float -}
  _35 <- getInt h {- int -}
  _36 <- getInt h {- int -}
  _37 <- getFloat h {- float -}
  _38 <- getFloat h {- float -}
  _39 <- getFloat h {- float -}
  _40 <- getPointer h {- struct MVert * -}
  return $ FluidsimSettings _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40
getWorld :: BHeader -> Get World
getWorld h = do
  _1 <- getID h {- struct ID -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  _11 <- getFloat h {- float -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  _17 <- getFloat h {- float -}
  _18 <- getInt h {- int -}
  _19 <- getFloat h {- float -}
  _20 <- getFloat h {- float -}
  _21 <- getFloat h {- float -}
  _22 <- getFloat h {- float -}
  _23 <- getFloat h {- float -}
  _24 <- getFloat h {- float -}
  _25 <- getFloat h {- float -}
  _26 <- getShort h {- short -}
  _27 <- getShort h {- short -}
  _28 <- getInt h {- int -}
  _29 <- getFloat h {- float -}
  _30 <- getFloat h {- float -}
  _31 <- getFloat h {- float -}
  _32 <- getFloat h {- float -}
  _33 <- getFloat h {- float -}
  _34 <- getFloat h {- float -}
  _35 <- getFloat h {- float -}
  _36 <- getFloat h {- float -}
  _37 <- getFloat h {- float -}
  _38 <- getFloat h {- float -}
  _39 <- getFloat h {- float -}
  _40 <- getFloat h {- float -}
  _41 <- getShort h {- short -}
  _42 <- getShort h {- short -}
  _43 <- getShort h {- short -}
  _44 <- getShort h {- short -}
  _45 <- getFloat h {- float -}
  _46 <- getFloat h {- float -}
  _47 <- getFloat h {- float -}
  _48 <- getFloat h {- float -}
  _49 <- getShort h {- short -}
  _50 <- getShort h {- short -}
  _51 <- getShort h {- short -}
  _52 <- getShort h {- short -}
  _53 <- getPointer h {- float * -}
  _54 <- getPointer h {- float * -}
  _55 <- getPointer h {- struct Ipo * -}
  _56 <- replicateM 10 (getPointer h {- struct MTex * -}) {- struct MTex *[10] -}
  _57 <- getScriptLink h {- struct ScriptLink -}
  return $ World _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57
getRadio :: BHeader -> Get Radio
getRadio h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getInt h {- int -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  return $ Radio _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16
getBase :: BHeader -> Get Base
getBase h = do
  _1 <- getPointer h {- struct Base * -}
  _2 <- getPointer h {- struct Base * -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getPointer h {- struct Object * -}
  return $ Base _1 _2 _3 _4 _5 _6 _7 _8
getAviCodecData :: BHeader -> Get AviCodecData
getAviCodecData h = do
  _1 <- getPointer h {- void * * -}
  _2 <- getPointer h {- void * * -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getInt h {- int -}
  _7 <- getInt h {- int -}
  _8 <- getInt h {- int -}
  _9 <- getInt h {- int -}
  _10 <- getInt h {- int -}
  _11 <- getInt h {- int -}
  _12 <- getInt h {- int -}
  _13 <- getByteString 128 {- char[128] -}
  return $ AviCodecData _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13
getQuicktimeCodecData :: BHeader -> Get QuicktimeCodecData
getQuicktimeCodecData h = do
  _1 <- getPointer h {- void * * -}
  _2 <- getPointer h {- void * * -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getByteString 128 {- char[128] -}
  return $ QuicktimeCodecData _1 _2 _3 _4 _5
getFFMpegCodecData :: BHeader -> Get FFMpegCodecData
getFFMpegCodecData h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getInt h {- int -}
  _7 <- getInt h {- int -}
  _8 <- getInt h {- int -}
  _9 <- getInt h {- int -}
  _10 <- getInt h {- int -}
  _11 <- getInt h {- int -}
  _12 <- getInt h {- int -}
  return $ FFMpegCodecData _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12
getAudioData :: BHeader -> Get AudioData
getAudioData h = do
  _1 <- getInt h {- int -}
  _2 <- getFloat h {- float -}
  _3 <- getShort h {- short -}
  _4 <- replicateM 3 (getShort h {- short -}) {- short[3] -}
  return $ AudioData _1 _2 _3 _4
getSceneRenderLayer :: BHeader -> Get SceneRenderLayer
getSceneRenderLayer h = do
  _1 <- getPointer h {- struct SceneRenderLayer * -}
  _2 <- getPointer h {- struct SceneRenderLayer * -}
  _3 <- getByteString 32 {- char[32] -}
  _4 <- getPointer h {- struct Material * -}
  _5 <- getPointer h {- struct Group * -}
  _6 <- getInt h {- int -}
  _7 <- getInt h {- int -}
  _8 <- getInt h {- int -}
  _9 <- getInt h {- int -}
  return $ SceneRenderLayer _1 _2 _3 _4 _5 _6 _7 _8 _9
getRenderData :: BHeader -> Get RenderData
getRenderData h = do
  _1 <- getPointer h {- struct AviCodecData * -}
  _2 <- getPointer h {- struct QuicktimeCodecData * -}
  _3 <- getFFMpegCodecData h {- struct FFMpegCodecData -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getInt h {- int -}
  _7 <- getInt h {- int -}
  _8 <- getInt h {- int -}
  _9 <- getInt h {- int -}
  _10 <- getInt h {- int -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  _17 <- getFloat h {- float -}
  _18 <- getFloat h {- float -}
  _19 <- getShort h {- short -}
  _20 <- getShort h {- short -}
  _21 <- getShort h {- short -}
  _22 <- getShort h {- short -}
  _23 <- getShort h {- short -}
  _24 <- getShort h {- short -}
  _25 <- getShort h {- short -}
  _26 <- getShort h {- short -}
  _27 <- getShort h {- short -}
  _28 <- getShort h {- short -}
  _29 <- getShort h {- short -}
  _30 <- getShort h {- short -}
  _31 <- getShort h {- short -}
  _32 <- getShort h {- short -}
  _33 <- getShort h {- short -}
  _34 <- getShort h {- short -}
  _35 <- getShort h {- short -}
  _36 <- getShort h {- short -}
  _37 <- getShort h {- short -}
  _38 <- getShort h {- short -}
  _39 <- getShort h {- short -}
  _40 <- getShort h {- short -}
  _41 <- getShort h {- short -}
  _42 <- getShort h {- short -}
  _43 <- getShort h {- short -}
  _44 <- getShort h {- short -}
  _45 <- getInt h {- int -}
  _46 <- getShort h {- short -}
  _47 <- getShort h {- short -}
  _48 <- replicateM 2 (getShort h {- short -}) {- short[2] -}
  _49 <- getShort h {- short -}
  _50 <- getShort h {- short -}
  _51 <- getShort h {- short -}
  _52 <- getShort h {- short -}
  _53 <- getRctf h {- struct rctf -}
  _54 <- getRctf h {- struct rctf -}
  _55 <- getRcti h {- struct rcti -}
  _56 <- getListBase h {- struct ListBase -}
  _57 <- getShort h {- short -}
  _58 <- getShort h {- short -}
  _59 <- getInt h {- int -}
  _60 <- getFloat h {- float -}
  _61 <- getFloat h {- float -}
  _62 <- getFloat h {- float -}
  _63 <- getFloat h {- float -}
  _64 <- getFloat h {- float -}
  _65 <- getFloat h {- float -}
  _66 <- getShort h {- short -}
  _67 <- getShort h {- short -}
  _68 <- getShort h {- short -}
  _69 <- getShort h {- short -}
  _70 <- getShort h {- short -}
  _71 <- getShort h {- short -}
  _72 <- getShort h {- short -}
  _73 <- getShort h {- short -}
  _74 <- getShort h {- short -}
  _75 <- getShort h {- short -}
  _76 <- getShort h {- short -}
  _77 <- getShort h {- short -}
  _78 <- getShort h {- short -}
  _79 <- getShort h {- short -}
  _80 <- getInt h {- int -}
  _81 <- getInt h {- int -}
  _82 <- getInt h {- int -}
  _83 <- getInt h {- int -}
  _84 <- getInt h {- int -}
  _85 <- getFloat h {- float -}
  _86 <- getInt h {- int -}
  _87 <- getInt h {- int -}
  _88 <- getInt h {- int -}
  _89 <- getInt h {- int -}
  _90 <- getFloat h {- float -}
  _91 <- getFloat h {- float -}
  _92 <- getFloat h {- float -}
  _93 <- getFloat h {- float -}
  _94 <- getFloat h {- float -}
  _95 <- getFloat h {- float -}
  _96 <- getFloat h {- float -}
  _97 <- getFloat h {- float -}
  _98 <- getFloat h {- float -}
  _99 <- getByteString 160 {- char[160] -}
  _100 <- getByteString 160 {- char[160] -}
  _101 <- getByteString 160 {- char[160] -}
  return $ RenderData _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101
getGameFraming :: BHeader -> Get GameFraming
getGameFraming h = do
  _1 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _2 <- get {- char -}
  _3 <- get {- char -}
  _4 <- get {- char -}
  _5 <- get {- char -}
  return $ GameFraming _1 _2 _3 _4 _5
getTimeMarker :: BHeader -> Get TimeMarker
getTimeMarker h = do
  _1 <- getPointer h {- struct TimeMarker * -}
  _2 <- getPointer h {- struct TimeMarker * -}
  _3 <- getInt h {- int -}
  _4 <- getByteString 64 {- char[64] -}
  _5 <- getInt h {- int -}
  return $ TimeMarker _1 _2 _3 _4 _5
getImagePaintSettings :: BHeader -> Get ImagePaintSettings
getImagePaintSettings h = do
  _1 <- getPointer h {- struct Brush * -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getInt h {- int -}
  return $ ImagePaintSettings _1 _2 _3 _4
getToolSettings :: BHeader -> Get ToolSettings
getToolSettings h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getShort h {- short -}
  _16 <- getShort h {- short -}
  _17 <- getShort h {- short -}
  _18 <- getShort h {- short -}
  _19 <- getImagePaintSettings h {- struct ImagePaintSettings -}
  _20 <- getFloat h {- float -}
  _21 <- getFloat h {- float -}
  _22 <- get {- char -}
  _23 <- get {- char -}
  _24 <- get {- char -}
  _25 <- get {- char -}
  _26 <- get {- char -}
  _27 <- get {- char -}
  _28 <- getByteString 2 {- char[2] -}
  return $ ToolSettings _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28
getBrushData :: BHeader -> Get BrushData
getBrushData h = do
  _1 <- getShort h {- short -}
  _2 <- get {- char -}
  _3 <- get {- char -}
  _4 <- get {- char -}
  _5 <- get {- char -}
  _6 <- getByteString 2 {- char[2] -}
  return $ BrushData _1 _2 _3 _4 _5 _6
getSculptData :: BHeader -> Get SculptData
getSculptData h = do
  _1 <- getPointer h {- UnknownCompound SculptSession  -}
  _2 <- replicateM 10 (getPointer h {- struct MTex * -}) {- struct MTex *[10] -}
  _3 <- getBrushData h {- struct BrushData -}
  _4 <- getBrushData h {- struct BrushData -}
  _5 <- getBrushData h {- struct BrushData -}
  _6 <- getBrushData h {- struct BrushData -}
  _7 <- getBrushData h {- struct BrushData -}
  _8 <- getBrushData h {- struct BrushData -}
  _9 <- getBrushData h {- struct BrushData -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- get {- char -}
  _15 <- get {- char -}
  _16 <- get {- char -}
  _17 <- get {- char -}
  _18 <- get {- char -}
  _19 <- get {- char -}
  _20 <- get {- char -}
  _21 <- get {- char -}
  return $ SculptData _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21
getScene :: BHeader -> Get Scene
getScene h = do
  _1 <- getID h {- struct ID -}
  _2 <- getPointer h {- struct Object * -}
  _3 <- getPointer h {- struct World * -}
  _4 <- getPointer h {- struct Scene * -}
  _5 <- getPointer h {- struct Image * -}
  _6 <- getListBase h {- struct ListBase -}
  _7 <- getPointer h {- struct Base * -}
  _8 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _9 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _10 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _11 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _12 <- getInt h {- int -}
  _13 <- getFloat h {- float -}
  _14 <- getShort h {- short -}
  _15 <- getShort h {- short -}
  _16 <- getShort h {- short -}
  _17 <- getShort h {- short -}
  _18 <- getPointer h {- struct bNodeTree * -}
  _19 <- getPointer h {- void * * -}
  _20 <- getPointer h {- struct Radio * -}
  _21 <- getPointer h {- void * * -}
  _22 <- getGameFraming h {- struct GameFraming -}
  _23 <- getPointer h {- struct ToolSettings * -}
  _24 <- getRenderData h {- struct RenderData -}
  _25 <- getAudioData h {- struct AudioData -}
  _26 <- getScriptLink h {- struct ScriptLink -}
  _27 <- getListBase h {- struct ListBase -}
  _28 <- getShort h {- short -}
  _29 <- getShort h {- short -}
  _30 <- getShort h {- short -}
  _31 <- getShort h {- short -}
  _32 <- getPointer h {- UnknownCompound DagForest  -}
  _33 <- getShort h {- short -}
  _34 <- getShort h {- short -}
  _35 <- getShort h {- short -}
  _36 <- getShort h {- short -}
  _37 <- getSculptData h {- struct SculptData -}
  return $ Scene _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37
getBGpic :: BHeader -> Get BGpic
getBGpic h = do
  _1 <- getPointer h {- struct Image * -}
  _2 <- getImageUser h {- struct ImageUser -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  return $ BGpic _1 _2 _3 _4 _5 _6 _7 _8 _9
getView3D :: BHeader -> Get View3D
getView3D h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- replicateM 8 (getShort h {- short -}) {- short[8] -}
  _7 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _8 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _9 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _10 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _11 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _12 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _13 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  _17 <- getShort h {- short -}
  _18 <- getShort h {- short -}
  _19 <- getPointer h {- struct Object * -}
  _20 <- getPointer h {- struct Object * -}
  _21 <- getPointer h {- struct BGpic * -}
  _22 <- getPointer h {- struct View3D * -}
  _23 <- getPointer h {- UnknownCompound RenderInfo  -}
  _24 <- getPointer h {- UnknownCompound RetopoViewData  -}
  _25 <- getPointer h {- UnknownCompound ViewDepths  -}
  _26 <- getByteString 32 {- char[32] -}
  _27 <- getShort h {- short -}
  _28 <- getShort h {- short -}
  _29 <- getInt h {- int -}
  _30 <- getInt h {- int -}
  _31 <- getShort h {- short -}
  _32 <- getShort h {- short -}
  _33 <- getShort h {- short -}
  _34 <- get {- char -}
  _35 <- get {- char -}
  _36 <- getFloat h {- float -}
  _37 <- getFloat h {- float -}
  _38 <- getFloat h {- float -}
  _39 <- getFloat h {- float -}
  _40 <- getFloat h {- float -}
  _41 <- getFloat h {- float -}
  _42 <- getFloat h {- float -}
  _43 <- getFloat h {- float -}
  _44 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _45 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _46 <- getShort h {- short -}
  _47 <- getShort h {- short -}
  _48 <- getShort h {- short -}
  _49 <- getShort h {- short -}
  _50 <- getShort h {- short -}
  _51 <- getShort h {- short -}
  _52 <- getShort h {- short -}
  _53 <- getShort h {- short -}
  _54 <- getShort h {- short -}
  _55 <- getShort h {- short -}
  _56 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _57 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _58 <- getPointer h {- struct BoundBox * -}
  _59 <- getListBase h {- struct ListBase -}
  _60 <- getShort h {- short -}
  _61 <- getShort h {- short -}
  _62 <- getShort h {- short -}
  _63 <- getShort h {- short -}
  _64 <- getShort h {- short -}
  _65 <- getShort h {- short -}
  _66 <- getShort h {- short -}
  _67 <- getShort h {- short -}
  _68 <- getPointer h {- void * * -}
  return $ View3D _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68
getView2D :: BHeader -> Get View2D
getView2D h = do
  _1 <- getRctf h {- struct rctf -}
  _2 <- getRctf h {- struct rctf -}
  _3 <- getRcti h {- struct rcti -}
  _4 <- getRcti h {- struct rcti -}
  _5 <- getRcti h {- struct rcti -}
  _6 <- replicateM 2 (getFloat h {- float -}) {- float[2] -}
  _7 <- replicateM 2 (getFloat h {- float -}) {- float[2] -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- getShort h {- short -}
  _16 <- getInt h {- int -}
  return $ View2D _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16
getSpaceLink :: BHeader -> Get SpaceLink
getSpaceLink h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- replicateM 8 (getShort h {- short -}) {- short[8] -}
  return $ SpaceLink _1 _2 _3 _4 _5 _6
getSpaceInfo :: BHeader -> Get SpaceInfo
getSpaceInfo h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- replicateM 8 (getShort h {- short -}) {- short[8] -}
  return $ SpaceInfo _1 _2 _3 _4 _5 _6
getSpaceIpo :: BHeader -> Get SpaceIpo
getSpaceIpo h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- replicateM 8 (getShort h {- short -}) {- short[8] -}
  _7 <- getInt h {- int -}
  _8 <- getInt h {- int -}
  _9 <- getView2D h {- struct View2D -}
  _10 <- getPointer h {- void * * -}
  _11 <- getListBase h {- struct ListBase -}
  _12 <- getPointer h {- struct Ipo * -}
  _13 <- getPointer h {- struct ID * -}
  _14 <- getByteString 32 {- char[32] -}
  _15 <- getByteString 32 {- char[32] -}
  _16 <- getShort h {- short -}
  _17 <- getShort h {- short -}
  _18 <- getShort h {- short -}
  _19 <- getShort h {- short -}
  _20 <- getShort h {- short -}
  _21 <- getShort h {- short -}
  _22 <- getShort h {- short -}
  _23 <- getShort h {- short -}
  _24 <- getInt h {- int -}
  _25 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _26 <- getRctf h {- struct rctf -}
  return $ SpaceIpo _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26
getSpaceButs :: BHeader -> Get SpaceButs
getSpaceButs h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- getPointer h {- UnknownCompound RenderInfo  -}
  _7 <- replicateM 8 (getShort h {- short -}) {- short[8] -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getView2D h {- struct View2D -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- getShort h {- short -}
  _16 <- getShort h {- short -}
  _17 <- getPointer h {- void * * -}
  _18 <- getShort h {- short -}
  _19 <- get {- char -}
  _20 <- get {- char -}
  _21 <- getShort h {- short -}
  _22 <- getShort h {- short -}
  _23 <- getShort h {- short -}
  _24 <- getShort h {- short -}
  _25 <- getShort h {- short -}
  _26 <- get {- char -}
  _27 <- get {- char -}
  _28 <- get {- char -}
  _29 <- getByteString 7 {- char[7] -}
  return $ SpaceButs _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29
getSpaceSeq :: BHeader -> Get SpaceSeq
getSpaceSeq h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- replicateM 8 (getShort h {- short -}) {- short[8] -}
  _7 <- getView2D h {- struct View2D -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getInt h {- int -}
  _15 <- getInt h {- int -}
  return $ SpaceSeq _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15
getSpaceFile :: BHeader -> Get SpaceFile
getSpaceFile h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- replicateM 8 (getShort h {- short -}) {- short[8] -}
  _7 <- getPointer h {- UnknownCompound direntry  -}
  _8 <- getInt h {- int -}
  _9 <- getByteString 24 {- char[24] -}
  _10 <- getByteString 160 {- char[160] -}
  _11 <- getByteString 80 {- char[80] -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- getShort h {- short -}
  _16 <- getShort h {- short -}
  _17 <- getShort h {- short -}
  _18 <- getPointer h {- UnknownCompound BlendHandle  -}
  _19 <- getShort h {- short -}
  _20 <- getShort h {- short -}
  _21 <- getShort h {- short -}
  _22 <- getShort h {- short -}
  _23 <- getPointer h {- void * (*xxx)() -}
  _24 <- getPointer h {- void * (*xxx)() -}
  _25 <- getPointer h {- void * (*xxx)() -}
  _26 <- getPointer h {- void * * -}
  _27 <- getPointer h {- void * * -}
  _28 <- getPointer h {- short * -}
  _29 <- getPointer h {- char * -}
  return $ SpaceFile _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29
getSpaceOops :: BHeader -> Get SpaceOops
getSpaceOops h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- replicateM 8 (getShort h {- short -}) {- short[8] -}
  _7 <- getView2D h {- struct View2D -}
  _8 <- getListBase h {- struct ListBase -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getPointer h {- void * * -}
  _14 <- getListBase h {- struct ListBase -}
  _15 <- getPointer h {- struct TreeStore * -}
  _16 <- getByteString 32 {- char[32] -}
  _17 <- getTreeStoreElem h {- struct TreeStoreElem -}
  _18 <- getInt h {- int -}
  _19 <- getInt h {- int -}
  _20 <- getShort h {- short -}
  _21 <- getShort h {- short -}
  _22 <- getShort h {- short -}
  _23 <- getShort h {- short -}
  return $ SpaceOops _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23
getSpaceImage :: BHeader -> Get SpaceImage
getSpaceImage h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- replicateM 8 (getShort h {- short -}) {- short[8] -}
  _7 <- getView2D h {- struct View2D -}
  _8 <- getPointer h {- struct Image * -}
  _9 <- getImageUser h {- struct ImageUser -}
  _10 <- getPointer h {- struct CurveMapping * -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- getInt h {- int -}
  _16 <- getShort h {- short -}
  _17 <- getShort h {- short -}
  _18 <- getShort h {- short -}
  _19 <- getShort h {- short -}
  _20 <- getFloat h {- float -}
  _21 <- getFloat h {- float -}
  _22 <- getFloat h {- float -}
  _23 <- getFloat h {- float -}
  _24 <- getFloat h {- float -}
  _25 <- getPointer h {- char * -}
  _26 <- getPointer h {- char * -}
  _27 <- getPointer h {- UnknownCompound ImBuf  -}
  return $ SpaceImage _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27
getSpaceNla :: BHeader -> Get SpaceNla
getSpaceNla h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- replicateM 8 (getShort h {- short -}) {- short[8] -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getInt h {- int -}
  _10 <- getView2D h {- struct View2D -}
  return $ SpaceNla _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getSpaceText :: BHeader -> Get SpaceText
getSpaceText h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- replicateM 8 (getShort h {- short -}) {- short[8] -}
  _7 <- getPointer h {- struct Text * -}
  _8 <- getInt h {- int -}
  _9 <- getInt h {- int -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getInt h {- int -}
  _13 <- getInt h {- int -}
  _14 <- getInt h {- int -}
  _15 <- getInt h {- int -}
  _16 <- getInt h {- int -}
  _17 <- getInt h {- int -}
  _18 <- getInt h {- int -}
  _19 <- getInt h {- int -}
  _20 <- getFloat h {- float -}
  _21 <- getRcti h {- struct rcti -}
  _22 <- getRcti h {- struct rcti -}
  return $ SpaceText _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22
getSpaceScript :: BHeader -> Get SpaceScript
getSpaceScript h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- getPointer h {- UnknownCompound Script  -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getInt h {- int -}
  _10 <- getPointer h {- void * * -}
  return $ SpaceScript _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getSpaceTime :: BHeader -> Get SpaceTime
getSpaceTime h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- getView2D h {- struct View2D -}
  _7 <- getInt h {- int -}
  _8 <- getInt h {- int -}
  return $ SpaceTime _1 _2 _3 _4 _5 _6 _7 _8
getSpaceNode :: BHeader -> Get SpaceNode
getSpaceNode h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- getView2D h {- struct View2D -}
  _7 <- getPointer h {- struct ID * -}
  _8 <- getPointer h {- struct ID * -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getFloat h {- float -}
  _12 <- getPointer h {- void * * -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getPointer h {- struct bNodeTree * -}
  _16 <- getPointer h {- struct bNodeTree * -}
  _17 <- getInt h {- int -}
  _18 <- getInt h {- int -}
  return $ SpaceNode _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18
getSpaceImaSel :: BHeader -> Get SpaceImaSel
getSpaceImaSel h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- getByteString 28 {- char[28] -}
  _7 <- getInt h {- int -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- getShort h {- short -}
  _16 <- getShort h {- short -}
  _17 <- getShort h {- short -}
  _18 <- getShort h {- short -}
  _19 <- getShort h {- short -}
  _20 <- getShort h {- short -}
  _21 <- getShort h {- short -}
  _22 <- getShort h {- short -}
  _23 <- getShort h {- short -}
  _24 <- getShort h {- short -}
  _25 <- getShort h {- short -}
  _26 <- getShort h {- short -}
  _27 <- getShort h {- short -}
  _28 <- getShort h {- short -}
  _29 <- getShort h {- short -}
  _30 <- getShort h {- short -}
  _31 <- getShort h {- short -}
  _32 <- getShort h {- short -}
  _33 <- getShort h {- short -}
  _34 <- getShort h {- short -}
  _35 <- getShort h {- short -}
  _36 <- getShort h {- short -}
  _37 <- getShort h {- short -}
  _38 <- getShort h {- short -}
  _39 <- getShort h {- short -}
  _40 <- getShort h {- short -}
  _41 <- getShort h {- short -}
  _42 <- getShort h {- short -}
  _43 <- getShort h {- short -}
  _44 <- getShort h {- short -}
  _45 <- getShort h {- short -}
  _46 <- getShort h {- short -}
  _47 <- getShort h {- short -}
  _48 <- getShort h {- short -}
  _49 <- getShort h {- short -}
  _50 <- getShort h {- short -}
  _51 <- getShort h {- short -}
  _52 <- getShort h {- short -}
  _53 <- getShort h {- short -}
  _54 <- getShort h {- short -}
  _55 <- getShort h {- short -}
  _56 <- getByteString 128 {- char[128] -}
  _57 <- getByteString 128 {- char[128] -}
  _58 <- getByteString 128 {- char[128] -}
  _59 <- getByteString 128 {- char[128] -}
  _60 <- getPointer h {- UnknownCompound ImaDir  -}
  _61 <- getPointer h {- UnknownCompound ImaDir  -}
  _62 <- getInt h {- int -}
  _63 <- getInt h {- int -}
  _64 <- getInt h {- int -}
  _65 <- getInt h {- int -}
  _66 <- getInt h {- int -}
  _67 <- getFloat h {- float -}
  _68 <- getFloat h {- float -}
  _69 <- getFloat h {- float -}
  _70 <- getShort h {- short -}
  _71 <- getShort h {- short -}
  _72 <- getShort h {- short -}
  _73 <- getShort h {- short -}
  _74 <- getPointer h {- UnknownCompound OneSelectableIma  -}
  _75 <- getPointer h {- UnknownCompound OneSelectableIma  -}
  _76 <- getShort h {- short -}
  _77 <- getShort h {- short -}
  _78 <- getInt h {- int -}
  _79 <- getPointer h {- UnknownCompound ImBuf  -}
  _80 <- getPointer h {- void * (*xxx)() -}
  _81 <- getPointer h {- void * * -}
  return $ SpaceImaSel _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52 _53 _54 _55 _56 _57 _58 _59 _60 _61 _62 _63 _64 _65 _66 _67 _68 _69 _70 _71 _72 _73 _74 _75 _76 _77 _78 _79 _80 _81
getThemeUI :: BHeader -> Get ThemeUI
getThemeUI h = do
  _1 <- getByteString 4 {- char[4] -}
  _2 <- getByteString 4 {- char[4] -}
  _3 <- getByteString 4 {- char[4] -}
  _4 <- getByteString 4 {- char[4] -}
  _5 <- getByteString 4 {- char[4] -}
  _6 <- getByteString 4 {- char[4] -}
  _7 <- getByteString 4 {- char[4] -}
  _8 <- getByteString 4 {- char[4] -}
  _9 <- getByteString 4 {- char[4] -}
  _10 <- getByteString 4 {- char[4] -}
  _11 <- getByteString 4 {- char[4] -}
  _12 <- getByteString 4 {- char[4] -}
  _13 <- getByteString 4 {- char[4] -}
  _14 <- getByteString 4 {- char[4] -}
  _15 <- getByteString 4 {- char[4] -}
  _16 <- getByteString 4 {- char[4] -}
  _17 <- getByteString 4 {- char[4] -}
  _18 <- get {- char -}
  _19 <- getByteString 3 {- char[3] -}
  _20 <- getByteString 80 {- char[80] -}
  return $ ThemeUI _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20
getThemeSpace :: BHeader -> Get ThemeSpace
getThemeSpace h = do
  _1 <- getByteString 4 {- char[4] -}
  _2 <- getByteString 4 {- char[4] -}
  _3 <- getByteString 4 {- char[4] -}
  _4 <- getByteString 4 {- char[4] -}
  _5 <- getByteString 4 {- char[4] -}
  _6 <- getByteString 4 {- char[4] -}
  _7 <- getByteString 4 {- char[4] -}
  _8 <- getByteString 4 {- char[4] -}
  _9 <- getByteString 4 {- char[4] -}
  _10 <- getByteString 4 {- char[4] -}
  _11 <- getByteString 4 {- char[4] -}
  _12 <- getByteString 4 {- char[4] -}
  _13 <- getByteString 4 {- char[4] -}
  _14 <- getByteString 4 {- char[4] -}
  _15 <- getByteString 4 {- char[4] -}
  _16 <- getByteString 4 {- char[4] -}
  _17 <- getByteString 4 {- char[4] -}
  _18 <- getByteString 4 {- char[4] -}
  _19 <- getByteString 4 {- char[4] -}
  _20 <- getByteString 4 {- char[4] -}
  _21 <- getByteString 4 {- char[4] -}
  _22 <- getByteString 4 {- char[4] -}
  _23 <- getByteString 4 {- char[4] -}
  _24 <- getByteString 4 {- char[4] -}
  _25 <- getByteString 4 {- char[4] -}
  _26 <- getByteString 4 {- char[4] -}
  _27 <- getByteString 4 {- char[4] -}
  _28 <- getByteString 4 {- char[4] -}
  _29 <- getByteString 4 {- char[4] -}
  _30 <- getByteString 4 {- char[4] -}
  _31 <- getByteString 4 {- char[4] -}
  _32 <- get {- char -}
  _33 <- get {- char -}
  _34 <- getByteString 2 {- char[2] -}
  _35 <- getByteString 4 {- char[4] -}
  _36 <- getByteString 4 {- char[4] -}
  _37 <- getByteString 4 {- char[4] -}
  _38 <- getByteString 4 {- char[4] -}
  _39 <- getByteString 4 {- char[4] -}
  _40 <- getByteString 4 {- char[4] -}
  _41 <- getByteString 4 {- char[4] -}
  _42 <- getByteString 4 {- char[4] -}
  _43 <- getByteString 4 {- char[4] -}
  _44 <- getByteString 4 {- char[4] -}
  _45 <- getByteString 4 {- char[4] -}
  _46 <- getByteString 4 {- char[4] -}
  _47 <- getByteString 4 {- char[4] -}
  _48 <- getByteString 4 {- char[4] -}
  return $ ThemeSpace _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48
getBTheme :: BHeader -> Get BTheme
getBTheme h = do
  _1 <- getPointer h {- struct bTheme * -}
  _2 <- getPointer h {- struct bTheme * -}
  _3 <- getByteString 32 {- char[32] -}
  _4 <- getThemeUI h {- struct ThemeUI -}
  _5 <- getThemeSpace h {- struct ThemeSpace -}
  _6 <- getThemeSpace h {- struct ThemeSpace -}
  _7 <- getThemeSpace h {- struct ThemeSpace -}
  _8 <- getThemeSpace h {- struct ThemeSpace -}
  _9 <- getThemeSpace h {- struct ThemeSpace -}
  _10 <- getThemeSpace h {- struct ThemeSpace -}
  _11 <- getThemeSpace h {- struct ThemeSpace -}
  _12 <- getThemeSpace h {- struct ThemeSpace -}
  _13 <- getThemeSpace h {- struct ThemeSpace -}
  _14 <- getThemeSpace h {- struct ThemeSpace -}
  _15 <- getThemeSpace h {- struct ThemeSpace -}
  _16 <- getThemeSpace h {- struct ThemeSpace -}
  _17 <- getThemeSpace h {- struct ThemeSpace -}
  _18 <- getThemeSpace h {- struct ThemeSpace -}
  _19 <- getThemeSpace h {- struct ThemeSpace -}
  _20 <- getByteString 4 {- char[4] -}
  _21 <- getByteString 4 {- char[4] -}
  return $ BTheme _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21
getSolidLight :: BHeader -> Get SolidLight
getSolidLight h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  _4 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  _5 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  return $ SolidLight _1 _2 _3 _4 _5
getUserDef :: BHeader -> Get UserDef
getUserDef h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getByteString 160 {- char[160] -}
  _5 <- getByteString 160 {- char[160] -}
  _6 <- getByteString 160 {- char[160] -}
  _7 <- getByteString 160 {- char[160] -}
  _8 <- getByteString 160 {- char[160] -}
  _9 <- getByteString 160 {- char[160] -}
  _10 <- getByteString 160 {- char[160] -}
  _11 <- getByteString 160 {- char[160] -}
  _12 <- getByteString 160 {- char[160] -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- getInt h {- int -}
  _16 <- getInt h {- int -}
  _17 <- getInt h {- int -}
  _18 <- getInt h {- int -}
  _19 <- getShort h {- short -}
  _20 <- getShort h {- short -}
  _21 <- getShort h {- short -}
  _22 <- getShort h {- short -}
  _23 <- getInt h {- int -}
  _24 <- getInt h {- int -}
  _25 <- getShort h {- short -}
  _26 <- getShort h {- short -}
  _27 <- getShort h {- short -}
  _28 <- getShort h {- short -}
  _29 <- getByteString 256 {- char[256] -}
  _30 <- getListBase h {- struct ListBase -}
  _31 <- getShort h {- short -}
  _32 <- getShort h {- short -}
  _33 <- getShort h {- short -}
  _34 <- getShort h {- short -}
  _35 <- replicateM 3 (getSolidLight h {- struct SolidLight -}) {- struct SolidLight[3] -}
  _36 <- getShort h {- short -}
  _37 <- getShort h {- short -}
  _38 <- getShort h {- short -}
  _39 <- getShort h {- short -}
  _40 <- getInt h {- int -}
  _41 <- getInt h {- int -}
  _42 <- getInt h {- int -}
  _43 <- getShort h {- short -}
  _44 <- getShort h {- short -}
  _45 <- getShort h {- short -}
  _46 <- getShort h {- short -}
  _47 <- getShort h {- short -}
  _48 <- getByteString 160 {- char[160] -}
  _49 <- getByteString 160 {- char[160] -}
  _50 <- getShort h {- short -}
  _51 <- getShort h {- short -}
  _52 <- getByteString 6 {- char[6] -}
  return $ UserDef _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45 _46 _47 _48 _49 _50 _51 _52
getBScreen :: BHeader -> Get BScreen
getBScreen h = do
  _1 <- getID h {- struct ID -}
  _2 <- getListBase h {- struct ListBase -}
  _3 <- getListBase h {- struct ListBase -}
  _4 <- getListBase h {- struct ListBase -}
  _5 <- getPointer h {- struct Scene * -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- getShort h {- short -}
  _16 <- getShort h {- short -}
  _17 <- getShort h {- short -}
  _18 <- replicateM 8 (getShort h {- short -}) {- short[8] -}
  return $ BScreen _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18
getScrVert :: BHeader -> Get ScrVert
getScrVert h = do
  _1 <- getPointer h {- struct ScrVert * -}
  _2 <- getPointer h {- struct ScrVert * -}
  _3 <- getPointer h {- struct ScrVert * -}
  _4 <- getVec2s h {- struct vec2s -}
  _5 <- getInt h {- int -}
  return $ ScrVert _1 _2 _3 _4 _5
getScrEdge :: BHeader -> Get ScrEdge
getScrEdge h = do
  _1 <- getPointer h {- struct ScrEdge * -}
  _2 <- getPointer h {- struct ScrEdge * -}
  _3 <- getPointer h {- struct ScrVert * -}
  _4 <- getPointer h {- struct ScrVert * -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getInt h {- int -}
  return $ ScrEdge _1 _2 _3 _4 _5 _6 _7
getPanel :: BHeader -> Get Panel
getPanel h = do
  _1 <- getPointer h {- struct Panel * -}
  _2 <- getPointer h {- struct Panel * -}
  _3 <- getByteString 64 {- char[64] -}
  _4 <- getByteString 64 {- char[64] -}
  _5 <- getByteString 64 {- char[64] -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- getShort h {- short -}
  _16 <- getInt h {- int -}
  _17 <- getPointer h {- struct Panel * -}
  return $ Panel _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17
getScrArea :: BHeader -> Get ScrArea
getScrArea h = do
  _1 <- getPointer h {- struct ScrArea * -}
  _2 <- getPointer h {- struct ScrArea * -}
  _3 <- getPointer h {- struct ScrVert * -}
  _4 <- getPointer h {- struct ScrVert * -}
  _5 <- getPointer h {- struct ScrVert * -}
  _6 <- getPointer h {- struct ScrVert * -}
  _7 <- getPointer h {- struct bScreen * -}
  _8 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _9 <- getRcti h {- struct rcti -}
  _10 <- getRcti h {- struct rcti -}
  _11 <- getRcti h {- struct rcti -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- get {- char -}
  _16 <- get {- char -}
  _17 <- getShort h {- short -}
  _18 <- getShort h {- short -}
  _19 <- get {- char -}
  _20 <- get {- char -}
  _21 <- get {- char -}
  _22 <- get {- char -}
  _23 <- getShort h {- short -}
  _24 <- getShort h {- short -}
  _25 <- getShort h {- short -}
  _26 <- getShort h {- short -}
  _27 <- getScriptLink h {- struct ScriptLink -}
  _28 <- getListBase h {- struct ListBase -}
  _29 <- getListBase h {- struct ListBase -}
  _30 <- getListBase h {- struct ListBase -}
  return $ ScrArea _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30
getFileGlobal :: BHeader -> Get FileGlobal
getFileGlobal h = do
  _1 <- getByteString 4 {- char[4] -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getPointer h {- void * * -}
  _9 <- getPointer h {- void * * -}
  _10 <- getInt h {- int -}
  _11 <- getInt h {- int -}
  return $ FileGlobal _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11
getStripElem :: BHeader -> Get StripElem
getStripElem h = do
  _1 <- getByteString 80 {- char[80] -}
  _2 <- getPointer h {- UnknownCompound ImBuf  -}
  _3 <- getPointer h {- struct StripElem * -}
  _4 <- getPointer h {- struct StripElem * -}
  _5 <- getPointer h {- struct StripElem * -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getInt h {- int -}
  return $ StripElem _1 _2 _3 _4 _5 _6 _7 _8
getStrip :: BHeader -> Get Strip
getStrip h = do
  _1 <- getPointer h {- struct Strip * -}
  _2 <- getPointer h {- struct Strip * -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getInt h {- int -}
  _7 <- getPointer h {- struct StripElem * -}
  _8 <- getByteString 160 {- char[160] -}
  _9 <- getInt h {- int -}
  _10 <- getInt h {- int -}
  return $ Strip _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getPluginSeq :: BHeader -> Get PluginSeq
getPluginSeq h = do
  _1 <- getByteString 256 {- char[256] -}
  _2 <- getPointer h {- void * * -}
  _3 <- getPointer h {- char * -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getPointer h {- void * * -}
  _7 <- getPointer h {- float * -}
  _8 <- replicateM 32 (getFloat h {- float -}) {- float[32] -}
  _9 <- getPointer h {- void * * -}
  _10 <- getPointer h {- void * * * -}
  _11 <- getPointer h {- void * (*xxx)() -}
  _12 <- getPointer h {- void * (*xxx)() -}
  return $ PluginSeq _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12
getSequence :: BHeader -> Get Sequence
getSequence h = do
  _1 <- getPointer h {- struct Sequence * -}
  _2 <- getPointer h {- struct Sequence * -}
  _3 <- getPointer h {- struct Sequence * -}
  _4 <- getPointer h {- void * * -}
  _5 <- getByteString 24 {- char[24] -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getInt h {- int -}
  _9 <- getInt h {- int -}
  _10 <- getInt h {- int -}
  _11 <- getInt h {- int -}
  _12 <- getInt h {- int -}
  _13 <- getInt h {- int -}
  _14 <- getInt h {- int -}
  _15 <- getInt h {- int -}
  _16 <- getInt h {- int -}
  _17 <- getInt h {- int -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- getInt h {- int -}
  _21 <- getPointer h {- struct Strip * -}
  _22 <- getPointer h {- struct StripElem * -}
  _23 <- getPointer h {- struct Ipo * -}
  _24 <- getPointer h {- struct Scene * -}
  _25 <- getPointer h {- UnknownCompound anim  -}
  _26 <- getFloat h {- float -}
  _27 <- getFloat h {- float -}
  _28 <- getPointer h {- struct PluginSeq * -}
  _29 <- getPointer h {- struct Sequence * -}
  _30 <- getPointer h {- struct Sequence * -}
  _31 <- getPointer h {- struct Sequence * -}
  _32 <- getListBase h {- struct ListBase -}
  _33 <- getPointer h {- struct bSound * -}
  _34 <- getPointer h {- UnknownCompound hdaudio  -}
  _35 <- getFloat h {- float -}
  _36 <- getFloat h {- float -}
  _37 <- getInt h {- int -}
  _38 <- getFloat h {- float -}
  _39 <- getPointer h {- void * * -}
  _40 <- getInt h {- int -}
  _41 <- getInt h {- int -}
  return $ Sequence _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41
getMetaStack :: BHeader -> Get MetaStack
getMetaStack h = do
  _1 <- getPointer h {- struct MetaStack * -}
  _2 <- getPointer h {- struct MetaStack * -}
  _3 <- getPointer h {- struct ListBase * -}
  _4 <- getPointer h {- struct Sequence * -}
  return $ MetaStack _1 _2 _3 _4
getEditing :: BHeader -> Get Editing
getEditing h = do
  _1 <- getPointer h {- struct ListBase * -}
  _2 <- getListBase h {- struct ListBase -}
  _3 <- getListBase h {- struct ListBase -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getInt h {- int -}
  return $ Editing _1 _2 _3 _4 _5 _6
getWipeVars :: BHeader -> Get WipeVars
getWipeVars h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  return $ WipeVars _1 _2 _3 _4
getGlowVars :: BHeader -> Get GlowVars
getGlowVars h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getInt h {- int -}
  _6 <- getInt h {- int -}
  return $ GlowVars _1 _2 _3 _4 _5 _6
getTransformVars :: BHeader -> Get TransformVars
getTransformVars h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  return $ TransformVars _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getSolidColorVars :: BHeader -> Get SolidColorVars
getSolidColorVars h = do
  _1 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _2 <- getFloat h {- float -}
  return $ SolidColorVars _1 _2
getSpeedControlVars :: BHeader -> Get SpeedControlVars
getSpeedControlVars h = do
  _1 <- getPointer h {- float * -}
  _2 <- getFloat h {- float -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  return $ SpeedControlVars _1 _2 _3 _4 _5
getEffect :: BHeader -> Get Effect
getEffect h = do
  _1 <- getPointer h {- struct Effect * -}
  _2 <- getPointer h {- struct Effect * -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  return $ Effect _1 _2 _3 _4 _5 _6
getBuildEff :: BHeader -> Get BuildEff
getBuildEff h = do
  _1 <- getPointer h {- struct BuildEff * -}
  _2 <- getPointer h {- struct BuildEff * -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  return $ BuildEff _1 _2 _3 _4 _5 _6 _7 _8
getPartEff :: BHeader -> Get PartEff
getPartEff h = do
  _1 <- getPointer h {- struct PartEff * -}
  _2 <- getPointer h {- struct PartEff * -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  _11 <- getFloat h {- float -}
  _12 <- getInt h {- int -}
  _13 <- getInt h {- int -}
  _14 <- getInt h {- int -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  _17 <- getFloat h {- float -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _21 <- getFloat h {- float -}
  _22 <- getFloat h {- float -}
  _23 <- getFloat h {- float -}
  _24 <- getFloat h {- float -}
  _25 <- getFloat h {- float -}
  _26 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _27 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  _28 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  _29 <- replicateM 4 (getShort h {- short -}) {- short[4] -}
  _30 <- replicateM 4 (getShort h {- short -}) {- short[4] -}
  _31 <- getShort h {- short -}
  _32 <- getShort h {- short -}
  _33 <- getShort h {- short -}
  _34 <- getShort h {- short -}
  _35 <- getShort h {- short -}
  _36 <- getShort h {- short -}
  _37 <- getShort h {- short -}
  _38 <- getShort h {- short -}
  _39 <- getShort h {- short -}
  _40 <- getShort h {- short -}
  _41 <- getByteString 32 {- char[32] -}
  _42 <- getByteString 32 {- char[32] -}
  _43 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _44 <- getPointer h {- UnknownCompound Particle  -}
  _45 <- getPointer h {- struct Group * -}
  return $ PartEff _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31 _32 _33 _34 _35 _36 _37 _38 _39 _40 _41 _42 _43 _44 _45
getWaveEff :: BHeader -> Get WaveEff
getWaveEff h = do
  _1 <- getPointer h {- struct WaveEff * -}
  _2 <- getPointer h {- struct WaveEff * -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  _11 <- getFloat h {- float -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  return $ WaveEff _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16
getTreeStoreElem :: BHeader -> Get TreeStoreElem
getTreeStoreElem h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getPointer h {- struct ID * -}
  return $ TreeStoreElem _1 _2 _3 _4 _5
getTreeStore :: BHeader -> Get TreeStore
getTreeStore h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getPointer h {- struct TreeStoreElem * -}
  return $ TreeStore _1 _2 _3
getOops :: BHeader -> Get Oops
getOops h = do
  _1 <- getPointer h {- struct Oops * -}
  _2 <- getPointer h {- struct Oops * -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  _11 <- getPointer h {- struct ID * -}
  _12 <- getListBase h {- struct ListBase -}
  return $ Oops _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12
getBProperty :: BHeader -> Get BProperty
getBProperty h = do
  _1 <- getPointer h {- struct bProperty * -}
  _2 <- getPointer h {- struct bProperty * -}
  _3 <- getByteString 32 {- char[32] -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getInt h {- int -}
  _7 <- getInt h {- int -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getPointer h {- void * * -}
  _11 <- getPointer h {- void * * -}
  return $ BProperty _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11
getBNearSensor :: BHeader -> Get BNearSensor
getBNearSensor h = do
  _1 <- getByteString 32 {- char[32] -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  return $ BNearSensor _1 _2 _3 _4 _5
getBMouseSensor :: BHeader -> Get BMouseSensor
getBMouseSensor h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  return $ BMouseSensor _1 _2 _3 _4
getBTouchSensor :: BHeader -> Get BTouchSensor
getBTouchSensor h = do
  _1 <- getByteString 32 {- char[32] -}
  _2 <- getPointer h {- struct Material * -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  return $ BTouchSensor _1 _2 _3 _4
getBKeyboardSensor :: BHeader -> Get BKeyboardSensor
getBKeyboardSensor h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getByteString 32 {- char[32] -}
  _6 <- getByteString 32 {- char[32] -}
  return $ BKeyboardSensor _1 _2 _3 _4 _5 _6
getBPropertySensor :: BHeader -> Get BPropertySensor
getBPropertySensor h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getByteString 32 {- char[32] -}
  _4 <- getByteString 32 {- char[32] -}
  _5 <- getByteString 32 {- char[32] -}
  return $ BPropertySensor _1 _2 _3 _4 _5
getBCollisionSensor :: BHeader -> Get BCollisionSensor
getBCollisionSensor h = do
  _1 <- getByteString 32 {- char[32] -}
  _2 <- getByteString 32 {- char[32] -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  return $ BCollisionSensor _1 _2 _3 _4 _5 _6
getBRadarSensor :: BHeader -> Get BRadarSensor
getBRadarSensor h = do
  _1 <- getByteString 32 {- char[32] -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  return $ BRadarSensor _1 _2 _3 _4 _5
getBRandomSensor :: BHeader -> Get BRandomSensor
getBRandomSensor h = do
  _1 <- getByteString 32 {- char[32] -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  return $ BRandomSensor _1 _2 _3
getBRaySensor :: BHeader -> Get BRaySensor
getBRaySensor h = do
  _1 <- getByteString 32 {- char[32] -}
  _2 <- getFloat h {- float -}
  _3 <- getByteString 32 {- char[32] -}
  _4 <- getByteString 32 {- char[32] -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getInt h {- int -}
  return $ BRaySensor _1 _2 _3 _4 _5 _6 _7
getBMessageSensor :: BHeader -> Get BMessageSensor
getBMessageSensor h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getByteString 32 {- char[32] -}
  _3 <- getByteString 32 {- char[32] -}
  return $ BMessageSensor _1 _2 _3
getBSensor :: BHeader -> Get BSensor
getBSensor h = do
  _1 <- getPointer h {- struct bSensor * -}
  _2 <- getPointer h {- struct bSensor * -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getByteString 32 {- char[32] -}
  _12 <- getPointer h {- void * * -}
  _13 <- getPointer h {- struct bController * * -}
  _14 <- getPointer h {- struct Object * -}
  _15 <- getShort h {- short -}
  _16 <- getShort h {- short -}
  _17 <- getInt h {- int -}
  return $ BSensor _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17
getBJoystickSensor :: BHeader -> Get BJoystickSensor
getBJoystickSensor h = do
  _1 <- getByteString 32 {- char[32] -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getInt h {- int -}
  _7 <- getInt h {- int -}
  _8 <- getInt h {- int -}
  _9 <- getInt h {- int -}
  _10 <- getInt h {- int -}
  return $ BJoystickSensor _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getBExpressionCont :: BHeader -> Get BExpressionCont
getBExpressionCont h = do
  _1 <- getByteString 128 {- char[128] -}
  return $ BExpressionCont _1
getBPythonCont :: BHeader -> Get BPythonCont
getBPythonCont h = do
  _1 <- getPointer h {- struct Text * -}
  return $ BPythonCont _1
getBController :: BHeader -> Get BController
getBController h = do
  _1 <- getPointer h {- struct bController * -}
  _2 <- getPointer h {- struct bController * -}
  _3 <- getPointer h {- struct bController * -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getByteString 32 {- char[32] -}
  _13 <- getPointer h {- void * * -}
  _14 <- getPointer h {- struct bActuator * * -}
  _15 <- getPointer h {- struct bSensor * * -}
  _16 <- getShort h {- short -}
  _17 <- getShort h {- short -}
  _18 <- getInt h {- int -}
  return $ BController _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18
getBAddObjectActuator :: BHeader -> Get BAddObjectActuator
getBAddObjectActuator h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getPointer h {- struct Object * -}
  return $ BAddObjectActuator _1 _2 _3
getBActionActuator :: BHeader -> Get BActionActuator
getBActionActuator h = do
  _1 <- getPointer h {- struct bAction * -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getByteString 32 {- char[32] -}
  _7 <- getInt h {- int -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getFloat h {- float -}
  return $ BActionActuator _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getBSoundActuator :: BHeader -> Get BSoundActuator
getBSoundActuator h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- replicateM 2 (getShort h {- short -}) {- short[2] -}
  _6 <- getPointer h {- struct bSound * -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- replicateM 1 (getShort h {- short -}) {- short[1] -}
  return $ BSoundActuator _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getBCDActuator :: BHeader -> Get BCDActuator
getBCDActuator h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getFloat h {- float -}
  return $ BCDActuator _1 _2 _3 _4 _5 _6 _7
getBEditObjectActuator :: BHeader -> Get BEditObjectActuator
getBEditObjectActuator h = do
  _1 <- getInt h {- int -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getPointer h {- struct Object * -}
  _5 <- getPointer h {- struct Mesh * -}
  _6 <- getByteString 32 {- char[32] -}
  _7 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  return $ BEditObjectActuator _1 _2 _3 _4 _5 _6 _7 _8 _9
getBSceneActuator :: BHeader -> Get BSceneActuator
getBSceneActuator h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getInt h {- int -}
  _4 <- getPointer h {- struct Scene * -}
  _5 <- getPointer h {- struct Object * -}
  return $ BSceneActuator _1 _2 _3 _4 _5
getBPropertyActuator :: BHeader -> Get BPropertyActuator
getBPropertyActuator h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getByteString 32 {- char[32] -}
  _4 <- getByteString 32 {- char[32] -}
  _5 <- getPointer h {- struct Object * -}
  return $ BPropertyActuator _1 _2 _3 _4 _5
getBObjectActuator :: BHeader -> Get BObjectActuator
getBObjectActuator h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _4 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _5 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _6 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _7 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _8 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _9 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _10 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  return $ BObjectActuator _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getBIpoActuator :: BHeader -> Get BIpoActuator
getBIpoActuator h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getByteString 32 {- char[32] -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  return $ BIpoActuator _1 _2 _3 _4 _5 _6 _7 _8 _9
getBCameraActuator :: BHeader -> Get BCameraActuator
getBCameraActuator h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getFloat h {- float -}
  return $ BCameraActuator _1 _2 _3 _4 _5 _6 _7 _8
getBConstraintActuator :: BHeader -> Get BConstraintActuator
getBConstraintActuator h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getFloat h {- float -}
  _4 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _5 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _6 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _7 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  return $ BConstraintActuator _1 _2 _3 _4 _5 _6 _7
getBGroupActuator :: BHeader -> Get BGroupActuator
getBGroupActuator h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getByteString 32 {- char[32] -}
  _6 <- replicateM 3 (getShort h {- short -}) {- short[3] -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getPointer h {- struct Group * -}
  return $ BGroupActuator _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getBRandomActuator :: BHeader -> Get BRandomActuator
getBRandomActuator h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- getByteString 32 {- char[32] -}
  return $ BRandomActuator _1 _2 _3 _4 _5 _6 _7
getBMessageActuator :: BHeader -> Get BMessageActuator
getBMessageActuator h = do
  _1 <- getByteString 32 {- char[32] -}
  _2 <- getPointer h {- struct Object * -}
  _3 <- getByteString 32 {- char[32] -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getInt h {- int -}
  _7 <- getByteString 32 {- char[32] -}
  return $ BMessageActuator _1 _2 _3 _4 _5 _6 _7
getBGameActuator :: BHeader -> Get BGameActuator
getBGameActuator h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getByteString 64 {- char[64] -}
  _6 <- getByteString 64 {- char[64] -}
  return $ BGameActuator _1 _2 _3 _4 _5 _6
getBVisibilityActuator :: BHeader -> Get BVisibilityActuator
getBVisibilityActuator h = do
  _1 <- getInt h {- int -}
  return $ BVisibilityActuator _1
getBActuator :: BHeader -> Get BActuator
getBActuator h = do
  _1 <- getPointer h {- struct bActuator * -}
  _2 <- getPointer h {- struct bActuator * -}
  _3 <- getPointer h {- struct bActuator * -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getByteString 32 {- char[32] -}
  _9 <- getPointer h {- void * * -}
  _10 <- getPointer h {- struct Object * -}
  return $ BActuator _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getFreeCamera :: BHeader -> Get FreeCamera
getFreeCamera h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getInt h {- int -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  return $ FreeCamera _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getBSound :: BHeader -> Get BSound
getBSound h = do
  _1 <- getID h {- struct ID -}
  _2 <- getByteString 160 {- char[160] -}
  _3 <- getPointer h {- UnknownCompound bSample  -}
  _4 <- getPointer h {- void * * -}
  _5 <- getPointer h {- struct PackedFile * -}
  _6 <- getPointer h {- struct PackedFile * -}
  _7 <- getPointer h {- void * * -}
  _8 <- getPointer h {- struct Ipo * -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  _11 <- getFloat h {- float -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getInt h {- int -}
  _17 <- getInt h {- int -}
  _18 <- get {- char -}
  _19 <- get {- char -}
  _20 <- getByteString 10 {- char[10] -}
  return $ BSound _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20
getBSoundListener :: BHeader -> Get BSoundListener
getBSoundListener h = do
  _1 <- getID h {- struct ID -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  return $ BSoundListener _1 _2 _3 _4 _5 _6
getSpaceSound :: BHeader -> Get SpaceSound
getSpaceSound h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- getView2D h {- struct View2D -}
  _7 <- getPointer h {- struct bSound * -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getInt h {- int -}
  return $ SpaceSound _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14
getGroupObject :: BHeader -> Get GroupObject
getGroupObject h = do
  _1 <- getPointer h {- struct GroupObject * -}
  _2 <- getPointer h {- struct GroupObject * -}
  _3 <- getPointer h {- struct Object * -}
  _4 <- getPointer h {- void * * -}
  _5 <- getInt h {- int -}
  _6 <- getInt h {- int -}
  return $ GroupObject _1 _2 _3 _4 _5 _6
getGroup :: BHeader -> Get Group
getGroup h = do
  _1 <- getID h {- struct ID -}
  _2 <- getListBase h {- struct ListBase -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  return $ Group _1 _2 _3 _4
getBone :: BHeader -> Get Bone
getBone h = do
  _1 <- getPointer h {- struct Bone * -}
  _2 <- getPointer h {- struct Bone * -}
  _3 <- getPointer h {- struct Bone * -}
  _4 <- getListBase h {- struct ListBase -}
  _5 <- getByteString 32 {- char[32] -}
  _6 <- getFloat h {- float -}
  _7 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _8 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _9 <- replicateM 3 (replicateM 3 (getFloat h {- float -}) {- float[3] -}) {- float [3][3] -}
  _10 <- getInt h {- int -}
  _11 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _12 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _13 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  _17 <- getFloat h {- float -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- getFloat h {- float -}
  _21 <- getFloat h {- float -}
  _22 <- getFloat h {- float -}
  _23 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _24 <- getShort h {- short -}
  _25 <- getShort h {- short -}
  return $ Bone _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25
getBArmature :: BHeader -> Get BArmature
getBArmature h = do
  _1 <- getID h {- struct ID -}
  _2 <- getListBase h {- struct ListBase -}
  _3 <- getListBase h {- struct ListBase -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getInt h {- int -}
  _15 <- getInt h {- int -}
  _16 <- getInt h {- int -}
  _17 <- getInt h {- int -}
  return $ BArmature _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17
getBPoseChannel :: BHeader -> Get BPoseChannel
getBPoseChannel h = do
  _1 <- getPointer h {- struct bPoseChannel * -}
  _2 <- getPointer h {- struct bPoseChannel * -}
  _3 <- getListBase h {- struct ListBase -}
  _4 <- getByteString 32 {- char[32] -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getInt h {- int -}
  _12 <- getInt h {- int -}
  _13 <- getInt h {- int -}
  _14 <- getPointer h {- struct Bone * -}
  _15 <- getPointer h {- struct bPoseChannel * -}
  _16 <- getPointer h {- struct bPoseChannel * -}
  _17 <- getListBase h {- struct ListBase -}
  _18 <- getPointer h {- void * * -}
  _19 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _20 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _21 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  _22 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _23 <- replicateM 4 (replicateM 4 (getFloat h {- float -}) {- float[4] -}) {- float [4][4] -}
  _24 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _25 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _26 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _27 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _28 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _29 <- getFloat h {- float -}
  _30 <- getPointer h {- float * -}
  _31 <- getPointer h {- struct Object * -}
  return $ BPoseChannel _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29 _30 _31
getBPose :: BHeader -> Get BPose
getBPose h = do
  _1 <- getListBase h {- struct ListBase -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getFloat h {- float -}
  _5 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _6 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  return $ BPose _1 _2 _3 _4 _5 _6
getBActionChannel :: BHeader -> Get BActionChannel
getBActionChannel h = do
  _1 <- getPointer h {- struct bActionChannel * -}
  _2 <- getPointer h {- struct bActionChannel * -}
  _3 <- getPointer h {- struct Ipo * -}
  _4 <- getListBase h {- struct ListBase -}
  _5 <- getInt h {- int -}
  _6 <- getByteString 32 {- char[32] -}
  _7 <- getInt h {- int -}
  return $ BActionChannel _1 _2 _3 _4 _5 _6 _7
getBAction :: BHeader -> Get BAction
getBAction h = do
  _1 <- getID h {- struct ID -}
  _2 <- getListBase h {- struct ListBase -}
  return $ BAction _1 _2
getSpaceAction :: BHeader -> Get SpaceAction
getSpaceAction h = do
  _1 <- getPointer h {- struct SpaceLink * -}
  _2 <- getPointer h {- struct SpaceLink * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getPointer h {- struct ScrArea * -}
  _6 <- replicateM 8 (getShort h {- short -}) {- short[8] -}
  _7 <- getView2D h {- struct View2D -}
  _8 <- getPointer h {- struct bAction * -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- getFloat h {- float -}
  return $ SpaceAction _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15
getBConstraintChannel :: BHeader -> Get BConstraintChannel
getBConstraintChannel h = do
  _1 <- getPointer h {- struct bConstraintChannel * -}
  _2 <- getPointer h {- struct bConstraintChannel * -}
  _3 <- getPointer h {- struct Ipo * -}
  _4 <- getShort h {- short -}
  _5 <- getByteString 30 {- char[30] -}
  return $ BConstraintChannel _1 _2 _3 _4 _5
getBConstraint :: BHeader -> Get BConstraint
getBConstraint h = do
  _1 <- getPointer h {- struct bConstraint * -}
  _2 <- getPointer h {- struct bConstraint * -}
  _3 <- getPointer h {- void * * -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getByteString 30 {- char[30] -}
  _8 <- getFloat h {- float -}
  return $ BConstraint _1 _2 _3 _4 _5 _6 _7 _8
getBKinematicConstraint :: BHeader -> Get BKinematicConstraint
getBKinematicConstraint h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getInt h {- int -}
  _5 <- getByteString 32 {- char[32] -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _9 <- getInt h {- int -}
  return $ BKinematicConstraint _1 _2 _3 _4 _5 _6 _7 _8 _9
getBTrackToConstraint :: BHeader -> Get BTrackToConstraint
getBTrackToConstraint h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getByteString 32 {- char[32] -}
  return $ BTrackToConstraint _1 _2 _3 _4 _5 _6
getBRotateLikeConstraint :: BHeader -> Get BRotateLikeConstraint
getBRotateLikeConstraint h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getByteString 32 {- char[32] -}
  return $ BRotateLikeConstraint _1 _2 _3 _4
getBLocateLikeConstraint :: BHeader -> Get BLocateLikeConstraint
getBLocateLikeConstraint h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getByteString 32 {- char[32] -}
  return $ BLocateLikeConstraint _1 _2 _3 _4
getBMinMaxConstraint :: BHeader -> Get BMinMaxConstraint
getBMinMaxConstraint h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getInt h {- int -}
  _3 <- getFloat h {- float -}
  _4 <- getInt h {- int -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _10 <- getByteString 32 {- char[32] -}
  return $ BMinMaxConstraint _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getBSizeLikeConstraint :: BHeader -> Get BSizeLikeConstraint
getBSizeLikeConstraint h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getByteString 32 {- char[32] -}
  return $ BSizeLikeConstraint _1 _2 _3 _4
getBActionConstraint :: BHeader -> Get BActionConstraint
getBActionConstraint h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- getInt h {- int -}
  _9 <- getPointer h {- struct bAction * -}
  _10 <- getByteString 32 {- char[32] -}
  return $ BActionConstraint _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getBLockTrackConstraint :: BHeader -> Get BLockTrackConstraint
getBLockTrackConstraint h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getByteString 32 {- char[32] -}
  return $ BLockTrackConstraint _1 _2 _3 _4
getBFollowPathConstraint :: BHeader -> Get BFollowPathConstraint
getBFollowPathConstraint h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getFloat h {- float -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  return $ BFollowPathConstraint _1 _2 _3 _4 _5
getBDistanceLimitConstraint :: BHeader -> Get BDistanceLimitConstraint
getBDistanceLimitConstraint h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getByteString 32 {- char[32] -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  return $ BDistanceLimitConstraint _1 _2 _3 _4 _5 _6
getBRotationConstraint :: BHeader -> Get BRotationConstraint
getBRotationConstraint h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  return $ BRotationConstraint _1 _2 _3 _4 _5 _6
getBStretchToConstraint :: BHeader -> Get BStretchToConstraint
getBStretchToConstraint h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getByteString 32 {- char[32] -}
  return $ BStretchToConstraint _1 _2 _3 _4 _5 _6
getBLocLimitConstraint :: BHeader -> Get BLocLimitConstraint
getBLocLimitConstraint h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  return $ BLocLimitConstraint _1 _2 _3 _4 _5 _6 _7 _8
getBRotLimitConstraint :: BHeader -> Get BRotLimitConstraint
getBRotLimitConstraint h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  return $ BRotLimitConstraint _1 _2 _3 _4 _5 _6 _7 _8
getBSizeLimitConstraint :: BHeader -> Get BSizeLimitConstraint
getBSizeLimitConstraint h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  return $ BSizeLimitConstraint _1 _2 _3 _4 _5 _6 _7 _8
getBRigidBodyJointConstraint :: BHeader -> Get BRigidBodyJointConstraint
getBRigidBodyJointConstraint h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getPointer h {- struct Object * -}
  _3 <- getInt h {- int -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- replicateM 6 (getFloat h {- float -}) {- float[6] -}
  _11 <- replicateM 6 (getFloat h {- float -}) {- float[6] -}
  _12 <- getFloat h {- float -}
  _13 <- getShort h {- short -}
  _14 <- getShort h {- short -}
  _15 <- getShort h {- short -}
  _16 <- getShort h {- short -}
  return $ BRigidBodyJointConstraint _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16
getBClampToConstraint :: BHeader -> Get BClampToConstraint
getBClampToConstraint h = do
  _1 <- getPointer h {- struct Object * -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  return $ BClampToConstraint _1 _2 _3
getBActionModifier :: BHeader -> Get BActionModifier
getBActionModifier h = do
  _1 <- getPointer h {- struct bActionModifier * -}
  _2 <- getPointer h {- struct bActionModifier * -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getByteString 32 {- char[32] -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getPointer h {- struct Object * -}
  return $ BActionModifier _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getBActionStrip :: BHeader -> Get BActionStrip
getBActionStrip h = do
  _1 <- getPointer h {- struct bActionStrip * -}
  _2 <- getPointer h {- struct bActionStrip * -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getPointer h {- struct Ipo * -}
  _8 <- getPointer h {- struct bAction * -}
  _9 <- getPointer h {- struct Object * -}
  _10 <- getFloat h {- float -}
  _11 <- getFloat h {- float -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  _14 <- getFloat h {- float -}
  _15 <- getFloat h {- float -}
  _16 <- getFloat h {- float -}
  _17 <- getFloat h {- float -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- getByteString 32 {- char[32] -}
  _21 <- getByteString 32 {- char[32] -}
  _22 <- getListBase h {- struct ListBase -}
  return $ BActionStrip _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22
getBNodeStack :: BHeader -> Get BNodeStack
getBNodeStack h = do
  _1 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getPointer h {- void * * -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  return $ BNodeStack _1 _2 _3 _4 _5 _6 _7 _8
getBNodeSocket :: BHeader -> Get BNodeSocket
getBNodeSocket h = do
  _1 <- getPointer h {- struct bNodeSocket * -}
  _2 <- getPointer h {- struct bNodeSocket * -}
  _3 <- getByteString 32 {- char[32] -}
  _4 <- getBNodeStack h {- struct bNodeStack -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getInt h {- int -}
  _12 <- getFloat h {- float -}
  _13 <- getFloat h {- float -}
  _14 <- getInt h {- int -}
  _15 <- getInt h {- int -}
  _16 <- getPointer h {- struct bNodeSocket * -}
  _17 <- getPointer h {- struct bNodeLink * -}
  return $ BNodeSocket _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17
getBNode :: BHeader -> Get BNode
getBNode h = do
  _1 <- getPointer h {- struct bNode * -}
  _2 <- getPointer h {- struct bNode * -}
  _3 <- getPointer h {- struct bNode * -}
  _4 <- getByteString 32 {- char[32] -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getShort h {- short -}
  _8 <- getShort h {- short -}
  _9 <- getShort h {- short -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- getShort h {- short -}
  _13 <- getListBase h {- struct ListBase -}
  _14 <- getListBase h {- struct ListBase -}
  _15 <- getPointer h {- struct ID * -}
  _16 <- getPointer h {- void * * -}
  _17 <- getFloat h {- float -}
  _18 <- getFloat h {- float -}
  _19 <- getFloat h {- float -}
  _20 <- getFloat h {- float -}
  _21 <- getShort h {- short -}
  _22 <- getShort h {- short -}
  _23 <- getShort h {- short -}
  _24 <- getShort h {- short -}
  _25 <- getRctf h {- struct rctf -}
  _26 <- getRctf h {- struct rctf -}
  _27 <- getRctf h {- struct rctf -}
  _28 <- getPointer h {- UnknownCompound bNodePreview  -}
  _29 <- getPointer h {- UnknownCompound bNodeType  -}
  return $ BNode _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13 _14 _15 _16 _17 _18 _19 _20 _21 _22 _23 _24 _25 _26 _27 _28 _29
getBNodeLink :: BHeader -> Get BNodeLink
getBNodeLink h = do
  _1 <- getPointer h {- struct bNodeLink * -}
  _2 <- getPointer h {- struct bNodeLink * -}
  _3 <- getPointer h {- struct bNode * -}
  _4 <- getPointer h {- struct bNode * -}
  _5 <- getPointer h {- struct bNodeSocket * -}
  _6 <- getPointer h {- struct bNodeSocket * -}
  return $ BNodeLink _1 _2 _3 _4 _5 _6
getBNodeTree :: BHeader -> Get BNodeTree
getBNodeTree h = do
  _1 <- getID h {- struct ID -}
  _2 <- getListBase h {- struct ListBase -}
  _3 <- getListBase h {- struct ListBase -}
  _4 <- getPointer h {- struct bNodeStack * * -}
  _5 <- getInt h {- int -}
  _6 <- getInt h {- int -}
  _7 <- getInt h {- int -}
  _8 <- getInt h {- int -}
  _9 <- getListBase h {- struct ListBase -}
  _10 <- getPointer h {- UnknownCompound bNodeType  -}
  _11 <- getPointer h {- void * (*xxx)() -}
  _12 <- getPointer h {- void * (*xxx)() -}
  _13 <- getPointer h {- int (*xxx)() -}
  return $ BNodeTree _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13
getNodeImageAnim :: BHeader -> Get NodeImageAnim
getNodeImageAnim h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- get {- char -}
  _5 <- get {- char -}
  _6 <- getShort h {- short -}
  return $ NodeImageAnim _1 _2 _3 _4 _5 _6
getNodeBlurData :: BHeader -> Get NodeBlurData
getNodeBlurData h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getFloat h {- float -}
  _8 <- getShort h {- short -}
  _9 <- get {- char -}
  _10 <- get {- char -}
  _11 <- getInt h {- int -}
  return $ NodeBlurData _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11
getNodeHueSat :: BHeader -> Get NodeHueSat
getNodeHueSat h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  return $ NodeHueSat _1 _2 _3
getNodeImageFile :: BHeader -> Get NodeImageFile
getNodeImageFile h = do
  _1 <- getByteString 256 {- char[256] -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  _5 <- getShort h {- short -}
  _6 <- getInt h {- int -}
  _7 <- getInt h {- int -}
  return $ NodeImageFile _1 _2 _3 _4 _5 _6 _7
getNodeChroma :: BHeader -> Get NodeChroma
getNodeChroma h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- replicateM 4 (getFloat h {- float -}) {- float[4] -}
  return $ NodeChroma _1 _2 _3 _4 _5 _6 _7
getNodeGeometry :: BHeader -> Get NodeGeometry
getNodeGeometry h = do
  _1 <- getByteString 32 {- char[32] -}
  _2 <- getByteString 32 {- char[32] -}
  return $ NodeGeometry _1 _2
getNodeVertexCol :: BHeader -> Get NodeVertexCol
getNodeVertexCol h = do
  _1 <- getByteString 32 {- char[32] -}
  return $ NodeVertexCol _1
getNodeDefocus :: BHeader -> Get NodeDefocus
getNodeDefocus h = do
  _1 <- get {- char -}
  _2 <- get {- char -}
  _3 <- get {- char -}
  _4 <- get {- char -}
  _5 <- getShort h {- short -}
  _6 <- getShort h {- short -}
  _7 <- getFloat h {- float -}
  _8 <- getFloat h {- float -}
  _9 <- getFloat h {- float -}
  _10 <- getFloat h {- float -}
  return $ NodeDefocus _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getCurveMapPoint :: BHeader -> Get CurveMapPoint
getCurveMapPoint h = do
  _1 <- getFloat h {- float -}
  _2 <- getFloat h {- float -}
  _3 <- getShort h {- short -}
  _4 <- getShort h {- short -}
  return $ CurveMapPoint _1 _2 _3 _4
getCurveMap :: BHeader -> Get CurveMap
getCurveMap h = do
  _1 <- getShort h {- short -}
  _2 <- getShort h {- short -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  _5 <- getFloat h {- float -}
  _6 <- replicateM 2 (getFloat h {- float -}) {- float[2] -}
  _7 <- replicateM 2 (getFloat h {- float -}) {- float[2] -}
  _8 <- getPointer h {- struct CurveMapPoint * -}
  _9 <- getPointer h {- struct CurveMapPoint * -}
  _10 <- getPointer h {- struct CurveMapPoint * -}
  return $ CurveMap _1 _2 _3 _4 _5 _6 _7 _8 _9 _10
getCurveMapping :: BHeader -> Get CurveMapping
getCurveMapping h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getRctf h {- struct rctf -}
  _4 <- getRctf h {- struct rctf -}
  _5 <- replicateM 4 (getCurveMap h {- struct CurveMap -}) {- struct CurveMap[4] -}
  _6 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _7 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _8 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _9 <- getFloat h {- float -}
  return $ CurveMapping _1 _2 _3 _4 _5 _6 _7 _8 _9
getBrushClone :: BHeader -> Get BrushClone
getBrushClone h = do
  _1 <- getPointer h {- struct Image * -}
  _2 <- replicateM 2 (getFloat h {- float -}) {- float[2] -}
  _3 <- getFloat h {- float -}
  _4 <- getFloat h {- float -}
  return $ BrushClone _1 _2 _3 _4
getBrush :: BHeader -> Get Brush
getBrush h = do
  _1 <- getID h {- struct ID -}
  _2 <- getShort h {- short -}
  _3 <- getShort h {- short -}
  _4 <- getInt h {- int -}
  _5 <- getFloat h {- float -}
  _6 <- getFloat h {- float -}
  _7 <- getFloat h {- float -}
  _8 <- replicateM 3 (getFloat h {- float -}) {- float[3] -}
  _9 <- getFloat h {- float -}
  _10 <- getShort h {- short -}
  _11 <- getShort h {- short -}
  _12 <- replicateM 10 (getPointer h {- struct MTex * -}) {- struct MTex *[10] -}
  _13 <- getBrushClone h {- struct BrushClone -}
  return $ Brush _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 _11 _12 _13
getCustomDataLayer :: BHeader -> Get CustomDataLayer
getCustomDataLayer h = do
  _1 <- getInt h {- int -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  _6 <- getByteString 4 {- char[4] -}
  _7 <- getByteString 32 {- char[32] -}
  _8 <- getPointer h {- void * * -}
  return $ CustomDataLayer _1 _2 _3 _4 _5 _6 _7 _8
getCustomData :: BHeader -> Get CustomData
getCustomData h = do
  _1 <- getPointer h {- struct CustomDataLayer * -}
  _2 <- getInt h {- int -}
  _3 <- getInt h {- int -}
  _4 <- getInt h {- int -}
  _5 <- getInt h {- int -}
  return $ CustomData _1 _2 _3 _4 _5
data Block = 
    BlockLink Integer [Link]
  | BlockListBase Integer [ListBase]
  | BlockVec2s Integer [Vec2s]
  | BlockVec2i Integer [Vec2i]
  | BlockVec2f Integer [Vec2f]
  | BlockVec2d Integer [Vec2d]
  | BlockVec3i Integer [Vec3i]
  | BlockVec3f Integer [Vec3f]
  | BlockVec3d Integer [Vec3d]
  | BlockVec4i Integer [Vec4i]
  | BlockVec4f Integer [Vec4f]
  | BlockVec4d Integer [Vec4d]
  | BlockRcti Integer [Rcti]
  | BlockRctf Integer [Rctf]
  | BlockIDPropertyData Integer [IDPropertyData]
  | BlockIDProperty Integer [IDProperty]
  | BlockID Integer [ID]
  | BlockLibrary Integer [Library]
  | BlockIpo Integer [Ipo]
  | BlockKeyBlock Integer [KeyBlock]
  | BlockKey Integer [Key]
  | BlockScriptLink Integer [ScriptLink]
  | BlockTextLine Integer [TextLine]
  | BlockText Integer [Text]
  | BlockPackedFile Integer [PackedFile]
  | BlockCamera Integer [Camera]
  | BlockPreviewImage Integer [PreviewImage]
  | BlockImageUser Integer [ImageUser]
  | BlockImage Integer [Image]
  | BlockMTex Integer [MTex]
  | BlockPluginTex Integer [PluginTex]
  | BlockCBData Integer [CBData]
  | BlockColorBand Integer [ColorBand]
  | BlockEnvMap Integer [EnvMap]
  | BlockTex Integer [Tex]
  | BlockTexMapping Integer [TexMapping]
  | BlockLamp Integer [Lamp]
  | BlockWave Integer [Wave]
  | BlockMaterial Integer [Material]
  | BlockVFont Integer [VFont]
  | BlockMetaElem Integer [MetaElem]
  | BlockMetaBall Integer [MetaBall]
  | BlockBezTriple Integer [BezTriple]
  | BlockBPoint Integer [BPoint]
  | BlockNurb Integer [Nurb]
  | BlockCharInfo Integer [CharInfo]
  | BlockTextBox Integer [TextBox]
  | BlockCurve Integer [Curve]
  | BlockIpoDriver Integer [IpoDriver]
  | BlockIpoCurve Integer [IpoCurve]
  | BlockMesh Integer [Mesh]
  | BlockTFace Integer [TFace]
  | BlockMFace Integer [MFace]
  | BlockMEdge Integer [MEdge]
  | BlockMDeformWeight Integer [MDeformWeight]
  | BlockMDeformVert Integer [MDeformVert]
  | BlockMVert Integer [MVert]
  | BlockMCol Integer [MCol]
  | BlockMSticky Integer [MSticky]
  | BlockMSelect Integer [MSelect]
  | BlockMTFace Integer [MTFace]
  | BlockMultiresCol Integer [MultiresCol]
  | BlockMultiresColFace Integer [MultiresColFace]
  | BlockMultiresFace Integer [MultiresFace]
  | BlockMultiresEdge Integer [MultiresEdge]
  | BlockMultiresLevel Integer [MultiresLevel]
  | BlockMultires Integer [Multires]
  | BlockPartialVisibility Integer [PartialVisibility]
  | BlockModifierData Integer [ModifierData]
  | BlockSubsurfModifierData Integer [SubsurfModifierData]
  | BlockLatticeModifierData Integer [LatticeModifierData]
  | BlockCurveModifierData Integer [CurveModifierData]
  | BlockBuildModifierData Integer [BuildModifierData]
  | BlockArrayModifierData Integer [ArrayModifierData]
  | BlockMirrorModifierData Integer [MirrorModifierData]
  | BlockEdgeSplitModifierData Integer [EdgeSplitModifierData]
  | BlockDisplaceModifierData Integer [DisplaceModifierData]
  | BlockUVProjectModifierData Integer [UVProjectModifierData]
  | BlockDecimateModifierData Integer [DecimateModifierData]
  | BlockSmoothModifierData Integer [SmoothModifierData]
  | BlockCastModifierData Integer [CastModifierData]
  | BlockWaveModifierData Integer [WaveModifierData]
  | BlockArmatureModifierData Integer [ArmatureModifierData]
  | BlockHookModifierData Integer [HookModifierData]
  | BlockSoftbodyModifierData Integer [SoftbodyModifierData]
  | BlockBooleanModifierData Integer [BooleanModifierData]
  | BlockLattice Integer [Lattice]
  | BlockBDeformGroup Integer [BDeformGroup]
  | BlockBoundBox Integer [BoundBox]
  | BlockOcInfo Integer [OcInfo]
  | BlockLBuf Integer [LBuf]
  | BlockObject Integer [Object]
  | BlockObHook Integer [ObHook]
  | BlockPartDeflect Integer [PartDeflect]
  | BlockSBVertex Integer [SBVertex]
  | BlockSoftBody Integer [SoftBody]
  | BlockFluidsimSettings Integer [FluidsimSettings]
  | BlockWorld Integer [World]
  | BlockRadio Integer [Radio]
  | BlockBase Integer [Base]
  | BlockAviCodecData Integer [AviCodecData]
  | BlockQuicktimeCodecData Integer [QuicktimeCodecData]
  | BlockFFMpegCodecData Integer [FFMpegCodecData]
  | BlockAudioData Integer [AudioData]
  | BlockSceneRenderLayer Integer [SceneRenderLayer]
  | BlockRenderData Integer [RenderData]
  | BlockGameFraming Integer [GameFraming]
  | BlockTimeMarker Integer [TimeMarker]
  | BlockImagePaintSettings Integer [ImagePaintSettings]
  | BlockToolSettings Integer [ToolSettings]
  | BlockBrushData Integer [BrushData]
  | BlockSculptData Integer [SculptData]
  | BlockScene Integer [Scene]
  | BlockBGpic Integer [BGpic]
  | BlockView3D Integer [View3D]
  | BlockView2D Integer [View2D]
  | BlockSpaceLink Integer [SpaceLink]
  | BlockSpaceInfo Integer [SpaceInfo]
  | BlockSpaceIpo Integer [SpaceIpo]
  | BlockSpaceButs Integer [SpaceButs]
  | BlockSpaceSeq Integer [SpaceSeq]
  | BlockSpaceFile Integer [SpaceFile]
  | BlockSpaceOops Integer [SpaceOops]
  | BlockSpaceImage Integer [SpaceImage]
  | BlockSpaceNla Integer [SpaceNla]
  | BlockSpaceText Integer [SpaceText]
  | BlockSpaceScript Integer [SpaceScript]
  | BlockSpaceTime Integer [SpaceTime]
  | BlockSpaceNode Integer [SpaceNode]
  | BlockSpaceImaSel Integer [SpaceImaSel]
  | BlockThemeUI Integer [ThemeUI]
  | BlockThemeSpace Integer [ThemeSpace]
  | BlockBTheme Integer [BTheme]
  | BlockSolidLight Integer [SolidLight]
  | BlockUserDef Integer [UserDef]
  | BlockBScreen Integer [BScreen]
  | BlockScrVert Integer [ScrVert]
  | BlockScrEdge Integer [ScrEdge]
  | BlockPanel Integer [Panel]
  | BlockScrArea Integer [ScrArea]
  | BlockFileGlobal Integer [FileGlobal]
  | BlockStripElem Integer [StripElem]
  | BlockStrip Integer [Strip]
  | BlockPluginSeq Integer [PluginSeq]
  | BlockSequence Integer [Sequence]
  | BlockMetaStack Integer [MetaStack]
  | BlockEditing Integer [Editing]
  | BlockWipeVars Integer [WipeVars]
  | BlockGlowVars Integer [GlowVars]
  | BlockTransformVars Integer [TransformVars]
  | BlockSolidColorVars Integer [SolidColorVars]
  | BlockSpeedControlVars Integer [SpeedControlVars]
  | BlockEffect Integer [Effect]
  | BlockBuildEff Integer [BuildEff]
  | BlockPartEff Integer [PartEff]
  | BlockWaveEff Integer [WaveEff]
  | BlockTreeStoreElem Integer [TreeStoreElem]
  | BlockTreeStore Integer [TreeStore]
  | BlockOops Integer [Oops]
  | BlockBProperty Integer [BProperty]
  | BlockBNearSensor Integer [BNearSensor]
  | BlockBMouseSensor Integer [BMouseSensor]
  | BlockBTouchSensor Integer [BTouchSensor]
  | BlockBKeyboardSensor Integer [BKeyboardSensor]
  | BlockBPropertySensor Integer [BPropertySensor]
  | BlockBCollisionSensor Integer [BCollisionSensor]
  | BlockBRadarSensor Integer [BRadarSensor]
  | BlockBRandomSensor Integer [BRandomSensor]
  | BlockBRaySensor Integer [BRaySensor]
  | BlockBMessageSensor Integer [BMessageSensor]
  | BlockBSensor Integer [BSensor]
  | BlockBJoystickSensor Integer [BJoystickSensor]
  | BlockBExpressionCont Integer [BExpressionCont]
  | BlockBPythonCont Integer [BPythonCont]
  | BlockBController Integer [BController]
  | BlockBAddObjectActuator Integer [BAddObjectActuator]
  | BlockBActionActuator Integer [BActionActuator]
  | BlockBSoundActuator Integer [BSoundActuator]
  | BlockBCDActuator Integer [BCDActuator]
  | BlockBEditObjectActuator Integer [BEditObjectActuator]
  | BlockBSceneActuator Integer [BSceneActuator]
  | BlockBPropertyActuator Integer [BPropertyActuator]
  | BlockBObjectActuator Integer [BObjectActuator]
  | BlockBIpoActuator Integer [BIpoActuator]
  | BlockBCameraActuator Integer [BCameraActuator]
  | BlockBConstraintActuator Integer [BConstraintActuator]
  | BlockBGroupActuator Integer [BGroupActuator]
  | BlockBRandomActuator Integer [BRandomActuator]
  | BlockBMessageActuator Integer [BMessageActuator]
  | BlockBGameActuator Integer [BGameActuator]
  | BlockBVisibilityActuator Integer [BVisibilityActuator]
  | BlockBActuator Integer [BActuator]
  | BlockFreeCamera Integer [FreeCamera]
  | BlockBSound Integer [BSound]
  | BlockBSoundListener Integer [BSoundListener]
  | BlockSpaceSound Integer [SpaceSound]
  | BlockGroupObject Integer [GroupObject]
  | BlockGroup Integer [Group]
  | BlockBone Integer [Bone]
  | BlockBArmature Integer [BArmature]
  | BlockBPoseChannel Integer [BPoseChannel]
  | BlockBPose Integer [BPose]
  | BlockBActionChannel Integer [BActionChannel]
  | BlockBAction Integer [BAction]
  | BlockSpaceAction Integer [SpaceAction]
  | BlockBConstraintChannel Integer [BConstraintChannel]
  | BlockBConstraint Integer [BConstraint]
  | BlockBKinematicConstraint Integer [BKinematicConstraint]
  | BlockBTrackToConstraint Integer [BTrackToConstraint]
  | BlockBRotateLikeConstraint Integer [BRotateLikeConstraint]
  | BlockBLocateLikeConstraint Integer [BLocateLikeConstraint]
  | BlockBMinMaxConstraint Integer [BMinMaxConstraint]
  | BlockBSizeLikeConstraint Integer [BSizeLikeConstraint]
  | BlockBActionConstraint Integer [BActionConstraint]
  | BlockBLockTrackConstraint Integer [BLockTrackConstraint]
  | BlockBFollowPathConstraint Integer [BFollowPathConstraint]
  | BlockBDistanceLimitConstraint Integer [BDistanceLimitConstraint]
  | BlockBRotationConstraint Integer [BRotationConstraint]
  | BlockBStretchToConstraint Integer [BStretchToConstraint]
  | BlockBLocLimitConstraint Integer [BLocLimitConstraint]
  | BlockBRotLimitConstraint Integer [BRotLimitConstraint]
  | BlockBSizeLimitConstraint Integer [BSizeLimitConstraint]
  | BlockBRigidBodyJointConstraint Integer [BRigidBodyJointConstraint]
  | BlockBClampToConstraint Integer [BClampToConstraint]
  | BlockBActionModifier Integer [BActionModifier]
  | BlockBActionStrip Integer [BActionStrip]
  | BlockBNodeStack Integer [BNodeStack]
  | BlockBNodeSocket Integer [BNodeSocket]
  | BlockBNode Integer [BNode]
  | BlockBNodeLink Integer [BNodeLink]
  | BlockBNodeTree Integer [BNodeTree]
  | BlockNodeImageAnim Integer [NodeImageAnim]
  | BlockNodeBlurData Integer [NodeBlurData]
  | BlockNodeHueSat Integer [NodeHueSat]
  | BlockNodeImageFile Integer [NodeImageFile]
  | BlockNodeChroma Integer [NodeChroma]
  | BlockNodeGeometry Integer [NodeGeometry]
  | BlockNodeVertexCol Integer [NodeVertexCol]
  | BlockNodeDefocus Integer [NodeDefocus]
  | BlockCurveMapPoint Integer [CurveMapPoint]
  | BlockCurveMap Integer [CurveMap]
  | BlockCurveMapping Integer [CurveMapping]
  | BlockBrushClone Integer [BrushClone]
  | BlockBrush Integer [Brush]
  | BlockCustomDataLayer Integer [CustomDataLayer]
  | BlockCustomData Integer [CustomData]
  | BlockRaw Integer Struct Int ByteString -- for unparsed blocks.
  deriving Show

readBlend :: FilePath -> IO [(Integer,Block)]
readBlend f = do
  s <- LB.readFile f
  return $ runGet (do h <- getBHeader
                      bs <- parseBlocks h
                      return bs) s
parseBlocks :: BHeader -> Get [(Integer,Block)]
parseBlocks h = do
  code <- getByteString 4
  size <- fmap fromIntegral getWord32le
  addr <- getAddress h
  idx <- fmap fromIntegral getWord32le
  count <- fmap fromIntegral getWord32le
  case BC.unpack code of
    "DNA1" -> return [] -- check SDNA is the same
    "ENDB" -> return []
    _ -> do b <- parseBlock h size addr idx count
            bs <- parseBlocks h
            return (b : bs)
parseBlock :: BHeader -> Int -> Integer -> Int -> Int -> Get (Integer,Block)
parseBlock h size addr idx count =
  if structSize h (sdna !! idx) * count /= size
  then do
         dat <- getByteString size
         return $ (addr, BlockRaw addr (sdna !! idx) count dat)
  else case idx of
         0 -> fmap (\b -> (addr, BlockLink addr b)) (replicateM count $ getLink h)
         1 -> fmap (\b -> (addr, BlockListBase addr b)) (replicateM count $ getListBase h)
         2 -> fmap (\b -> (addr, BlockVec2s addr b)) (replicateM count $ getVec2s h)
         3 -> fmap (\b -> (addr, BlockVec2i addr b)) (replicateM count $ getVec2i h)
         4 -> fmap (\b -> (addr, BlockVec2f addr b)) (replicateM count $ getVec2f h)
         5 -> fmap (\b -> (addr, BlockVec2d addr b)) (replicateM count $ getVec2d h)
         6 -> fmap (\b -> (addr, BlockVec3i addr b)) (replicateM count $ getVec3i h)
         7 -> fmap (\b -> (addr, BlockVec3f addr b)) (replicateM count $ getVec3f h)
         8 -> fmap (\b -> (addr, BlockVec3d addr b)) (replicateM count $ getVec3d h)
         9 -> fmap (\b -> (addr, BlockVec4i addr b)) (replicateM count $ getVec4i h)
         10 -> fmap (\b -> (addr, BlockVec4f addr b)) (replicateM count $ getVec4f h)
         11 -> fmap (\b -> (addr, BlockVec4d addr b)) (replicateM count $ getVec4d h)
         12 -> fmap (\b -> (addr, BlockRcti addr b)) (replicateM count $ getRcti h)
         13 -> fmap (\b -> (addr, BlockRctf addr b)) (replicateM count $ getRctf h)
         14 -> fmap (\b -> (addr, BlockIDPropertyData addr b)) (replicateM count $ getIDPropertyData h)
         15 -> fmap (\b -> (addr, BlockIDProperty addr b)) (replicateM count $ getIDProperty h)
         16 -> fmap (\b -> (addr, BlockID addr b)) (replicateM count $ getID h)
         17 -> fmap (\b -> (addr, BlockLibrary addr b)) (replicateM count $ getLibrary h)
         18 -> fmap (\b -> (addr, BlockIpo addr b)) (replicateM count $ getIpo h)
         19 -> fmap (\b -> (addr, BlockKeyBlock addr b)) (replicateM count $ getKeyBlock h)
         20 -> fmap (\b -> (addr, BlockKey addr b)) (replicateM count $ getKey h)
         21 -> fmap (\b -> (addr, BlockScriptLink addr b)) (replicateM count $ getScriptLink h)
         22 -> fmap (\b -> (addr, BlockTextLine addr b)) (replicateM count $ getTextLine h)
         23 -> fmap (\b -> (addr, BlockText addr b)) (replicateM count $ getText h)
         24 -> fmap (\b -> (addr, BlockPackedFile addr b)) (replicateM count $ getPackedFile h)
         25 -> fmap (\b -> (addr, BlockCamera addr b)) (replicateM count $ getCamera h)
         26 -> fmap (\b -> (addr, BlockPreviewImage addr b)) (replicateM count $ getPreviewImage h)
         27 -> fmap (\b -> (addr, BlockImageUser addr b)) (replicateM count $ getImageUser h)
         28 -> fmap (\b -> (addr, BlockImage addr b)) (replicateM count $ getImage h)
         29 -> fmap (\b -> (addr, BlockMTex addr b)) (replicateM count $ getMTex h)
         30 -> fmap (\b -> (addr, BlockPluginTex addr b)) (replicateM count $ getPluginTex h)
         31 -> fmap (\b -> (addr, BlockCBData addr b)) (replicateM count $ getCBData h)
         32 -> fmap (\b -> (addr, BlockColorBand addr b)) (replicateM count $ getColorBand h)
         33 -> fmap (\b -> (addr, BlockEnvMap addr b)) (replicateM count $ getEnvMap h)
         34 -> fmap (\b -> (addr, BlockTex addr b)) (replicateM count $ getTex h)
         35 -> fmap (\b -> (addr, BlockTexMapping addr b)) (replicateM count $ getTexMapping h)
         36 -> fmap (\b -> (addr, BlockLamp addr b)) (replicateM count $ getLamp h)
         37 -> fmap (\b -> (addr, BlockWave addr b)) (replicateM count $ getWave h)
         38 -> fmap (\b -> (addr, BlockMaterial addr b)) (replicateM count $ getMaterial h)
         39 -> fmap (\b -> (addr, BlockVFont addr b)) (replicateM count $ getVFont h)
         40 -> fmap (\b -> (addr, BlockMetaElem addr b)) (replicateM count $ getMetaElem h)
         41 -> fmap (\b -> (addr, BlockMetaBall addr b)) (replicateM count $ getMetaBall h)
         42 -> fmap (\b -> (addr, BlockBezTriple addr b)) (replicateM count $ getBezTriple h)
         43 -> fmap (\b -> (addr, BlockBPoint addr b)) (replicateM count $ getBPoint h)
         44 -> fmap (\b -> (addr, BlockNurb addr b)) (replicateM count $ getNurb h)
         45 -> fmap (\b -> (addr, BlockCharInfo addr b)) (replicateM count $ getCharInfo h)
         46 -> fmap (\b -> (addr, BlockTextBox addr b)) (replicateM count $ getTextBox h)
         47 -> fmap (\b -> (addr, BlockCurve addr b)) (replicateM count $ getCurve h)
         48 -> fmap (\b -> (addr, BlockIpoDriver addr b)) (replicateM count $ getIpoDriver h)
         49 -> fmap (\b -> (addr, BlockIpoCurve addr b)) (replicateM count $ getIpoCurve h)
         50 -> fmap (\b -> (addr, BlockMesh addr b)) (replicateM count $ getMesh h)
         51 -> fmap (\b -> (addr, BlockTFace addr b)) (replicateM count $ getTFace h)
         52 -> fmap (\b -> (addr, BlockMFace addr b)) (replicateM count $ getMFace h)
         53 -> fmap (\b -> (addr, BlockMEdge addr b)) (replicateM count $ getMEdge h)
         54 -> fmap (\b -> (addr, BlockMDeformWeight addr b)) (replicateM count $ getMDeformWeight h)
         55 -> fmap (\b -> (addr, BlockMDeformVert addr b)) (replicateM count $ getMDeformVert h)
         56 -> fmap (\b -> (addr, BlockMVert addr b)) (replicateM count $ getMVert h)
         57 -> fmap (\b -> (addr, BlockMCol addr b)) (replicateM count $ getMCol h)
         58 -> fmap (\b -> (addr, BlockMSticky addr b)) (replicateM count $ getMSticky h)
         59 -> fmap (\b -> (addr, BlockMSelect addr b)) (replicateM count $ getMSelect h)
         60 -> fmap (\b -> (addr, BlockMTFace addr b)) (replicateM count $ getMTFace h)
         61 -> fmap (\b -> (addr, BlockMultiresCol addr b)) (replicateM count $ getMultiresCol h)
         62 -> fmap (\b -> (addr, BlockMultiresColFace addr b)) (replicateM count $ getMultiresColFace h)
         63 -> fmap (\b -> (addr, BlockMultiresFace addr b)) (replicateM count $ getMultiresFace h)
         64 -> fmap (\b -> (addr, BlockMultiresEdge addr b)) (replicateM count $ getMultiresEdge h)
         65 -> fmap (\b -> (addr, BlockMultiresLevel addr b)) (replicateM count $ getMultiresLevel h)
         66 -> fmap (\b -> (addr, BlockMultires addr b)) (replicateM count $ getMultires h)
         67 -> fmap (\b -> (addr, BlockPartialVisibility addr b)) (replicateM count $ getPartialVisibility h)
         68 -> fmap (\b -> (addr, BlockModifierData addr b)) (replicateM count $ getModifierData h)
         69 -> fmap (\b -> (addr, BlockSubsurfModifierData addr b)) (replicateM count $ getSubsurfModifierData h)
         70 -> fmap (\b -> (addr, BlockLatticeModifierData addr b)) (replicateM count $ getLatticeModifierData h)
         71 -> fmap (\b -> (addr, BlockCurveModifierData addr b)) (replicateM count $ getCurveModifierData h)
         72 -> fmap (\b -> (addr, BlockBuildModifierData addr b)) (replicateM count $ getBuildModifierData h)
         73 -> fmap (\b -> (addr, BlockArrayModifierData addr b)) (replicateM count $ getArrayModifierData h)
         74 -> fmap (\b -> (addr, BlockMirrorModifierData addr b)) (replicateM count $ getMirrorModifierData h)
         75 -> fmap (\b -> (addr, BlockEdgeSplitModifierData addr b)) (replicateM count $ getEdgeSplitModifierData h)
         76 -> fmap (\b -> (addr, BlockDisplaceModifierData addr b)) (replicateM count $ getDisplaceModifierData h)
         77 -> fmap (\b -> (addr, BlockUVProjectModifierData addr b)) (replicateM count $ getUVProjectModifierData h)
         78 -> fmap (\b -> (addr, BlockDecimateModifierData addr b)) (replicateM count $ getDecimateModifierData h)
         79 -> fmap (\b -> (addr, BlockSmoothModifierData addr b)) (replicateM count $ getSmoothModifierData h)
         80 -> fmap (\b -> (addr, BlockCastModifierData addr b)) (replicateM count $ getCastModifierData h)
         81 -> fmap (\b -> (addr, BlockWaveModifierData addr b)) (replicateM count $ getWaveModifierData h)
         82 -> fmap (\b -> (addr, BlockArmatureModifierData addr b)) (replicateM count $ getArmatureModifierData h)
         83 -> fmap (\b -> (addr, BlockHookModifierData addr b)) (replicateM count $ getHookModifierData h)
         84 -> fmap (\b -> (addr, BlockSoftbodyModifierData addr b)) (replicateM count $ getSoftbodyModifierData h)
         85 -> fmap (\b -> (addr, BlockBooleanModifierData addr b)) (replicateM count $ getBooleanModifierData h)
         86 -> fmap (\b -> (addr, BlockLattice addr b)) (replicateM count $ getLattice h)
         87 -> fmap (\b -> (addr, BlockBDeformGroup addr b)) (replicateM count $ getBDeformGroup h)
         88 -> fmap (\b -> (addr, BlockBoundBox addr b)) (replicateM count $ getBoundBox h)
         89 -> fmap (\b -> (addr, BlockOcInfo addr b)) (replicateM count $ getOcInfo h)
         90 -> fmap (\b -> (addr, BlockLBuf addr b)) (replicateM count $ getLBuf h)
         91 -> fmap (\b -> (addr, BlockObject addr b)) (replicateM count $ getObject h)
         92 -> fmap (\b -> (addr, BlockObHook addr b)) (replicateM count $ getObHook h)
         93 -> fmap (\b -> (addr, BlockPartDeflect addr b)) (replicateM count $ getPartDeflect h)
         94 -> fmap (\b -> (addr, BlockSBVertex addr b)) (replicateM count $ getSBVertex h)
         95 -> fmap (\b -> (addr, BlockSoftBody addr b)) (replicateM count $ getSoftBody h)
         96 -> fmap (\b -> (addr, BlockFluidsimSettings addr b)) (replicateM count $ getFluidsimSettings h)
         97 -> fmap (\b -> (addr, BlockWorld addr b)) (replicateM count $ getWorld h)
         98 -> fmap (\b -> (addr, BlockRadio addr b)) (replicateM count $ getRadio h)
         99 -> fmap (\b -> (addr, BlockBase addr b)) (replicateM count $ getBase h)
         100 -> fmap (\b -> (addr, BlockAviCodecData addr b)) (replicateM count $ getAviCodecData h)
         101 -> fmap (\b -> (addr, BlockQuicktimeCodecData addr b)) (replicateM count $ getQuicktimeCodecData h)
         102 -> fmap (\b -> (addr, BlockFFMpegCodecData addr b)) (replicateM count $ getFFMpegCodecData h)
         103 -> fmap (\b -> (addr, BlockAudioData addr b)) (replicateM count $ getAudioData h)
         104 -> fmap (\b -> (addr, BlockSceneRenderLayer addr b)) (replicateM count $ getSceneRenderLayer h)
         105 -> fmap (\b -> (addr, BlockRenderData addr b)) (replicateM count $ getRenderData h)
         106 -> fmap (\b -> (addr, BlockGameFraming addr b)) (replicateM count $ getGameFraming h)
         107 -> fmap (\b -> (addr, BlockTimeMarker addr b)) (replicateM count $ getTimeMarker h)
         108 -> fmap (\b -> (addr, BlockImagePaintSettings addr b)) (replicateM count $ getImagePaintSettings h)
         109 -> fmap (\b -> (addr, BlockToolSettings addr b)) (replicateM count $ getToolSettings h)
         110 -> fmap (\b -> (addr, BlockBrushData addr b)) (replicateM count $ getBrushData h)
         111 -> fmap (\b -> (addr, BlockSculptData addr b)) (replicateM count $ getSculptData h)
         112 -> fmap (\b -> (addr, BlockScene addr b)) (replicateM count $ getScene h)
         113 -> fmap (\b -> (addr, BlockBGpic addr b)) (replicateM count $ getBGpic h)
         114 -> fmap (\b -> (addr, BlockView3D addr b)) (replicateM count $ getView3D h)
         115 -> fmap (\b -> (addr, BlockView2D addr b)) (replicateM count $ getView2D h)
         116 -> fmap (\b -> (addr, BlockSpaceLink addr b)) (replicateM count $ getSpaceLink h)
         117 -> fmap (\b -> (addr, BlockSpaceInfo addr b)) (replicateM count $ getSpaceInfo h)
         118 -> fmap (\b -> (addr, BlockSpaceIpo addr b)) (replicateM count $ getSpaceIpo h)
         119 -> fmap (\b -> (addr, BlockSpaceButs addr b)) (replicateM count $ getSpaceButs h)
         120 -> fmap (\b -> (addr, BlockSpaceSeq addr b)) (replicateM count $ getSpaceSeq h)
         121 -> fmap (\b -> (addr, BlockSpaceFile addr b)) (replicateM count $ getSpaceFile h)
         122 -> fmap (\b -> (addr, BlockSpaceOops addr b)) (replicateM count $ getSpaceOops h)
         123 -> fmap (\b -> (addr, BlockSpaceImage addr b)) (replicateM count $ getSpaceImage h)
         124 -> fmap (\b -> (addr, BlockSpaceNla addr b)) (replicateM count $ getSpaceNla h)
         125 -> fmap (\b -> (addr, BlockSpaceText addr b)) (replicateM count $ getSpaceText h)
         126 -> fmap (\b -> (addr, BlockSpaceScript addr b)) (replicateM count $ getSpaceScript h)
         127 -> fmap (\b -> (addr, BlockSpaceTime addr b)) (replicateM count $ getSpaceTime h)
         128 -> fmap (\b -> (addr, BlockSpaceNode addr b)) (replicateM count $ getSpaceNode h)
         129 -> fmap (\b -> (addr, BlockSpaceImaSel addr b)) (replicateM count $ getSpaceImaSel h)
         130 -> fmap (\b -> (addr, BlockThemeUI addr b)) (replicateM count $ getThemeUI h)
         131 -> fmap (\b -> (addr, BlockThemeSpace addr b)) (replicateM count $ getThemeSpace h)
         132 -> fmap (\b -> (addr, BlockBTheme addr b)) (replicateM count $ getBTheme h)
         133 -> fmap (\b -> (addr, BlockSolidLight addr b)) (replicateM count $ getSolidLight h)
         134 -> fmap (\b -> (addr, BlockUserDef addr b)) (replicateM count $ getUserDef h)
         135 -> fmap (\b -> (addr, BlockBScreen addr b)) (replicateM count $ getBScreen h)
         136 -> fmap (\b -> (addr, BlockScrVert addr b)) (replicateM count $ getScrVert h)
         137 -> fmap (\b -> (addr, BlockScrEdge addr b)) (replicateM count $ getScrEdge h)
         138 -> fmap (\b -> (addr, BlockPanel addr b)) (replicateM count $ getPanel h)
         139 -> fmap (\b -> (addr, BlockScrArea addr b)) (replicateM count $ getScrArea h)
         140 -> fmap (\b -> (addr, BlockFileGlobal addr b)) (replicateM count $ getFileGlobal h)
         141 -> fmap (\b -> (addr, BlockStripElem addr b)) (replicateM count $ getStripElem h)
         142 -> fmap (\b -> (addr, BlockStrip addr b)) (replicateM count $ getStrip h)
         143 -> fmap (\b -> (addr, BlockPluginSeq addr b)) (replicateM count $ getPluginSeq h)
         144 -> fmap (\b -> (addr, BlockSequence addr b)) (replicateM count $ getSequence h)
         145 -> fmap (\b -> (addr, BlockMetaStack addr b)) (replicateM count $ getMetaStack h)
         146 -> fmap (\b -> (addr, BlockEditing addr b)) (replicateM count $ getEditing h)
         147 -> fmap (\b -> (addr, BlockWipeVars addr b)) (replicateM count $ getWipeVars h)
         148 -> fmap (\b -> (addr, BlockGlowVars addr b)) (replicateM count $ getGlowVars h)
         149 -> fmap (\b -> (addr, BlockTransformVars addr b)) (replicateM count $ getTransformVars h)
         150 -> fmap (\b -> (addr, BlockSolidColorVars addr b)) (replicateM count $ getSolidColorVars h)
         151 -> fmap (\b -> (addr, BlockSpeedControlVars addr b)) (replicateM count $ getSpeedControlVars h)
         152 -> fmap (\b -> (addr, BlockEffect addr b)) (replicateM count $ getEffect h)
         153 -> fmap (\b -> (addr, BlockBuildEff addr b)) (replicateM count $ getBuildEff h)
         154 -> fmap (\b -> (addr, BlockPartEff addr b)) (replicateM count $ getPartEff h)
         155 -> fmap (\b -> (addr, BlockWaveEff addr b)) (replicateM count $ getWaveEff h)
         156 -> fmap (\b -> (addr, BlockTreeStoreElem addr b)) (replicateM count $ getTreeStoreElem h)
         157 -> fmap (\b -> (addr, BlockTreeStore addr b)) (replicateM count $ getTreeStore h)
         158 -> fmap (\b -> (addr, BlockOops addr b)) (replicateM count $ getOops h)
         159 -> fmap (\b -> (addr, BlockBProperty addr b)) (replicateM count $ getBProperty h)
         160 -> fmap (\b -> (addr, BlockBNearSensor addr b)) (replicateM count $ getBNearSensor h)
         161 -> fmap (\b -> (addr, BlockBMouseSensor addr b)) (replicateM count $ getBMouseSensor h)
         162 -> fmap (\b -> (addr, BlockBTouchSensor addr b)) (replicateM count $ getBTouchSensor h)
         163 -> fmap (\b -> (addr, BlockBKeyboardSensor addr b)) (replicateM count $ getBKeyboardSensor h)
         164 -> fmap (\b -> (addr, BlockBPropertySensor addr b)) (replicateM count $ getBPropertySensor h)
         165 -> fmap (\b -> (addr, BlockBCollisionSensor addr b)) (replicateM count $ getBCollisionSensor h)
         166 -> fmap (\b -> (addr, BlockBRadarSensor addr b)) (replicateM count $ getBRadarSensor h)
         167 -> fmap (\b -> (addr, BlockBRandomSensor addr b)) (replicateM count $ getBRandomSensor h)
         168 -> fmap (\b -> (addr, BlockBRaySensor addr b)) (replicateM count $ getBRaySensor h)
         169 -> fmap (\b -> (addr, BlockBMessageSensor addr b)) (replicateM count $ getBMessageSensor h)
         170 -> fmap (\b -> (addr, BlockBSensor addr b)) (replicateM count $ getBSensor h)
         171 -> fmap (\b -> (addr, BlockBJoystickSensor addr b)) (replicateM count $ getBJoystickSensor h)
         172 -> fmap (\b -> (addr, BlockBExpressionCont addr b)) (replicateM count $ getBExpressionCont h)
         173 -> fmap (\b -> (addr, BlockBPythonCont addr b)) (replicateM count $ getBPythonCont h)
         174 -> fmap (\b -> (addr, BlockBController addr b)) (replicateM count $ getBController h)
         175 -> fmap (\b -> (addr, BlockBAddObjectActuator addr b)) (replicateM count $ getBAddObjectActuator h)
         176 -> fmap (\b -> (addr, BlockBActionActuator addr b)) (replicateM count $ getBActionActuator h)
         177 -> fmap (\b -> (addr, BlockBSoundActuator addr b)) (replicateM count $ getBSoundActuator h)
         178 -> fmap (\b -> (addr, BlockBCDActuator addr b)) (replicateM count $ getBCDActuator h)
         179 -> fmap (\b -> (addr, BlockBEditObjectActuator addr b)) (replicateM count $ getBEditObjectActuator h)
         180 -> fmap (\b -> (addr, BlockBSceneActuator addr b)) (replicateM count $ getBSceneActuator h)
         181 -> fmap (\b -> (addr, BlockBPropertyActuator addr b)) (replicateM count $ getBPropertyActuator h)
         182 -> fmap (\b -> (addr, BlockBObjectActuator addr b)) (replicateM count $ getBObjectActuator h)
         183 -> fmap (\b -> (addr, BlockBIpoActuator addr b)) (replicateM count $ getBIpoActuator h)
         184 -> fmap (\b -> (addr, BlockBCameraActuator addr b)) (replicateM count $ getBCameraActuator h)
         185 -> fmap (\b -> (addr, BlockBConstraintActuator addr b)) (replicateM count $ getBConstraintActuator h)
         186 -> fmap (\b -> (addr, BlockBGroupActuator addr b)) (replicateM count $ getBGroupActuator h)
         187 -> fmap (\b -> (addr, BlockBRandomActuator addr b)) (replicateM count $ getBRandomActuator h)
         188 -> fmap (\b -> (addr, BlockBMessageActuator addr b)) (replicateM count $ getBMessageActuator h)
         189 -> fmap (\b -> (addr, BlockBGameActuator addr b)) (replicateM count $ getBGameActuator h)
         190 -> fmap (\b -> (addr, BlockBVisibilityActuator addr b)) (replicateM count $ getBVisibilityActuator h)
         191 -> fmap (\b -> (addr, BlockBActuator addr b)) (replicateM count $ getBActuator h)
         192 -> fmap (\b -> (addr, BlockFreeCamera addr b)) (replicateM count $ getFreeCamera h)
         193 -> fmap (\b -> (addr, BlockBSound addr b)) (replicateM count $ getBSound h)
         194 -> fmap (\b -> (addr, BlockBSoundListener addr b)) (replicateM count $ getBSoundListener h)
         195 -> fmap (\b -> (addr, BlockSpaceSound addr b)) (replicateM count $ getSpaceSound h)
         196 -> fmap (\b -> (addr, BlockGroupObject addr b)) (replicateM count $ getGroupObject h)
         197 -> fmap (\b -> (addr, BlockGroup addr b)) (replicateM count $ getGroup h)
         198 -> fmap (\b -> (addr, BlockBone addr b)) (replicateM count $ getBone h)
         199 -> fmap (\b -> (addr, BlockBArmature addr b)) (replicateM count $ getBArmature h)
         200 -> fmap (\b -> (addr, BlockBPoseChannel addr b)) (replicateM count $ getBPoseChannel h)
         201 -> fmap (\b -> (addr, BlockBPose addr b)) (replicateM count $ getBPose h)
         202 -> fmap (\b -> (addr, BlockBActionChannel addr b)) (replicateM count $ getBActionChannel h)
         203 -> fmap (\b -> (addr, BlockBAction addr b)) (replicateM count $ getBAction h)
         204 -> fmap (\b -> (addr, BlockSpaceAction addr b)) (replicateM count $ getSpaceAction h)
         205 -> fmap (\b -> (addr, BlockBConstraintChannel addr b)) (replicateM count $ getBConstraintChannel h)
         206 -> fmap (\b -> (addr, BlockBConstraint addr b)) (replicateM count $ getBConstraint h)
         207 -> fmap (\b -> (addr, BlockBKinematicConstraint addr b)) (replicateM count $ getBKinematicConstraint h)
         208 -> fmap (\b -> (addr, BlockBTrackToConstraint addr b)) (replicateM count $ getBTrackToConstraint h)
         209 -> fmap (\b -> (addr, BlockBRotateLikeConstraint addr b)) (replicateM count $ getBRotateLikeConstraint h)
         210 -> fmap (\b -> (addr, BlockBLocateLikeConstraint addr b)) (replicateM count $ getBLocateLikeConstraint h)
         211 -> fmap (\b -> (addr, BlockBMinMaxConstraint addr b)) (replicateM count $ getBMinMaxConstraint h)
         212 -> fmap (\b -> (addr, BlockBSizeLikeConstraint addr b)) (replicateM count $ getBSizeLikeConstraint h)
         213 -> fmap (\b -> (addr, BlockBActionConstraint addr b)) (replicateM count $ getBActionConstraint h)
         214 -> fmap (\b -> (addr, BlockBLockTrackConstraint addr b)) (replicateM count $ getBLockTrackConstraint h)
         215 -> fmap (\b -> (addr, BlockBFollowPathConstraint addr b)) (replicateM count $ getBFollowPathConstraint h)
         216 -> fmap (\b -> (addr, BlockBDistanceLimitConstraint addr b)) (replicateM count $ getBDistanceLimitConstraint h)
         217 -> fmap (\b -> (addr, BlockBRotationConstraint addr b)) (replicateM count $ getBRotationConstraint h)
         218 -> fmap (\b -> (addr, BlockBStretchToConstraint addr b)) (replicateM count $ getBStretchToConstraint h)
         219 -> fmap (\b -> (addr, BlockBLocLimitConstraint addr b)) (replicateM count $ getBLocLimitConstraint h)
         220 -> fmap (\b -> (addr, BlockBRotLimitConstraint addr b)) (replicateM count $ getBRotLimitConstraint h)
         221 -> fmap (\b -> (addr, BlockBSizeLimitConstraint addr b)) (replicateM count $ getBSizeLimitConstraint h)
         222 -> fmap (\b -> (addr, BlockBRigidBodyJointConstraint addr b)) (replicateM count $ getBRigidBodyJointConstraint h)
         223 -> fmap (\b -> (addr, BlockBClampToConstraint addr b)) (replicateM count $ getBClampToConstraint h)
         224 -> fmap (\b -> (addr, BlockBActionModifier addr b)) (replicateM count $ getBActionModifier h)
         225 -> fmap (\b -> (addr, BlockBActionStrip addr b)) (replicateM count $ getBActionStrip h)
         226 -> fmap (\b -> (addr, BlockBNodeStack addr b)) (replicateM count $ getBNodeStack h)
         227 -> fmap (\b -> (addr, BlockBNodeSocket addr b)) (replicateM count $ getBNodeSocket h)
         228 -> fmap (\b -> (addr, BlockBNode addr b)) (replicateM count $ getBNode h)
         229 -> fmap (\b -> (addr, BlockBNodeLink addr b)) (replicateM count $ getBNodeLink h)
         230 -> fmap (\b -> (addr, BlockBNodeTree addr b)) (replicateM count $ getBNodeTree h)
         231 -> fmap (\b -> (addr, BlockNodeImageAnim addr b)) (replicateM count $ getNodeImageAnim h)
         232 -> fmap (\b -> (addr, BlockNodeBlurData addr b)) (replicateM count $ getNodeBlurData h)
         233 -> fmap (\b -> (addr, BlockNodeHueSat addr b)) (replicateM count $ getNodeHueSat h)
         234 -> fmap (\b -> (addr, BlockNodeImageFile addr b)) (replicateM count $ getNodeImageFile h)
         235 -> fmap (\b -> (addr, BlockNodeChroma addr b)) (replicateM count $ getNodeChroma h)
         236 -> fmap (\b -> (addr, BlockNodeGeometry addr b)) (replicateM count $ getNodeGeometry h)
         237 -> fmap (\b -> (addr, BlockNodeVertexCol addr b)) (replicateM count $ getNodeVertexCol h)
         238 -> fmap (\b -> (addr, BlockNodeDefocus addr b)) (replicateM count $ getNodeDefocus h)
         239 -> fmap (\b -> (addr, BlockCurveMapPoint addr b)) (replicateM count $ getCurveMapPoint h)
         240 -> fmap (\b -> (addr, BlockCurveMap addr b)) (replicateM count $ getCurveMap h)
         241 -> fmap (\b -> (addr, BlockCurveMapping addr b)) (replicateM count $ getCurveMapping h)
         242 -> fmap (\b -> (addr, BlockBrushClone addr b)) (replicateM count $ getBrushClone h)
         243 -> fmap (\b -> (addr, BlockBrush addr b)) (replicateM count $ getBrush h)
         244 -> fmap (\b -> (addr, BlockCustomDataLayer addr b)) (replicateM count $ getCustomDataLayer h)
         245 -> fmap (\b -> (addr, BlockCustomData addr b)) (replicateM count $ getCustomData h)
         i -> error $ "Unkown SDNA index " ++ show i

